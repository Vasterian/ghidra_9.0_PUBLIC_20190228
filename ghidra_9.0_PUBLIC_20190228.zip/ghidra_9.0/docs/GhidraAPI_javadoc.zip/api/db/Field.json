{"implements":["java.lang.Comparable"],"javadoc":"<code>Field<\/code> is an abstract data wrapper for use with Records.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a long value.\n All fixed-length field objects must implement this method\n@return long value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getLongValue","comment":"Get field as a long value.\n All fixed-length field objects must implement this method","params":[],"throws":[],"return":{"type_long":"long","comment":"long value","type_short":"long"}},{"javadoc":"Set field's long value.\n All fixed-length field objects must implement this method\n@param value long value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setLongValue","comment":"Set field's long value.\n All fixed-length field objects must implement this method","params":[{"type_long":"long","name":"value","comment":"long value","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as an integer value.\n@return integer value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getIntValue","comment":"Get field as an integer value.","params":[],"throws":[],"return":{"type_long":"int","comment":"integer value","type_short":"int"}},{"javadoc":"Set field's integer value.\n@param value integer value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setIntValue","comment":"Set field's integer value.","params":[{"type_long":"int","name":"value","comment":"integer value","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a short value.\n@return short value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getShortValue","comment":"Get field as a short value.","params":[],"throws":[],"return":{"type_long":"short","comment":"short value","type_short":"short"}},{"javadoc":"Set field's short value.\n@param value short value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setShortValue","comment":"Set field's short value.","params":[{"type_long":"short","name":"value","comment":"short value","type_short":"short"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a byte value.\n@return byte value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getByteValue","comment":"Get field as a byte value.","params":[],"throws":[],"return":{"type_long":"byte","comment":"byte value","type_short":"byte"}},{"javadoc":"Set field's byte value.\n@param value byte value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setByteValue","comment":"Set field's byte value.","params":[{"type_long":"byte","name":"value","comment":"byte value","type_short":"byte"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a boolean value.\n@return boolean value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getBooleanValue","comment":"Get field as a boolean value.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"boolean value","type_short":"boolean"}},{"javadoc":"Set field's boolean value.\n@param value boolean value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setBooleanValue","comment":"Set field's boolean value.","params":[{"type_long":"boolean","name":"value","comment":"boolean value","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get data as a byte array.\n@return byte[]","static":false,"name":"getBinaryData","comment":"Get data as a byte array.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"byte[]","type_short":"byte[]"}},{"javadoc":"Set data from binary byte array.\n All variable-length fields must implement this method.\n@param bytes field data","static":false,"name":"setBinaryData","comment":"Set data from binary byte array.\n All variable-length fields must implement this method.","params":[{"type_long":"byte[]","name":"bytes","comment":"field data","type_short":"byte[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get field as a String value.\n@return String value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"getString","comment":"Get field as a String value.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"String value","type_short":"String"}},{"javadoc":"Set field's String value.\n@param str String value\n@throws IllegalFieldAccessException thrown if method is not supported by specific\n Field instance.","static":false,"name":"setString","comment":"Set field's String value.","params":[{"type_long":"java.lang.String","name":"str","comment":"String value","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@return true if a Field instance is variable length, else false.","static":false,"name":"isVariableLength","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if a Field instance is variable length, else false.","type_short":"boolean"}},{"javadoc":"Create new instance of this field type.\n@param fieldValue initial field value.\n@return long","static":false,"name":"newField","comment":"Create new instance of this field type.","params":[{"type_long":"db.Field","name":"fieldValue","comment":"initial field value.","type_short":"Field"}],"throws":[],"return":{"type_long":"db.Field","comment":"long","type_short":"Field"}},{"javadoc":"Create new instance of this field type.\n@return long","static":false,"name":"newField","comment":"Create new instance of this field type.","params":[],"throws":[],"return":{"type_long":"db.Field","comment":"long","type_short":"Field"}},{"javadoc":"","static":false,"name":"equals","comment":"","params":[{"type_long":"java.lang.Object","name":"obj","comment":"","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"hashCode","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getValueAsString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"Field","comment":"Field is an abstract data wrapper for use with Records.","fields":[]}

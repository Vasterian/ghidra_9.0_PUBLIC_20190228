{"implements":[],"javadoc":"","static":false,"extends":"generic.test.AbstractGenericTest","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setUp","comment":"","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"tearDown","comment":"","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test normal record storage within a leaf node.\n Chained-buffers will not be utilized.\n@throws IOException","static":false,"name":"testInsertSmallLongKeyRecord","comment":"Test normal record storage within a leaf node.\n Chained-buffers will not be utilized.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test normal record storage within a leaf node.\n Use empty value for variable length fields.\n Chained-buffers will not be utilized.\n@throws IOException","static":false,"name":"testInsertLongKeyRecordWithEmptyField","comment":"Test normal record storage within a leaf node.\n Use empty value for variable length fields.\n Chained-buffers will not be utilized.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test normal record storage within a leaf node.\n Use NULL value for variable length fields.\n Chained-buffers will not be utilized.\n@throws IOException","static":false,"name":"testInsertLongKeyRecordWithNullField","comment":"Test normal record storage within a leaf node.\n Use NULL value for variable length fields.\n Chained-buffers will not be utilized.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test the use of chained-buffers for record storage.\n Chained-buffers will not utilize an index buffer.\n@throws IOException","static":false,"name":"testInsertSingleChainedBufferLongKeyRecord","comment":"Test the use of chained-buffers for record storage.\n Chained-buffers will not utilize an index buffer.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 1 buffer for storing indexes.\n@throws IOException","static":false,"name":"testInsertMultChainedBuffersLongKeyRecord","comment":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 1 buffer for storing indexes.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 3 buffers for storing indexes.\n@throws IOException","static":false,"name":"testInsertVeryLargeChainedBuffersLongKeyRecord","comment":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 3 buffers for storing indexes.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test normal record storage within a leaf node.\n Chained-buffers will not be utilized.\n@throws IOException","static":false,"name":"testGetSmallLongKeyRecord","comment":"Test normal record storage within a leaf node.\n Chained-buffers will not be utilized.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test the use of chained-buffers for record storage.\n Chained-buffers will not utilize an index buffer.\n@throws IOException","static":false,"name":"testGetSingleChainedBufferLongKeyRecord","comment":"Test the use of chained-buffers for record storage.\n Chained-buffers will not utilize an index buffer.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 1 buffer for storing indexes.\n@throws IOException","static":false,"name":"testGetMultChainedBuffersLongKeyRecord","comment":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 1 buffer for storing indexes.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 3 buffers for storing indexes.\n@throws IOException","static":false,"name":"testGetVeryLargeChainedBuffersLongKeyRecord","comment":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 3 buffers for storing indexes.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test normal record storage within a leaf node.\n Chained-buffers will not be utilized.\n@throws IOException","static":false,"name":"testGetStoredSmallLongKeyRecord","comment":"Test normal record storage within a leaf node.\n Chained-buffers will not be utilized.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test the use of chained-buffers for record storage.\n Chained-buffers will not utilize an index buffer.\n@throws IOException","static":false,"name":"testGetStoredSingleChainedBufferLongKeyRecord","comment":"Test the use of chained-buffers for record storage.\n Chained-buffers will not utilize an index buffer.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 1 buffer for storing indexes.\n@throws IOException","static":false,"name":"testGetStoredMultChainedBuffersLongKeyRecord","comment":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 1 buffer for storing indexes.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 3 buffers for storing indexes.\n@throws IOException","static":false,"name":"testGetStoredVeryLargeChainedBuffersLongKeyRecord","comment":"Test the use of chained-buffers for record storage.\n Chained-buffers will be forced to utilize 3 buffers for storing indexes.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testGetMissingLongKeyRecord","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testStoredGetMissingLongKeyRecord","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testRandomLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testForwardLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testBackwardLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testStoredLongKeyRandomRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testStoredForwardLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testStoredBackwardLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testBigRandomLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testBigForwardLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testBigBackwardLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testBigStoredRandomLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testBigStoredForwardLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testBigStoredBackwardLongKeyRecordIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testRandomLongKeyIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testForwardLongKeyIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testForwardSkippingLongKeyIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testForwardDeleteIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testReverseDeleteIterator","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testGetLongKeyRecordAfter","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testGetLongKeyRecordAtOrAfter","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testGetLongKeyRecordAtOrBefore","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testDeleteLongKeyRecord","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testForwardDeleteLongKeyRecord","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testReverseDeleteLongKeyRecord","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testDeleteAllLongKeyRecords","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testDeleteLongKeyRangeRecords","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testDeleteLongKeyRangeRecords2","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testDeleteLongKeyRangeAllRecords","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testUpdateLongKeyRecord","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testUpdateBigLongKeyRecord","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testUpdateUndoLongKeyRecords","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testUpdateUndoRedoLongKeyRecords","comment":"","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DBLongKeyTableTest","comment":"","fields":[]}

{"implements":[],"javadoc":"Dialog for importing a file into Ghidra as a program.","static":false,"extends":"docking.DialogComponentProvider","methods":[{"javadoc":"Construct a new dialog for importing a file as a new program into Ghidra.\n@param tool the active tool that spawned this dialog.\n@param programManager program manager to open imported file with or null\n@param loadMap the loaders and their corresponding load specifications\n@param byteProvider the ByteProvider for getting the bytes from the file to be imported.\n@param suggestedDestinationPath optional string path that will be pre-pended to the destination\n filename.  Any path specified in the destination filename field will be created when\n the user performs the import (as opposed to the {@link #setDestinationFolder(DomainFolder) destination folder}\n option which requires the DomainFolder to already exist). The two destination paths work together\n to specify the final Ghidra project folder where the imported binary is placed.","static":false,"name":"<init>","comment":"Construct a new dialog for importing a file as a new program into Ghidra.","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"the active tool that spawned this dialog.","type_short":"PluginTool"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"program manager to open imported file with or null","type_short":"ProgramManager"},{"type_long":"java.util.Map<ghidra.app.util.opinion.Loader,java.util.Collection<ghidra.app.util.opinion.LoadSpec>>","name":"loadMap","comment":"the loaders and their corresponding load specifications","type_short":"Map"},{"type_long":"ghidra.app.util.bin.ByteProvider","name":"byteProvider","comment":"the ByteProvider for getting the bytes from the file to be imported.","type_short":"ByteProvider"},{"type_long":"java.lang.String","name":"suggestedDestinationPath","comment":"optional string path that will be pre-pended to the destination\n filename.  Any path specified in the destination filename field will be created when\n the user performs the import (as opposed to the #setDestinationFolder(DomainFolder)\n option which requires the DomainFolder to already exist). The two destination paths work together\n to specify the final Ghidra project folder where the imported binary is placed.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the destination folder for the imported program.\n@param folder the folder to store the imported program.","static":false,"name":"setDestinationFolder","comment":"Sets the destination folder for the imported program.","params":[{"type_long":"ghidra.framework.model.DomainFolder","name":"folder","comment":"the folder to store the imported program.","type_short":"DomainFolder"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"close","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ImporterDialog","comment":"Dialog for importing a file into Ghidra as a program.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"LAST_IMPORTFILE_PREFERENCE_KEY","comment":"","type_short":"String","constant_value":"\"Importer.LastFile\""}]}

{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Ensure that a {@link Program}'s metadata includes its import origin.\n@param program imported {@link Program} to modify\n@param fsrl {@link FSRL} of the import source.\n@param monitor {@link TaskMonitor} to use when accessing filesystem stuff.\n@throws CancelledException if user cancels\n@throws IOException if IO error","static":true,"name":"setProgramProperties","comment":"Ensure that a Program's metadata includes its import origin.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"imported Program to modify","type_short":"Program"},{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of the import source.","type_short":"FSRL"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"TaskMonitor to use when accessing filesystem stuff.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if user cancels","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"if IO error","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays the appropriate import dialog for the specified {@link FSRL file}.\n <p>\n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.\n <p>\n@param fsrl {@link FSRL} of the file to import.\n@param destFolder {@link DomainFolder} destination folder where the imported file\n will default to.  (the user will be able to choose a different location).\n@param suggestedDestinationPath optional string path that will automatically be pre-pended\n to the destination filename.\n@param tool {@link PluginTool} will be used as the parent tool for dialogs.\n@param programManager optional {@link ProgramManager} instance to use to open imported binaries with, or null.","static":true,"name":"showImportDialog","comment":"Displays the appropriate import dialog for the specified FSRL.\n \n If the file is a container of other files, a batch import dialog will be used,\n otherwise the normal single file import dialog will be shown.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of the file to import.","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFolder","name":"destFolder","comment":"DomainFolder destination folder where the imported file\n will default to.  (the user will be able to choose a different location).","type_short":"DomainFolder"},{"type_long":"java.lang.String","name":"suggestedDestinationPath","comment":"optional string path that will automatically be pre-pended\n to the destination filename.","type_short":"String"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"PluginTool will be used as the parent tool for dialogs.","type_short":"PluginTool"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"optional ProgramManager instance to use to open imported binaries with, or null.","type_short":"ProgramManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"showAddToProgramDialog","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"","type_short":"FSRL"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Perform file import and open using optional programManager\n@param fsrl import file location\n@param destFolder project destination folder\n@param loadSpec import {@link LoadSpec}\n@param programName program name\n@param options import options\n@param tool tool to which popup dialogs should be associated\n@param programManager program manager to open imported file with or null\n@param monitor task monitor","static":true,"name":"doSingleImport","comment":"Perform file import and open using optional programManager","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"import file location","type_short":"FSRL"},{"type_long":"ghidra.framework.model.DomainFolder","name":"destFolder","comment":"project destination folder","type_short":"DomainFolder"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"import LoadSpec","type_short":"LoadSpec"},{"type_long":"java.lang.String","name":"programName","comment":"program name","type_short":"String"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"import options","type_short":"List"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"tool to which popup dialogs should be associated","type_short":"PluginTool"},{"type_long":"ghidra.app.services.ProgramManager","name":"programManager","comment":"program manager to open imported file with or null","type_short":"ProgramManager"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"doAddToProgram","comment":"","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"","type_short":"FSRL"},{"type_long":"ghidra.app.util.opinion.LoadSpec","name":"loadSpec","comment":"","type_short":"LoadSpec"},{"type_long":"java.util.List<ghidra.app.util.Option>","name":"options","comment":"","type_short":"List"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"tool","comment":"","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ImporterUtilities","comment":"","fields":[{"type_long":"ghidra.util.filechooser.GhidraFileFilter","javadoc":"File extension filter for well known 'loadable' files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.","static":true,"name":"LOADABLE_FILES_FILTER","comment":"File extension filter for well known 'loadable' files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.","type_short":"GhidraFileFilter","constant_value":null},{"type_long":"ghidra.util.filechooser.GhidraFileFilter","javadoc":"File extension filter for well known 'container' files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.","static":true,"name":"CONTAINER_FILES_FILTER","comment":"File extension filter for well known 'container' files for GhidraFileChoosers.\n\n TODO: will be refactored to use file_extension_icon.xml file info.","type_short":"GhidraFileFilter","constant_value":null}]}

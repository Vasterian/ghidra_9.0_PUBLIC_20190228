{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor for Ghidra\n A new test project is established.\n If it already exists it will first be deleted.\n@throws IOException if there is an issue creating a test project","static":false,"name":"<init>","comment":"Constructor for Ghidra\n A new test project is established.\n If it already exists it will first be deleted.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"if there is an issue creating a test project","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor for Ghidra\n A new test project is established using the specified projectName.\n If it already exists it will first be deleted.\n If the test environment is not disposed within 1 minute the tests iwll be aborted\n@param projectName the name of the project\n@throws IOException if there is an issue creating a test project","static":false,"name":"<init>","comment":"Constructor for Ghidra\n A new test project is established using the specified projectName.\n If it already exists it will first be deleted.\n If the test environment is not disposed within 1 minute the tests iwll be aborted","params":[{"type_long":"java.lang.String","name":"projectName","comment":"the name of the project","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is an issue creating a test project","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor for Ghidra\n A new test project is established using the specified projectName.\n If it already exists it will first be deleted.\n@param abortTimeout number of minutes within which this test environment must be\n \t\t  disposed.  If not disposed in a timely manner, System.exit will be invoked.\n@param projectName the name of the project\n@throws IOException if there is an issue creating a test project","static":false,"name":"<init>","comment":"Constructor for Ghidra\n A new test project is established using the specified projectName.\n If it already exists it will first be deleted.","params":[{"type_long":"long","name":"abortTimeout","comment":"number of minutes within which this test environment must be\n \t\t  disposed.  If not disposed in a timely manner, System.exit will be invoked.","type_short":"long"},{"type_long":"java.lang.String","name":"projectName","comment":"the name of the project","type_short":"String"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is an issue creating a test project","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the tool associated with this test environment.\n@return the default test tool for this environment","static":false,"name":"getTool","comment":"Get the tool associated with this test environment.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"the default test tool for this environment","type_short":"PluginTool"}},{"javadoc":"Closes the TestEnv's default tool.  This method is asynchronous, so you\n must wait for the Swing thread to perform the work yourself.\n Watch out for modal dialogs.","static":false,"name":"closeTool","comment":"Closes the TestEnv's default tool.  This method is asynchronous, so you\n must wait for the Swing thread to perform the work yourself.\n Watch out for modal dialogs.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Closes the given tool.  This method is asynchronous, so you must wait for the Swing thread\n to perform the work yourself.  Watch out for modal dialogs.\n@param toolToClose The tool to close.","static":false,"name":"closeTool","comment":"Closes the given tool.  This method is asynchronous, so you must wait for the Swing thread\n to perform the work yourself.  Watch out for modal dialogs.","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"toolToClose","comment":"The tool to close.","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"closeTool","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"toolToClose","comment":"","type_short":"PluginTool"},{"type_long":"boolean","name":"ignoreChanges","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"saveRestoreToolState","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPlugin","comment":"","params":[{"type_long":"java.lang.Class<T>","name":"c","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"T","comment":"","type_short":"T"}},{"javadoc":"Adds and returns the plugin to this env's tool for the given class.   \n \n <P>If you have not created a tool using this env, then the default \n tool from {@link #lazyTool()} is used.  If you have launched a tool, then that tool\n is used.   In the following example, the given plugin is added to the default tool:\n <pre>\n \t\tTestEnv env = new TestEnv();\n \t\tenv.launchDefaultTool();\n \t\tFooPlugin foo = env.addPlugin(FooPlugin.class);\n <\/pre>\n@param c the plugin class\n@return the plugin instance\n@throws PluginException if there is an exception adding the given tool","static":false,"name":"addPlugin","comment":"Adds and returns the plugin to this env's tool for the given class.   \n \n If you have not created a tool using this env, then the default \n tool from #lazyTool() is used.  If you have launched a tool, then that tool\n is used.   In the following example, the given plugin is added to the default tool:\n \n \t\tTestEnv env = new TestEnv();\n \t\tenv.launchDefaultTool();\n \t\tFooPlugin foo = env.addPlugin(FooPlugin.class);\n ","params":[{"type_long":"java.lang.Class<T>","name":"c","comment":"the plugin class","type_short":"Class"}],"throws":[{"type_long":"ghidra.framework.plugintool.util.PluginException","comment":"if there is an exception adding the given tool","type_short":"PluginException"}],"return":{"type_long":"T","comment":"the plugin instance","type_short":"T"}},{"javadoc":"Shows any previously created tool, creating a simple empty tool if not tool has yet \n been created.  \n \n <P>This method is considered sub-standard and users should prefer instead \n {@link #launchDefaultTool()} or {@link #launchDefaultTool(Program)}.\n@return the newly shown tool","static":false,"name":"showTool","comment":"Shows any previously created tool, creating a simple empty tool if not tool has yet \n been created.  \n \n This method is considered sub-standard and users should prefer instead \n #launchDefaultTool() or #launchDefaultTool(Program).","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"the newly shown tool","type_short":"PluginTool"}},{"javadoc":"Shows any previously created tool, creating a simple empty tool if not tool has yet \n been created.  The given program will be opened in the tool.\n \n <P>This method is considered sub-standard and users should prefer instead \n {@link #launchDefaultTool()} or {@link #launchDefaultTool(Program)}.\n@return the newly shown tool","static":false,"name":"showTool","comment":"Shows any previously created tool, creating a simple empty tool if not tool has yet \n been created.  The given program will be opened in the tool.\n \n This method is considered sub-standard and users should prefer instead \n #launchDefaultTool() or #launchDefaultTool(Program).","params":[{"type_long":"ghidra.program.model.listing.Program","name":"p","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"the newly shown tool","type_short":"PluginTool"}},{"javadoc":"","static":false,"name":"waitForWindow","comment":"","params":[{"type_long":"java.lang.String","name":"title","comment":"","type_short":"String"},{"type_long":"int","name":"timeoutMS","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.awt.Window","comment":"","type_short":"Window"}},{"javadoc":"Waits for the first window of the given class.  This method is the same as\n {@link #waitForDialogComponent(Window, Class, int)} with the exception that the parent\n window is assumed to be this instance's tool frame.\n@param ghidraClass The class of the dialog the user desires\n@param maxTimeMS The max amount of time in milliseconds to wait for the requested dialog\n        to appear.\n@return The first occurrence of a dialog that extends the given <tt>ghirdraClass<\/tt>\n@deprecated use instead {@link AbstractDockingTest#waitForDialogComponent(Class)}","static":false,"name":"waitForDialogComponent","comment":"Waits for the first window of the given class.  This method is the same as\n #waitForDialogComponent(Window, Class, int) with the exception that the parent\n window is assumed to be this instance's tool frame.","params":[{"type_long":"java.lang.Class<T>","name":"ghidraClass","comment":"The class of the dialog the user desires","type_short":"Class"},{"type_long":"int","name":"maxTimeMS","comment":"The max amount of time in milliseconds to wait for the requested dialog\n        to appear.","type_short":"int"}],"throws":[],"return":{"type_long":"T","comment":"The first occurrence of a dialog that extends the given ghirdraClass","type_short":"T"}},{"javadoc":"","static":false,"name":"getFrontEndTool","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.main.FrontEndTool","comment":"","type_short":"FrontEndTool"}},{"javadoc":"","static":false,"name":"getFrontEndProvider","comment":"","params":[],"throws":[],"return":{"type_long":"docking.ComponentProvider","comment":"","type_short":"ComponentProvider"}},{"javadoc":"","static":false,"name":"showFrontEndTool","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.main.FrontEndTool","comment":"","type_short":"FrontEndTool"}},{"javadoc":"This method differs from {@link #launchDefaultTool()} in that this method does not set the\n <tt>tool<\/tt> variable in of this <tt>TestEnv<\/tt> instance.","static":false,"name":"createDefaultTool","comment":"This method differs from #launchDefaultTool() in that this method does not set the\n tool variable in of this TestEnv instance.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"","type_short":"PluginTool"}},{"javadoc":"Launches the default tool of the test system (\"CodeBrowser\").\n This method will load the tool from resources and <b>not from the\n user's Ghidra settings<\/b>.\n <p>\n <b>Note:<\/b> Calling this method also changes the tool that this\n instance of the TestEnv is using, which is the reason for the existence\n of this method.\n@return the tool that is launched","static":false,"name":"launchDefaultTool","comment":"Launches the default tool of the test system (\"CodeBrowser\").\n This method will load the tool from resources and not from the\n user's Ghidra settings.\n \n Note: Calling this method also changes the tool that this\n instance of the TestEnv is using, which is the reason for the existence\n of this method.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"the tool that is launched","type_short":"PluginTool"}},{"javadoc":"","static":false,"name":"runScript","comment":"","params":[{"type_long":"java.io.File","name":"script","comment":"","type_short":"File"}],"throws":[{"type_long":"ghidra.framework.plugintool.util.PluginException","comment":"","type_short":"PluginException"}],"return":{"type_long":"ghidra.test.ScriptTaskListener","comment":"","type_short":"ScriptTaskListener"}},{"javadoc":"Returns GhidraProject associated with this environment","static":false,"name":"getGhidraProject","comment":"Returns GhidraProject associated with this environment","params":[],"throws":[],"return":{"type_long":"ghidra.base.project.GhidraProject","comment":"","type_short":"GhidraProject"}},{"javadoc":"A convenience method to close and then reopen the default project created by this TestEnv\n instance.  This will not delete the project between opening and closing and will restore\n the project to its previous state.","static":false,"name":"closeAndReopenProject","comment":"A convenience method to close and then reopen the default project created by this TestEnv\n instance.  This will not delete the project between opening and closing and will restore\n the project to its previous state.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProjectManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ProjectManager","comment":"","type_short":"ProjectManager"}},{"javadoc":"Returns Project associated with this environment","static":false,"name":"getProject","comment":"Returns Project associated with this environment","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.Project","comment":"","type_short":"Project"}},{"javadoc":"","static":false,"name":"restartTool","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"","type_short":"PluginTool"}},{"javadoc":"Launches another default tool, not overwriting this env's current tool.\n@return the new tool","static":false,"name":"launchAnotherDefaultTool","comment":"Launches another default tool, not overwriting this env's current tool.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"the new tool","type_short":"PluginTool"}},{"javadoc":"Returns an array of tools spawned by the Ghidra environment.\n NOTE: This array will not contain any of the TestTools!\n@return an array of tools spawned by the Ghidra environment","static":false,"name":"getGhidraCreatedTools","comment":"Returns an array of tools spawned by the Ghidra environment.\n NOTE: This array will not contain any of the TestTools!","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.Tool[]","comment":"an array of tools spawned by the Ghidra environment","type_short":"ghidra.framework.model.Tool[]"}},{"javadoc":"","static":false,"name":"connectTools","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"producer","comment":"","type_short":"PluginTool"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"consumer","comment":"","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolConnection","comment":"","type_short":"ToolConnection"}},{"javadoc":"","static":false,"name":"disconnectTools","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginTool","name":"producer","comment":"","type_short":"PluginTool"},{"type_long":"ghidra.framework.plugintool.PluginTool","name":"consumer","comment":"","type_short":"PluginTool"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Copies the specified program zip file to the JUnit test project's root folder. <b>This\n means that the program will appear in the FrontEndTool as part of the project.<\/b>  That is\n the only reason to use this method vice openProgram().\n@param programName the name of the program zip file without the \".gzf\" extension.","static":false,"name":"restoreProgram","comment":"Copies the specified program zip file to the JUnit test project's root folder. This\n means that the program will appear in the FrontEndTool as part of the project.  That is\n the only reason to use this method vice openProgram().","params":[{"type_long":"java.lang.String","name":"programName","comment":"the name of the program zip file without the \".gzf\" extension.","type_short":"String"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"","type_short":"FileNotFoundException"}],"return":{"type_long":"ghidra.framework.model.DomainFile","comment":"","type_short":"DomainFile"}},{"javadoc":"","static":true,"name":"findProvidedDataTypeArchive","comment":"","params":[{"type_long":"java.lang.String","name":"relativePathName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"generic.jar.ResourceFile","comment":"","type_short":"ResourceFile"}},{"javadoc":"Creates a project data type archive in the indicated test project folder from the \".gdt\"\n file indicated by the relative pathname.\n@param relativePathName This should be a pathname relative to the \"test_resources\/testdata\"\n \t\t  director or relative to the \"typeinfo\" directory. The name should\n        include the \".gdt\" suffix.\n@param domainFolder the folder in the test project where the archive should be created.\n@param monitor monitor for canceling this restore.\n@return the domain file  that was created in the project","static":false,"name":"restoreDataTypeArchive","comment":"Creates a project data type archive in the indicated test project folder from the \".gdt\"\n file indicated by the relative pathname.","params":[{"type_long":"java.lang.String","name":"relativePathName","comment":"This should be a pathname relative to the \"test_resources\/testdata\"\n \t\t  director or relative to the \"typeinfo\" directory. The name should\n        include the \".gdt\" suffix.","type_short":"String"},{"type_long":"ghidra.framework.model.DomainFolder","name":"domainFolder","comment":"the folder in the test project where the archive should be created.","type_short":"DomainFolder"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"}],"return":{"type_long":"ghidra.framework.model.DomainFile","comment":"the domain file  that was created in the project","type_short":"DomainFile"}},{"javadoc":"Save a program to the cached program store.  A SaveAs will be performed on the\n program to its cached storage location.\n@param progName program name\n@param program program object\n@param replace if true any existing cached database with the same name will be replaced\n@param monitor task monitor\n@throws DuplicateNameException if already cached","static":false,"name":"saveToCache","comment":"Save a program to the cached program store.  A SaveAs will be performed on the\n program to its cached storage location.","params":[{"type_long":"java.lang.String","name":"progName","comment":"program name","type_short":"String"},{"type_long":"ghidra.program.database.ProgramDB","name":"program","comment":"program object","type_short":"ProgramDB"},{"type_long":"boolean","name":"replace","comment":"if true any existing cached database with the same name will be replaced","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"if already cached","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determine if specified program already exists with the program cache\n@param programName the name\n@return true if specified program already exists with the program cache","static":false,"name":"isProgramCached","comment":"Determine if specified program already exists with the program cache","params":[{"type_long":"java.lang.String","name":"programName","comment":"the name","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if specified program already exists with the program cache","type_short":"boolean"}},{"javadoc":"Remove specified program from cache\n@param programName the name","static":false,"name":"removeFromProgramCache","comment":"Remove specified program from cache","params":[{"type_long":"java.lang.String","name":"programName","comment":"the name","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"loadAnalyzedNotepad","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.ProgramDB","comment":"","type_short":"ProgramDB"}},{"javadoc":"Open a read-only test program from the test data directory.\n This program must be released prior to disposing this test environment.\n NOTE: Some tests rely on this method returning null when file does\n not yet exist within the resource area (e.g., CUnit binaries for Processor Tests)\n@param programName name of program database within the test data directory.\n@return program or null if program file not found","static":false,"name":"getProgram","comment":"Open a read-only test program from the test data directory.\n This program must be released prior to disposing this test environment.\n NOTE: Some tests rely on this method returning null when file does\n not yet exist within the resource area (e.g., CUnit binaries for Processor Tests)","params":[{"type_long":"java.lang.String","name":"programName","comment":"name of program database within the test data directory.","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.database.ProgramDB","comment":"program or null if program file not found","type_short":"ProgramDB"}},{"javadoc":"Launches the default tool of the test system (\"CodeBrowser\") using the\n given program.   This method will load the tool from resources and <b>not from the\n user's Ghidra settings<\/b>.\n <p>\n <b>Note:<\/b> Calling this method also changes the tool that this\n instance of the TestEnv is using, which is the reason for the existence\n of this method.\n@param program The program to load into the default tool; may be null\n@return the tool that is launched","static":false,"name":"launchDefaultTool","comment":"Launches the default tool of the test system (\"CodeBrowser\") using the\n given program.   This method will load the tool from resources and not from the\n user's Ghidra settings.\n \n Note: Calling this method also changes the tool that this\n instance of the TestEnv is using, which is the reason for the existence\n of this method.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"The program to load into the default tool; may be null","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"the tool that is launched","type_short":"PluginTool"}},{"javadoc":"Launches a tool of the given name using the given domain file.\n <p>\n Note: the tool returned will have auto save disabled by default.\n@return the tool that is launched","static":false,"name":"launchTool","comment":"Launches a tool of the given name using the given domain file.\n \n Note: the tool returned will have auto save disabled by default.","params":[{"type_long":"java.lang.String","name":"toolName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"the tool that is launched","type_short":"PluginTool"}},{"javadoc":"Launches a tool of the given name using the given domain file.\n <p>\n Note: the tool returned will have auto save disabled by default.\n@param toolName the name of the tool to launch\n@param domainFile The domain file used to launch the tool; may be null\n@return the tool that is launched","static":false,"name":"launchTool","comment":"Launches a tool of the given name using the given domain file.\n \n Note: the tool returned will have auto save disabled by default.","params":[{"type_long":"java.lang.String","name":"toolName","comment":"the name of the tool to launch","type_short":"String"},{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"The domain file used to launch the tool; may be null","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.PluginTool","comment":"the tool that is launched","type_short":"PluginTool"}},{"javadoc":"Sets the auto-save feature for all tool instances running under the {@link FrontEndTool}\n created by this TestEnv instance.  Auto-save is off by default when testing.\n@param enabled true enables auto-save","static":false,"name":"setAutoSaveEnabled","comment":"Sets the auto-save feature for all tool instances running under the FrontEndTool\n created by this TestEnv instance.  Auto-save is off by default when testing.","params":[{"type_long":"boolean","name":"enabled","comment":"true enables auto-save","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Import a program as binary.\n@param programName resource name that is the name of the program\n@param language language\n@param compilerSpec compiler spec\n@return program\n@throws IOException\n@throws LanguageNotFoundException\n@throws VersionException\n@throws InvalidNameException\n@throws DuplicateNameException\n@throws CancelledException","static":false,"name":"loadResourceProgramAsBinary","comment":"Import a program as binary.","params":[{"type_long":"java.lang.String","name":"programName","comment":"resource name that is the name of the program","type_short":"String"},{"type_long":"ghidra.program.model.lang.Language","name":"language","comment":"language","type_short":"Language"},{"type_long":"ghidra.program.model.lang.CompilerSpec","name":"compilerSpec","comment":"compiler spec","type_short":"CompilerSpec"}],"throws":[{"type_long":"ghidra.program.model.lang.LanguageNotFoundException","comment":"","type_short":"LanguageNotFoundException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"program","type_short":"Program"}},{"javadoc":"Import a program as binary.\n@param programName resource name that is the name of the program\n@param processor processor\n@return program\n@throws IOException\n@throws LanguageNotFoundException\n@throws VersionException\n@throws InvalidNameException\n@throws DuplicateNameException\n@throws CancelledException","static":false,"name":"loadResourceProgramAsBinary","comment":"Import a program as binary.","params":[{"type_long":"java.lang.String","name":"programName","comment":"resource name that is the name of the program","type_short":"String"},{"type_long":"ghidra.program.model.lang.Processor","name":"processor","comment":"processor","type_short":"Processor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"},{"type_long":"ghidra.util.exception.VersionException","comment":"","type_short":"VersionException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"ghidra.program.model.listing.Program","comment":"program","type_short":"Program"}},{"javadoc":"Release a program which was obtained from this test environment.\n@param program the program","static":false,"name":"release","comment":"Release a program which was obtained from this test environment.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Opens the given program in the test tool.\n@param program the program to open","static":false,"name":"open","comment":"Opens the given program in the test tool.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program to open","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Closes the given program, ignoring all changes, for each tool known to this TestEnv.\n@param p the program to close","static":false,"name":"close","comment":"Closes the given program, ignoring all changes, for each tool known to this TestEnv.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"p","comment":"the program to close","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"resetDefaultTools","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"TestEnv","comment":"","fields":[]}

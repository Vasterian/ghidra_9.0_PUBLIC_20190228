{"implements":["java.io.Serializable"],"javadoc":"Class to generate int indexes to be used for arrays or tables.  If a location\n or entry in a table becomes available, the index for that location is released.\n This class manages the use and reuse of those indexes.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs an IntIndexManager.","static":false,"name":"<init>","comment":"Constructs an IntIndexManager.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the smallest unused index value.\n@exception IndexOutOfBoundsException thrown if there are no unused\n indexes.","static":false,"name":"allocate","comment":"Returns the smallest unused index value.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns the index value so that it can be reused.\n@param index the index to be free'd for reuse.","static":false,"name":"deallocate","comment":"Returns the index value so that it can be reused.","params":[{"type_long":"int","name":"index","comment":"the index to be free'd for reuse.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"frees all index values.","static":false,"name":"clear","comment":"frees all index values.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"IntIndexManager","comment":"Class to generate int indexes to be used for arrays or tables.  If a location\n or entry in a table becomes available, the index for that location is released.\n This class manages the use and reuse of those indexes.","fields":[]}

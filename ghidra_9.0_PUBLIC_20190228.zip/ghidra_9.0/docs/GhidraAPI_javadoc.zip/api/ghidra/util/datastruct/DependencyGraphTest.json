{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testSimpleCase","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testMultipleDependencyCase","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testPop","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testPopWithCycle","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testCycleDetection","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testCycleDetectionDoesNotCorruptGraph","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"testRandomProcessingOfDependenciesSimulation","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Given a dependency map, does the captured linear order of execution \n satisfy the ordering constraints?\n@param <T> the type of the keys being compared\n@param dependencyGraph a map where keys are predecessors and values \n        are successors that depend on the respective key\n@param visitedOrder the actual execution order to be tested\n@return ","static":false,"name":"checkOrderSatisfiesDependencies","comment":"Given a dependency map, does the captured linear order of execution \n satisfy the ordering constraints?","params":[{"type_long":"ghidra.util.graph.DependencyGraph<java.lang.String>","name":"dependencyGraph","comment":"a map where keys are predecessors and values \n        are successors that depend on the respective key","type_short":"DependencyGraph"},{"type_long":"java.util.List<java.lang.String>","name":"visitedOrder","comment":"the actual execution order to be tested","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DependencyGraphTest","comment":"","fields":[]}

{"implements":[],"javadoc":"","static":false,"extends":"generic.test.AbstractGenericTest","methods":[{"javadoc":"Constructor\n@param arg0","static":false,"name":"<init>","comment":"Constructor","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"regression test driver","static":false,"name":"testBitTree","comment":"regression test driver","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"expect","comment":"","params":[{"type_long":"ghidra.util.datastruct.BitTree","name":"bt","comment":"","type_short":"BitTree"},{"type_long":"int[]","name":"values","comment":"","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"expectBackwards","comment":"","params":[{"type_long":"ghidra.util.datastruct.BitTree","name":"bt","comment":"","type_short":"BitTree"},{"type_long":"int[]","name":"values","comment":"","type_short":"int[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"BitTreeTest","comment":"","fields":[]}

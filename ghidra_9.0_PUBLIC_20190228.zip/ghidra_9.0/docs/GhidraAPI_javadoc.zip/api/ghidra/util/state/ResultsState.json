{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor from a function entry point.  Program context is used to establish the entry context state.\n Analysis is performed during construction.\n@param entryAddr function entry point\n@param analyzer function analysis call-back handler\n@param program program containing function\n@param maintainInstructionResults\n@param monitor task monitor\n@throws CancelledException","static":false,"name":"<init>","comment":"Constructor from a function entry point.  Program context is used to establish the entry context state.\n Analysis is performed during construction.","params":[{"type_long":"ghidra.program.model.address.Address","name":"entryPt","comment":"","type_short":"Address"},{"type_long":"ghidra.util.state.FunctionAnalyzer","name":"analyzer","comment":"function analysis call-back handler","type_short":"FunctionAnalyzer"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"program containing function","type_short":"Program"},{"type_long":"boolean","name":"maintainInstructionResults","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor for replaying over a specified set of context states indicated via a flowList.\n Analysis is performed during construction.\n@param flowList ordered list of context state entry points\n@param analyzer function analysis call-back handler\n@param entryState context state which feeds into the first point within the flowList\n@param maintainInstructionResults\n@param monitor task monitor\n@throws CancelledException","static":false,"name":"<init>","comment":"Constructor for replaying over a specified set of context states indicated via a flowList.\n Analysis is performed during construction.","params":[{"type_long":"java.util.LinkedList<ghidra.program.model.pcode.SequenceNumber>","name":"flowList","comment":"ordered list of context state entry points","type_short":"LinkedList"},{"type_long":"ghidra.util.state.FunctionAnalyzer","name":"analyzer","comment":"function analysis call-back handler","type_short":"FunctionAnalyzer"},{"type_long":"ghidra.util.state.ContextState","name":"entryState","comment":"context state which feeds into the first point within the flowList","type_short":"ContextState"},{"type_long":"boolean","name":"maintainInstructionResults","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns entry point associated with this results state.","static":false,"name":"getEntryPoint","comment":"Returns entry point associated with this results state.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.SequenceNumber","comment":"","type_short":"SequenceNumber"}},{"javadoc":"Returns set of addresses analyzed with function.\n (In-line functions not included)","static":false,"name":"getExaminedSet","comment":"Returns set of addresses analyzed with function.\n (In-line functions not included)","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"Set an assumed register value immediately following construction and prior to flow.\n@param register (context register not permitted)\n@param value","static":false,"name":"assume","comment":"Set an assumed register value immediately following construction and prior to flow.","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"(context register not permitted)","type_short":"Register"},{"type_long":"long","name":"value","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getContextStates","comment":"","params":[{"type_long":"ghidra.program.model.pcode.SequenceNumber","name":"seq","comment":"","type_short":"SequenceNumber"}],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.util.state.ContextState>","comment":"","type_short":"Iterator"}},{"javadoc":"Generate simplified operation\n@param pcodeOp pcode operation\n@param values values associated with pcodeOp inputs\n@return operation output result or simplification of an operation.","static":true,"name":"simplify","comment":"Generate simplified operation","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"pcodeOp","comment":"pcode operation","type_short":"PcodeOp"},{"type_long":"ghidra.program.model.pcode.Varnode[]","name":"values","comment":"values associated with pcodeOp inputs","type_short":"ghidra.program.model.pcode.Varnode[]"},{"type_long":"ghidra.program.model.address.AddressFactory","name":"addrFactory","comment":"","type_short":"AddressFactory"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"operation output result or simplification of an operation.","type_short":"Varnode"}},{"javadoc":"Returns collection of frame pointer candidates.","static":false,"name":"getFramePointerCandidates","comment":"Returns collection of frame pointer candidates.","params":[],"throws":[],"return":{"type_long":"java.util.Collection<ghidra.util.state.ResultsState.FramePointerCandidate>","comment":"","type_short":"Collection"}},{"javadoc":"Returns the set of registers which were modified yet preserved.","static":false,"name":"getPreservedRegisters","comment":"Returns the set of registers which were modified yet preserved.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.lang.Register>","comment":"","type_short":"List"}},{"javadoc":"Returns the set of registers which were modified","static":false,"name":"getModifiedRegisters","comment":"Returns the set of registers which were modified","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.lang.Register>","comment":"","type_short":"List"}},{"javadoc":"Returns list of registers which are read before written.","static":false,"name":"getInputRegisters","comment":"Returns list of registers which are read before written.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.program.model.lang.Register>","comment":"","type_short":"List"}},{"javadoc":"@return Varnode that represents the stack pointer register","static":false,"name":"getStackPointerVarnode","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"Varnode that represents the stack pointer register","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"getReturnAddresses","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Set<ghidra.program.model.pcode.SequenceNumber>","comment":"","type_short":"Set"}},{"javadoc":"","static":false,"name":"getReturnValues","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"varnode","comment":"","type_short":"Varnode"}],"throws":[],"return":{"type_long":"java.util.Set<ghidra.program.model.pcode.Varnode>","comment":"","type_short":"Set"}},{"javadoc":"","static":true,"name":"getUnsignedOffset","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"v","comment":"","type_short":"Varnode"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":true,"name":"getSignedOffset","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"v","comment":"","type_short":"Varnode"}],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}}],"name":"ResultsState","comment":"","fields":[]}

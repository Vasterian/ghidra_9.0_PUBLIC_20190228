{"implements":[],"javadoc":"The workhorse of semantic resolution for the assembler\n \n This class takes a parse tree and some additional information (start address, context, etc.) and\n attempts to determine possible encodings using the semantics associated with each branch of the\n given parse tree. Details of this process are described in {@link SleighAssemblerBuilder}.\n@see SleighAssemblerBuilder","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a resolver for the given parse tree\n@param lang\n@param instStart the byte offset where the instruction will start\n@param tree the parse tree\n@param context the context expected at {@code instStart}\n@param ctxGraph the context transition graph used to resolve purely-recursive productions","static":false,"name":"<init>","comment":"Construct a resolver for the given parse tree","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.SleighLanguage","name":"lang","comment":"","type_short":"SleighLanguage"},{"type_long":"long","name":"instStart","comment":"the byte offset where the instruction will start","type_short":"long"},{"type_long":"ghidra.app.plugin.assembler.sleigh.tree.AssemblyParseBranch","name":"tree","comment":"the parse tree","type_short":"AssemblyParseBranch"},{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyPatternBlock","name":"context","comment":"the context expected at ","type_short":"AssemblyPatternBlock"},{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyContextGraph","name":"ctxGraph","comment":"the context transition graph used to resolve purely-recursive productions","type_short":"AssemblyContextGraph"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Resolve the tree for the given parameters\n@return a set of resolutions (encodings and errors)","static":false,"name":"resolve","comment":"Resolve the tree for the given parameters","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.assembler.sleigh.sem.AssemblyResolutionResults","comment":"a set of resolutions (encodings and errors)","type_short":"AssemblyResolutionResults"}},{"javadoc":"Compute the offset of an operand encoded in the instruction block\n@param opsym the operand symbol\n@param cons the constructor containing the operand\n@param res the selected subconstructor encodings\n@return the offset (right shift) to apply to the encoded operand","static":true,"name":"computeOffset","comment":"Compute the offset of an operand encoded in the instruction block","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.symbol.OperandSymbol","name":"opsym","comment":"the operand symbol","type_short":"OperandSymbol"},{"type_long":"ghidra.app.plugin.processors.sleigh.Constructor","name":"cons","comment":"the constructor containing the operand","type_short":"Constructor"},{"type_long":"java.util.Map<java.lang.Integer,java.lang.Object>","name":"res","comment":"the selected subconstructor encodings","type_short":"Map"}],"throws":[],"return":{"type_long":"int","comment":"the offset (right shift) to apply to the encoded operand","type_short":"int"}}],"name":"AssemblyTreeResolver","comment":"The workhorse of semantic resolution for the assembler\n \n This class takes a parse tree and some additional information (start address, context, etc.) and\n attempts to determine possible encodings using the semantics associated with each branch of the\n given parse tree. Details of this process are described in SleighAssemblerBuilder.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INST_START","comment":"","type_short":"String","constant_value":"\"inst_start\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INST_NEXT","comment":"","type_short":"String","constant_value":"\"inst_next\""}]}

{"implements":[],"javadoc":"Class for converting ConstructTpl into a pcode ops given\n a particular InstructionContext","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Pcode emitter constructor\n@param walk is the ParserWalker state for the tree that needs to be walked to generate pcode\n@param ictx is the InstructionContext interface to resolve requests for context\n@param fallOffset default instruction fall offset (i.e., instruction length including delay slotted instructions)\n@param override required if pcode overrides are to be utilized\n@param uniqueFactory required when override specified or if overlay normalization is required","static":false,"name":"<init>","comment":"Pcode emitter constructor","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","name":"walk","comment":"is the ParserWalker state for the tree that needs to be walked to generate pcode","type_short":"ParserWalker"},{"type_long":"ghidra.program.model.lang.InstructionContext","name":"ictx","comment":"is the InstructionContext interface to resolve requests for context","type_short":"InstructionContext"},{"type_long":"int","name":"fallOffset","comment":"default instruction fall offset (i.e., instruction length including delay slotted instructions)","type_short":"int"},{"type_long":"ghidra.program.model.pcode.PcodeOverride","name":"override","comment":"required if pcode overrides are to be utilized","type_short":"PcodeOverride"},{"type_long":"ghidra.program.model.address.UniqueAddressFactory","name":"uniqueFactory","comment":"required when override specified or if overlay normalization is required","type_short":"UniqueAddressFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getStartAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getFallOffset","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getWalker","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.plugin.processors.sleigh.ParserWalker","comment":"","type_short":"ParserWalker"}},{"javadoc":"Now that we have seen all label templates and references\n convert the collected references into full relative\n addresses","static":false,"name":"resolveRelatives","comment":"Now that we have seen all label templates and references\n convert the collected references into full relative\n addresses","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"build","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.template.ConstructTpl","name":"construct","comment":"","type_short":"ConstructTpl"},{"type_long":"int","name":"secnum","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.lang.UnknownInstructionException","comment":"","type_short":"UnknownInstructionException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PcodeEmit","comment":"Class for converting ConstructTpl into a pcode ops given\n a particular InstructionContext","fields":[]}

{"implements":[],"javadoc":"Configuration options for the decompiler\n This stores the options and can create an XML\n string to be sent to the decompiler process","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Grab all the decompiler options from various sources within a specific tool and program\n and cache them in this object.\n@param ownerPlugin the plugin that owns the \"tool options\" for the decompiler\n@param opt the Options object that contains the \"tool options\" specific to the decompiler\n@param program the program whose \"program options\" are relevant to the decompiler","static":false,"name":"grabFromToolAndProgram","comment":"Grab all the decompiler options from various sources within a specific tool and program\n and cache them in this object.","params":[{"type_long":"ghidra.framework.plugintool.Plugin","name":"ownerPlugin","comment":"the plugin that owns the \"tool options\" for the decompiler","type_short":"Plugin"},{"type_long":"ghidra.framework.options.ToolOptions","name":"opt","comment":"the Options object that contains the \"tool options\" specific to the decompiler","type_short":"ToolOptions"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program whose \"program options\" are relevant to the decompiler","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Grab all the decompiler options from the program specifically\n and cache them in this object.\n@param program the program whose \"program options\" are relevant to the decompiler","static":false,"name":"grabFromProgram","comment":"Grab all the decompiler options from the program specifically\n and cache them in this object.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program whose \"program options\" are relevant to the decompiler","type_short":"Program"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProtoEvalModel","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setProtoEvalModel","comment":"","params":[{"type_long":"java.lang.String","name":"protoEvalModel","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This registers all the decompiler tool options with ghidra, and has the side effect of\n pulling all the current values for the options if they exist\n@param ownerPlugin the plugin to which the options should be registered\n@param opt the options object to register with\n@param program the program\n@param hlep","static":false,"name":"registerOptions","comment":"This registers all the decompiler tool options with ghidra, and has the side effect of\n pulling all the current values for the options if they exist","params":[{"type_long":"ghidra.framework.plugintool.Plugin","name":"ownerPlugin","comment":"the plugin to which the options should be registered","type_short":"Plugin"},{"type_long":"ghidra.framework.options.ToolOptions","name":"opt","comment":"the options object to register with","type_short":"ToolOptions"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program","type_short":"Program"},{"type_long":"ghidra.util.HelpLocation","name":"help","comment":"","type_short":"HelpLocation"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Produce XML document of configuration options\n to be sent to decompiler process. This object\n is global to all decompile processes so we can\n tailor to the specific process by passing in the\n interface\n@param iface specific DecompInterface being sent options\n@return XML document as a string","static":false,"name":"getXML","comment":"Produce XML document of configuration options\n to be sent to decompiler process. This object\n is global to all decompile processes so we can\n tailor to the specific process by passing in the\n interface","params":[{"type_long":"ghidra.app.decompiler.DecompInterface","name":"iface","comment":"specific DecompInterface being sent options","type_short":"DecompInterface"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"XML document as a string","type_short":"String"}},{"javadoc":"","static":false,"name":"getMaxWidth","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getKeywordColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getTypeColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getFunctionColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getCommentColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getConstantColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getVariableColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getParameterColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getGlobalColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getDefaultColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getCodeViewerBackgroundColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getCurrentVariableHighlightColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getMiddleMouseHighlightColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getSearchHighlightColor","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Color","comment":"","type_short":"Color"}},{"javadoc":"","static":false,"name":"getMiddleMouseHighlightButton","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isPRECommentIncluded","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setPRECommentIncluded","comment":"","params":[{"type_long":"boolean","name":"commentPREInclude","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isPLATECommentIncluded","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setPLATECommentIncluded","comment":"","params":[{"type_long":"boolean","name":"commentPLATEInclude","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isPOSTCommentIncluded","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setPOSTCommentIncluded","comment":"","params":[{"type_long":"boolean","name":"commentPOSTInclude","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isEOLCommentIncluded","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setEOLCommentIncluded","comment":"","params":[{"type_long":"boolean","name":"commentEOLInclude","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isWARNCommentIncluded","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setWARNCommentIncluded","comment":"","params":[{"type_long":"boolean","name":"commentWARNInclude","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isHeadCommentIncluded","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setHeadCommentIncluded","comment":"","params":[{"type_long":"boolean","name":"commentHeadInclude","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isEliminateUnreachable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setEliminateUnreachable","comment":"","params":[{"type_long":"boolean","name":"eliminateUnreachable","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isSimplifyDoublePrecision","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setSimplifyDoublePrecision","comment":"","params":[{"type_long":"boolean","name":"simplifyDoublePrecision","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isDisplayLineNumbers","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isDisplayNamespaces","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getDisplayLanguage","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.DecompilerLanguage","comment":"","type_short":"DecompilerLanguage"}},{"javadoc":"","static":false,"name":"isConventionPrint","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setConventionPrint","comment":"","params":[{"type_long":"boolean","name":"conventionPrint","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isNoCastPrint","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setNoCastPrint","comment":"","params":[{"type_long":"boolean","name":"noCastPrint","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setDisplayLanguage","comment":"","params":[{"type_long":"ghidra.program.model.lang.DecompilerLanguage","name":"val","comment":"","type_short":"DecompilerLanguage"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDefaultFont","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Font","comment":"","type_short":"Font"}},{"javadoc":"","static":false,"name":"getDefaultTimeout","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"setDefaultTimeout","comment":"","params":[{"type_long":"int","name":"timeout","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMaxPayloadMBytes","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"setMaxPayloadMBytes","comment":"","params":[{"type_long":"int","name":"mbytes","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCommentStyle","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.decompiler.DecompileOptions.CommentStyleEnum","comment":"","type_short":"CommentStyleEnum"}},{"javadoc":"","static":false,"name":"setCommentStyle","comment":"","params":[{"type_long":"ghidra.app.decompiler.DecompileOptions.CommentStyleEnum","name":"commentStyle","comment":"","type_short":"CommentStyleEnum"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCacheSize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"DecompileOptions","comment":"Configuration options for the decompiler\n This stores the options and can create an XML\n string to be sent to the decompiler process","fields":[{"type_long":"int","javadoc":"","static":true,"name":"SUGGESTED_DECOMPILE_TIMEOUT_SECS","comment":"","type_short":"int","constant_value":"30"},{"type_long":"int","javadoc":"","static":true,"name":"SUGGESTED_MAX_PAYLOAD_BYTES","comment":"","type_short":"int","constant_value":"50"}]}

{"implements":["ghidra.app.merge.MergeResolver","ghidra.app.merge.listing.ListingMergeConstants"],"javadoc":"<code>ProgramContextMergeManager<\/code> merges register value changes \n for multi-user program versions. It merges changes for each named register\n in the program.\n <br>Note: If a register gets changed that is part of another register that has been set, \n then each named register will get merged independently. This means that \n when in conflict with another version the conflict would arise for each \n instead of just the larger register.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new <code>ProgramContextMergeManager<\/code>.\n@param resultPgm the program to be updated with the result of the merge.\n This is the program that will actually get checked in.\n@param originalPgm the program that was checked out.\n@param latestPgm the latest checked-in version of the program.\n@param myPgm the program requesting to be checked in.\n@param latestChanges the address set of changes between original and latest versioned program.\n@param myChanges the address set of changes between original and my modified program.","static":false,"name":"<init>","comment":"Creates a new ProgramContextMergeManager.","params":[{"type_long":"ghidra.app.merge.ProgramMultiUserMergeManager","name":"mergeManager","comment":"","type_short":"ProgramMultiUserMergeManager"},{"type_long":"ghidra.program.model.listing.Program","name":"resultPgm","comment":"the program to be updated with the result of the merge.\n This is the program that will actually get checked in.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"originalPgm","comment":"the program that was checked out.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"latestPgm","comment":"the latest checked-in version of the program.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"myPgm","comment":"the program requesting to be checked in.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.ProgramChangeSet","name":"latestChanges","comment":"the address set of changes between original and latest versioned program.","type_short":"ProgramChangeSet"},{"type_long":"ghidra.program.model.listing.ProgramChangeSet","name":"myChanges","comment":"the address set of changes between original and my modified program.","type_short":"ProgramChangeSet"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"apply","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"cancel","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"merge","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPhases","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String[][]","comment":"","type_short":"java.lang.String[][]"}}],"name":"ProgramContextMergeManager","comment":"ProgramContextMergeManager merges register value changes \n for multi-user program versions. It merges changes for each named register\n in the program.\n Note: If a register gets changed that is part of another register that has been set, \n then each named register will get merged independently. This means that \n when in conflict with another version the conflict would arise for each \n instead of just the larger register.","fields":[]}

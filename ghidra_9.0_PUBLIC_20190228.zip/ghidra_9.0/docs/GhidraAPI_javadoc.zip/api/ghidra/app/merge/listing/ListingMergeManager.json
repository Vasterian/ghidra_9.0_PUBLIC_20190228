{"implements":["ghidra.app.merge.MergeResolver","ghidra.app.merge.listing.ListingMergeConstants"],"javadoc":"Manages program listing changes and conflicts between the latest versioned\n program (LATEST) and the modified program (MY) being checked into version control.\n <br>Listing changes include:\n <ul>\n <li>bytes<\/li>\n <li>code units [instructions and data]<\/li>\n <li>equates<\/li>\n <li>functions<\/li>\n <li>symbols<\/li>\n <li>references [memory, stack, and external]<\/li>\n <li>comments [plate, pre, end-of-line, repeatable, and post]\/li>\n <li>properties<\/li>\n <li>bookmarks<\/li>\n <\/ul>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Manages listing changes and conflicts between the latest versioned\n program and the modified program being checked into version control.\n@param mergeManager the top level merge manager for merging a program version.\n@param resultPgm the program to be updated with the result of the merge.\n This is the program that will actually get checked in.\n@param originalPgm the program that was checked out.\n@param latestPgm the latest checked-in version of the program.\n@param myPgm the program requesting to be checked in.\n@param latestChanges the address set of changes between original and latest versioned program.\n@param myChanges the address set of changes between original and my modified program.","static":false,"name":"<init>","comment":"Manages listing changes and conflicts between the latest versioned\n program and the modified program being checked into version control.","params":[{"type_long":"ghidra.app.merge.ProgramMultiUserMergeManager","name":"mergeManager","comment":"the top level merge manager for merging a program version.","type_short":"ProgramMultiUserMergeManager"},{"type_long":"ghidra.program.model.listing.Program","name":"resultPgm","comment":"the program to be updated with the result of the merge.\n This is the program that will actually get checked in.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"originalPgm","comment":"the program that was checked out.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"latestPgm","comment":"the latest checked-in version of the program.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Program","name":"myPgm","comment":"the program requesting to be checked in.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.ProgramChangeSet","name":"latestChanges","comment":"the address set of changes between original and latest versioned program.","type_short":"ProgramChangeSet"},{"type_long":"ghidra.program.model.listing.ProgramChangeSet","name":"myChanges","comment":"the address set of changes between original and my modified program.","type_short":"ProgramChangeSet"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getFunctionTagListingMerger","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.merge.listing.FunctionTagListingMerger","comment":"","type_short":"FunctionTagListingMerger"}},{"javadoc":"True signals to show the listing panel (default); false signals to show an empty listing (faster)\n@param showListingPanel","static":false,"name":"setShowListingPanel","comment":"True signals to show the listing panel (default); false signals to show an empty listing (faster)","params":[{"type_long":"boolean","name":"showListingPanel","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"apply","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"cancel","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"merge","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.program.util.ProgramConflictException","comment":"","type_short":"ProgramConflictException"},{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets up the change address sets, Diffs between the various program versions,\n and Merges from various versions to the resulting program.","static":false,"name":"initMergeInfo","comment":"Sets up the change address sets, Diffs between the various program versions,\n and Merges from various versions to the resulting program.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Gets the address set for the code units that were changed in the result\n by the merge.\n@return the address set indicating the code units that changed in the\n result program due to the merge","static":false,"name":"getMergedCodeUnits","comment":"Gets the address set for the code units that were changed in the result\n by the merge.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the address set indicating the code units that changed in the\n result program due to the merge","type_short":"AddressSet"}},{"javadoc":"This method returns all of the phases of the Listing Merge Manager that will be\n displayed in the Program Merge Manager.\n The first item is a phase indicator for the Listing Phase as a whole and\n the others are for each sub-phase of the Listing.","static":false,"name":"getPhases","comment":"This method returns all of the phases of the Listing Merge Manager that will be\n displayed in the Program Merge Manager.\n The first item is a phase indicator for the Listing Phase as a whole and\n the others are for each sub-phase of the Listing.","params":[],"throws":[],"return":{"type_long":"java.lang.String[][]","comment":"","type_short":"java.lang.String[][]"}}],"name":"ListingMergeManager","comment":"Manages program listing changes and conflicts between the latest versioned\n program (LATEST) and the modified program (MY) being checked into version control.\n Listing changes include:\n \n bytes\n code units [instructions and data]\n equates\n functions\n symbols\n references [memory, stack, and external]\n comments [plate, pre, end-of-line, repeatable, and post]\/li\n properties\n bookmarks\n ","fields":[]}

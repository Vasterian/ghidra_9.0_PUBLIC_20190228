{"implements":["ghidra.app.util.bin.format.elf.ElfFileSection","ghidra.app.util.bin.ByteArrayConverter"],"javadoc":"A container class to hold ELF symbols.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if this is the dynamic symbol table\n@return true if this is the dynamic symbol table","static":false,"name":"isDynamic","comment":"Returns true if this is the dynamic symbol table","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this is the dynamic symbol table","type_short":"boolean"}},{"javadoc":"Returns the associated string table section.\n@return the associated string table section","static":false,"name":"getStringTable","comment":"Returns the associated string table section.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfStringTable","comment":"the associated string table section","type_short":"ElfStringTable"}},{"javadoc":"@return number of symbols","static":false,"name":"getSymbolCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"number of symbols","type_short":"int"}},{"javadoc":"Returns all of the symbols defined in this symbol table.\n@return all of the symbols defined in this symbol table","static":false,"name":"getSymbols","comment":"Returns all of the symbols defined in this symbol table.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol[]","comment":"all of the symbols defined in this symbol table","type_short":"ghidra.app.util.bin.format.elf.ElfSymbol[]"}},{"javadoc":"Returns the index of the specified symbol in this\n symbol table.\n@param symbol the symbol\n@return the index of the specified symbol","static":false,"name":"getSymbolIndex","comment":"Returns the index of the specified symbol in this\n symbol table.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","name":"symbol","comment":"the symbol","type_short":"ElfSymbol"}],"throws":[],"return":{"type_long":"int","comment":"the index of the specified symbol","type_short":"int"}},{"javadoc":"Returns the symbol at the specified address.\n@param addr the symbol address\n@return the symbol at the specified address","static":false,"name":"getSymbolAt","comment":"Returns the symbol at the specified address.","params":[{"type_long":"long","name":"addr","comment":"the symbol address","type_short":"long"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","comment":"the symbol at the specified address","type_short":"ElfSymbol"}},{"javadoc":"Returns all of the global symbols.\n@return all of the global symbols","static":false,"name":"getGlobalSymbols","comment":"Returns all of the global symbols.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol[]","comment":"all of the global symbols","type_short":"ghidra.app.util.bin.format.elf.ElfSymbol[]"}},{"javadoc":"Returns all of the sources file names.\n@return all of the sources file names","static":false,"name":"getSourceFiles","comment":"Returns all of the sources file names.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"all of the sources file names","type_short":"java.lang.String[]"}},{"javadoc":"Adds the specified symbol into this symbol table.\n@param symbol the new symbol to add","static":false,"name":"addSymbol","comment":"Adds the specified symbol into this symbol table.","params":[{"type_long":"ghidra.app.util.bin.format.elf.ElfSymbol","name":"symbol","comment":"the new symbol to add","type_short":"ElfSymbol"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.app.util.bin.ByteArrayConverter#toBytes(ghidra.util.DataConverter)","static":false,"name":"toBytes","comment":"","params":[{"type_long":"ghidra.util.DataConverter","name":"dc","comment":"","type_short":"DataConverter"}],"throws":[],"return":{"type_long":"byte[]","comment":"","type_short":"byte[]"}},{"javadoc":"","static":false,"name":"getLength","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getAddressOffset","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Get the section header which corresponds to this table, or null\n if only associated with a dynamic table entry\n@return symbol table section header or null","static":false,"name":"getTableSectionHeader","comment":"Get the section header which corresponds to this table, or null\n if only associated with a dynamic table entry","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.elf.ElfSectionHeader","comment":"symbol table section header or null","type_short":"ElfSectionHeader"}},{"javadoc":"","static":false,"name":"getFileOffset","comment":"","params":[],"throws":[],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getEntrySize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}}],"name":"ElfSymbolTable","comment":"A container class to hold ELF symbols.","fields":[]}

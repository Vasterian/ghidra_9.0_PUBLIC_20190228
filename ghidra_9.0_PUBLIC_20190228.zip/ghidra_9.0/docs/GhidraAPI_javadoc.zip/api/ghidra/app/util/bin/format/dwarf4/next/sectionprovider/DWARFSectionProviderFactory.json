{"implements":[],"javadoc":"Auto-detects which {@link DWARFSectionProvider} matches a Ghidra program.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Iterates through the statically registered {@link #sectionProviderFactoryFuncs factory funcs},\n trying each factory method until one returns a {@link DWARFSectionProvider} \n that can successfully retrieve the {@link DWARFSectionNames#MINIMAL_DWARF_SECTIONS minimal} \n sections we need to do a DWARF import.\n <p>\n The resulting {@link DWARFSectionProvider} is {@link Closeable} and it is the caller's\n responsibility to ensure that the object is closed when done.\n@param program\n@return {@link DWARFSectionProvider} that should be closed by the caller or NULL if no\n section provider types match the specified program.","static":true,"name":"createSectionProviderFor","comment":"Iterates through the statically registered #sectionProviderFactoryFuncs,\n trying each factory method until one returns a DWARFSectionProvider \n that can successfully retrieve the DWARFSectionNames#MINIMAL_DWARF_SECTIONS \n sections we need to do a DWARF import.\n \n The resulting DWARFSectionProvider is Closeable and it is the caller's\n responsibility to ensure that the object is closed when done.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.next.sectionprovider.DWARFSectionProvider","comment":"DWARFSectionProvider that should be closed by the caller or NULL if no\n section provider types match the specified program.","type_short":"DWARFSectionProvider"}}],"name":"DWARFSectionProviderFactory","comment":"Auto-detects which DWARFSectionProvider matches a Ghidra program.","fields":[]}

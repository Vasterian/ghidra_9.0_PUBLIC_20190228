{"implements":["ghidra.app.util.bin.StructConverter"],"javadoc":"A class to represent the <code>IMAGE_DEBUG_MISC<\/code> struct\n as defined in <b><code>winnt.h<\/code><\/b>.\n <br>\n \n <pre>\n typedef struct _IMAGE_DEBUG_MISC {\n     DWORD       DataType;               \/\/ type of misc data, see defines\n     DWORD       Length;                 \/\/ total length of record, rounded to four\n                                         \/\/ byte multiple.\n     BOOLEAN     Unicode;                \/\/ TRUE if data is unicode string\n     BYTE        Reserved[ 3 ];\n     BYTE        Data[ 1 ];              \/\/ Actual data\n }\n <\/pre>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","static":false,"name":"<init>","comment":"DO NOT USE THIS CONSTRUCTOR, USE create*(GenericFactory ...) FACTORY METHODS INSTEAD.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the data type of this misc debug.\n@return the data type of this misc debug","static":false,"name":"getDataType","comment":"Returns the data type of this misc debug.","params":[],"throws":[],"return":{"type_long":"int","comment":"the data type of this misc debug","type_short":"int"}},{"javadoc":"Returns the length of this misc debug.\n@return the length of this misc debug","static":false,"name":"getLength","comment":"Returns the length of this misc debug.","params":[],"throws":[],"return":{"type_long":"int","comment":"the length of this misc debug","type_short":"int"}},{"javadoc":"Returns true if this misc debug is unicode.\n@return true if this misc debug is unicode","static":false,"name":"isUnicode","comment":"Returns true if this misc debug is unicode.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if this misc debug is unicode","type_short":"boolean"}},{"javadoc":"Returns the array of reserved bytes.\n@return the array of reserved bytes","static":false,"name":"getReserved","comment":"Returns the array of reserved bytes.","params":[],"throws":[],"return":{"type_long":"byte[]","comment":"the array of reserved bytes","type_short":"byte[]"}},{"javadoc":"Returns a string equivalent of the actual misc debug data.\n@return a string equivalent of the actual misc debug data","static":false,"name":"getActualData","comment":"Returns a string equivalent of the actual misc debug data.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"a string equivalent of the actual misc debug data","type_short":"String"}},{"javadoc":"@see java.lang.Object#toString()","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the debug directory associated with this misc debug.\n@return the debug directory associated with this misc debug","static":false,"name":"getDebugDirectory","comment":"Returns the debug directory associated with this misc debug.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.pe.debug.DebugDirectory","comment":"the debug directory associated with this misc debug","type_short":"DebugDirectory"}},{"javadoc":"@see ghidra.app.util.bin.StructConverter#toDataType()","static":false,"name":"toDataType","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"","type_short":"DataType"}}],"name":"DebugMisc","comment":"A class to represent the IMAGE_DEBUG_MISC struct\n as defined in winnt.h.\n \n \n \n typedef struct _IMAGE_DEBUG_MISC {\n     DWORD       DataType;               \/\/ type of misc data, see defines\n     DWORD       Length;                 \/\/ total length of record, rounded to four\n                                         \/\/ byte multiple.\n     BOOLEAN     Unicode;                \/\/ TRUE if data is unicode string\n     BYTE        Reserved[ 3 ];\n     BYTE        Data[ 1 ];              \/\/ Actual data\n }\n ","fields":[{"type_long":"java.lang.String","javadoc":"The name to use when converting into a structure data type.","static":true,"name":"NAME","comment":"The name to use when converting into a structure data type.","type_short":"String","constant_value":"\"IMAGE_DEBUG_MISC\""}]}

{"implements":[],"javadoc":"Creates Ghidra {@link DataType}s using information from DWARF debug entries.  The caller\n is responsible for writing the resulting temporary DataType instances into the database.\n <p>\n Create a new instance of this class for each {@link DIEAggregate} datatype that you wish\n to convert into a DataType.\n <p>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Create a new data type importer.\n@param prog {@link DWARFProgram} that is being imported\n@param dwarfDTM {@link DWARFDataTypeManager} helper\n@param importOptions {@link DWARFImportOptions} control optional features during import","static":false,"name":"<init>","comment":"Create a new data type importer.","params":[{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFProgram","name":"prog","comment":"DWARFProgram that is being imported","type_short":"DWARFProgram"},{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFDataTypeManager","name":"dwarfDTM","comment":"DWARFDataTypeManager helper","type_short":"DWARFDataTypeManager"},{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFImportOptions","name":"importOptions","comment":"DWARFImportOptions control optional features during import","type_short":"DWARFImportOptions"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDDTByInstance","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dtInstance","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFDataTypeImporter.DWARFDataType","comment":"","type_short":"DWARFDataType"}},{"javadoc":"Converts the specified DWARF debug entry into a Ghidra {@link DataType} (wrapped\n in a simple holder object to also return associated metadata).\n@param diea DWARF {@link DIEAggregate} to convert into Ghidra DataType.\n@param defaultValue value to return if the specified DIEA is null or there is a problem\n with the DWARF debug data.\n@return a {@link DWARFDataType} wrapper around the new Ghidra {@link DataType}.\n@throws IOException\n@throws DWARFExpressionException","static":false,"name":"getDataType","comment":"Converts the specified DWARF debug entry into a Ghidra DataType (wrapped\n in a simple holder object to also return associated metadata).","params":[{"type_long":"ghidra.app.util.bin.format.dwarf4.DIEAggregate","name":"diea","comment":"DWARF DIEAggregate to convert into Ghidra DataType.","type_short":"DIEAggregate"},{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFDataTypeImporter.DWARFDataType","name":"defaultValue","comment":"value to return if the specified DIEA is null or there is a problem\n with the DWARF debug data.","type_short":"DWARFDataType"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionException","comment":"","type_short":"DWARFExpressionException"}],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFDataTypeImporter.DWARFDataType","comment":"a DWARFDataType wrapper around the new Ghidra DataType.","type_short":"DWARFDataType"}}],"name":"DWARFDataTypeImporter","comment":"Creates Ghidra DataTypes using information from DWARF debug entries.  The caller\n is responsible for writing the resulting temporary DataType instances into the database.\n \n Create a new instance of this class for each DIEAggregate datatype that you wish\n to convert into a DataType.\n ","fields":[]}

{"implements":[],"javadoc":"Container object to keep a relative index, label, and comments. Used\n in a list for copying\/pasting labels and comments from one program to\n another.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor a new CodeUnitInfo.\n@param index relative index added to a base address\n for where this information will be placed","static":false,"name":"<init>","comment":"Constructor a new CodeUnitInfo.","params":[{"type_long":"int","name":"index","comment":"relative index added to a base address\n for where this information will be placed","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the symbols to be transferred.","static":false,"name":"setSymbols","comment":"Set the symbols to be transferred.","params":[{"type_long":"ghidra.program.model.symbol.Symbol[]","name":"symbols","comment":"","type_short":"ghidra.program.model.symbol.Symbol[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the comment to be transferred.\n@param commentType CodeUnit.PRE_COMMENT, POST_COMMENT, \n PLATE_COMMENT, EOL_COMMENT, or REPEATABLE.\n@param comment comment","static":false,"name":"setComment","comment":"Set the comment to be transferred.","params":[{"type_long":"int","name":"commentType","comment":"CodeUnit.PRE_COMMENT, POST_COMMENT, \n PLATE_COMMENT, EOL_COMMENT, or REPEATABLE.","type_short":"int"},{"type_long":"java.lang.String[]","name":"comment","comment":"comment","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the function info.\n@param function function used to get function info to transfer","static":false,"name":"setFunction","comment":"Set the function info.","params":[{"type_long":"ghidra.program.model.listing.Function","name":"function","comment":"function used to get function info to transfer","type_short":"Function"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the relative index for this CodeUnitInfo to add to a base address.","static":false,"name":"getIndex","comment":"Get the relative index for this CodeUnitInfo to add to a base address.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Return whether this CodeUnitInfo has symbols to copy.","static":false,"name":"hasSymbols","comment":"Return whether this CodeUnitInfo has symbols to copy.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Return whether this CodeUnitInfo has a dynamic symbol.","static":false,"name":"hasDynamicSymbol","comment":"Return whether this CodeUnitInfo has a dynamic symbol.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get the label; may be null.","static":false,"name":"getPrimarySymbolName","comment":"Get the label; may be null.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Get the label source","static":false,"name":"getPrimarySymbolSource","comment":"Get the label source","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.SourceType","comment":"","type_short":"SourceType"}},{"javadoc":"Is primary symbol in a function scope","static":false,"name":"isPrimarySymbolInFunctionScope","comment":"Is primary symbol in a function scope","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get the names of the function scope symbols.","static":false,"name":"getFunctionScopeSymbolNames","comment":"Get the names of the function scope symbols.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the sources of the function scope symbols.","static":false,"name":"getFunctionScopeSymbolSources","comment":"Get the sources of the function scope symbols.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.SourceType[]","comment":"","type_short":"ghidra.program.model.symbol.SourceType[]"}},{"javadoc":"Get the names of the other symbols not in a function scope.","static":false,"name":"getOtherSymbolNames","comment":"Get the names of the other symbols not in a function scope.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the sources of the other symbols not in a function scope.","static":false,"name":"getOtherSymbolSources","comment":"Get the sources of the other symbols not in a function scope.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.SourceType[]","comment":"","type_short":"ghidra.program.model.symbol.SourceType[]"}},{"javadoc":"Get the plate comment.","static":false,"name":"getPlateComment","comment":"Get the plate comment.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the pre comment.","static":false,"name":"getPreComment","comment":"Get the pre comment.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the post comment.","static":false,"name":"getPostComment","comment":"Get the post comment.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the EOL comment.","static":false,"name":"getEOLComment","comment":"Get the EOL comment.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the repeatable comment.","static":false,"name":"getRepeatableComment","comment":"Get the repeatable comment.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the function name.","static":false,"name":"getFunctionName","comment":"Get the function name.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Get the function comments.","static":false,"name":"getFunctionComments","comment":"Get the function comments.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the stack variable names.","static":false,"name":"getStackVariableNames","comment":"Get the stack variable names.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the stack variable sources.","static":false,"name":"getStackVariableSources","comment":"Get the stack variable sources.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.SourceType[]","comment":"","type_short":"ghidra.program.model.symbol.SourceType[]"}},{"javadoc":"Get the stack offsets.","static":false,"name":"getStackOffsets","comment":"Get the stack offsets.","params":[],"throws":[],"return":{"type_long":"int[]","comment":"","type_short":"int[]"}},{"javadoc":"Get the stack variable \"First Use Offsets\"","static":false,"name":"getStackVarFirstUseOffsets","comment":"Get the stack variable \"First Use Offsets\"","params":[],"throws":[],"return":{"type_long":"int[]","comment":"","type_short":"int[]"}},{"javadoc":"Get the stack variable comments.","static":false,"name":"getStackVariableComments","comment":"Get the stack variable comments.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the non-stack variable names.","static":false,"name":"getVariableNames","comment":"Get the non-stack variable names.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"Get the non-stack variable sources.","static":false,"name":"getVariableSources","comment":"Get the non-stack variable sources.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.SourceType[]","comment":"","type_short":"ghidra.program.model.symbol.SourceType[]"}},{"javadoc":"Get the storage addresses corresponding to each non-stack variable.","static":false,"name":"getVarAddresses","comment":"Get the storage addresses corresponding to each non-stack variable.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"Get the non-stack variable \"First Use Offsets\"","static":false,"name":"getVarFirstUseOffsets","comment":"Get the non-stack variable \"First Use Offsets\"","params":[],"throws":[],"return":{"type_long":"int[]","comment":"","type_short":"int[]"}},{"javadoc":"Get the non-stack variable comments.","static":false,"name":"getVariableComments","comment":"Get the non-stack variable comments.","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}}],"name":"CodeUnitInfo","comment":"Container object to keep a relative index, label, and comments. Used\n in a list for copying\/pasting labels and comments from one program to\n another.","fields":[]}

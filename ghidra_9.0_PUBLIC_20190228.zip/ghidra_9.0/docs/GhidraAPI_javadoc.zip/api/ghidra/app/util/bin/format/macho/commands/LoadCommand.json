{"implements":["ghidra.app.util.bin.StructConverter"],"javadoc":"Represents a load_command structure.\n@see <a href=\"https:\/\/opensource.apple.com\/source\/xnu\/xnu-4570.71.2\/EXTERNAL_HEADERS\/mach-o\/loader.h.auto.html\">mach-o\/loader.h<\/a>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the binary start index of this load command.\n@return the binary start index of this load command","static":false,"name":"getStartIndex","comment":"Returns the binary start index of this load command.","params":[],"throws":[],"return":{"type_long":"long","comment":"the binary start index of this load command","type_short":"long"}},{"javadoc":"Type of load command\n@return type of load command","static":false,"name":"getCommandType","comment":"Type of load command","params":[],"throws":[],"return":{"type_long":"int","comment":"type of load command","type_short":"int"}},{"javadoc":"Total size of command in bytes\n@return total size of command in bytes","static":false,"name":"getCommandSize","comment":"Total size of command in bytes","params":[],"throws":[],"return":{"type_long":"int","comment":"total size of command in bytes","type_short":"int"}},{"javadoc":"Returns the name of this command.\n@return the name of this command","static":false,"name":"getCommandName","comment":"Returns the name of this command.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the name of this command","type_short":"String"}},{"javadoc":"Mark-up the program with the data structures for this load command.\n@param header the mach header\n@param api the flat program api\n@param baseAddress the base address to apply the mark-up\n@param isBinary true if mach-o was loaded as binary\n@param parentModule parent module to create fragments\n@param monitor the task monitor\n@param log the message logS","static":false,"name":"markup","comment":"Mark-up the program with the data structures for this load command.","params":[{"type_long":"ghidra.app.util.bin.format.macho.MachHeader","name":"header","comment":"the mach header","type_short":"MachHeader"},{"type_long":"ghidra.program.flatapi.FlatProgramAPI","name":"api","comment":"the flat program api","type_short":"FlatProgramAPI"},{"type_long":"ghidra.program.model.address.Address","name":"baseAddress","comment":"the base address to apply the mark-up","type_short":"Address"},{"type_long":"boolean","name":"isBinary","comment":"true if mach-o was loaded as binary","type_short":"boolean"},{"type_long":"ghidra.program.model.listing.ProgramModule","name":"parentModule","comment":"parent module to create fragments","type_short":"ProgramModule"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor","type_short":"TaskMonitor"},{"type_long":"ghidra.app.util.importer.MessageLog","name":"log","comment":"the message logS","type_short":"MessageLog"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"LoadCommand","comment":"Represents a load_command structure.","fields":[]}

{"implements":[],"javadoc":"Evaluates a subset of DWARF expression opcodes.\n <p>\n Limitations:<p>\n Can not access memory during evaluation of expressions.<br>\n Some opcodes must be the last operation in the expression (deref, regX)<br>\n Can only specify offset from register for framebase and stack relative<br>\n <p>\n Result can be a numeric value (ie. static address) or a register 'name' or a stack based offset.\n <p>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":true,"name":"create","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.dwarf4.DebugInfoEntry","name":"die","comment":"","type_short":"DebugInfoEntry"}],"throws":[],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionEvaluator","comment":"","type_short":"DWARFExpressionEvaluator"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"byte","name":"pointerSize","comment":"","type_short":"byte"},{"type_long":"boolean","name":"isLittleEndian","comment":"","type_short":"boolean"},{"type_long":"int","name":"dwarfFormat","comment":"","type_short":"int"},{"type_long":"ghidra.app.util.bin.format.dwarf4.next.DWARFRegisterMappings","name":"registerMappings","comment":"","type_short":"DWARFRegisterMappings"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setFrameBase","comment":"","params":[{"type_long":"long","name":"fb","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"push","comment":"","params":[{"type_long":"long","name":"l","comment":"","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"peek","comment":"","params":[],"throws":[{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionException","comment":"","type_short":"DWARFExpressionException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"pop","comment":"","params":[],"throws":[{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionException","comment":"","type_short":"DWARFExpressionException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"Returns the {@link Register register} that holds the contents of the object that the\n {@link DWARFExpression expression} points to.\n <p>\n Note, you should check {@link #isDeref()} to see if the register is just a pointer\n to the object instead of the object itself.\n <p>\n@return ","static":false,"name":"getTerminalRegister","comment":"Returns the Register that holds the contents of the object that the\n DWARFExpression points to.\n \n Note, you should check #isDeref() to see if the register is just a pointer\n to the object instead of the object itself.\n ","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"isDeref","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"readExpr","comment":"","params":[{"type_long":"byte[]","name":"exprBytes","comment":"","type_short":"byte[]"}],"throws":[{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionException","comment":"","type_short":"DWARFExpressionException"}],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpression","comment":"","type_short":"DWARFExpression"}},{"javadoc":"","static":false,"name":"evaluate","comment":"","params":[{"type_long":"byte[]","name":"exprBytes","comment":"","type_short":"byte[]"}],"throws":[{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionException","comment":"","type_short":"DWARFExpressionException"}],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionResult","comment":"","type_short":"DWARFExpressionResult"}},{"javadoc":"@param _expr\n@param stackArgs - pushed 0..N, so stackArgs[0] will be deepest, stackArgs[N] will be topmost.\n@return \n@throws DWARFExpressionException","static":false,"name":"evaluate","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpression","name":"_expr","comment":"","type_short":"DWARFExpression"},{"type_long":"long[]","name":"stackArgs","comment":"- pushed 0..N, so stackArgs[0] will be deepest, stackArgs[N] will be topmost.","type_short":"long[]"}],"throws":[{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionException","comment":"","type_short":"DWARFExpressionException"}],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionResult","comment":"","type_short":"DWARFExpressionResult"}},{"javadoc":"","static":false,"name":"evaluate","comment":"","params":[{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpression","name":"_expr","comment":"","type_short":"DWARFExpression"}],"throws":[{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionException","comment":"","type_short":"DWARFExpressionException"}],"return":{"type_long":"ghidra.app.util.bin.format.dwarf4.expression.DWARFExpressionResult","comment":"","type_short":"DWARFExpressionResult"}},{"javadoc":"","static":false,"name":"getStackAsString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getMaxStepCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"setMaxStepCount","comment":"","params":[{"type_long":"int","name":"maxStepCount","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isDwarfStackValue","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"useUnknownRegister","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isRegisterLocation","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getLastRegister","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"getRawLastRegister","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isStackRelative","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"DWARFExpressionEvaluator","comment":"Evaluates a subset of DWARF expression opcodes.\n \n Limitations:\n Can not access memory during evaluation of expressions.\n Some opcodes must be the last operation in the expression (deref, regX)\n Can only specify offset from register for framebase and stack relative\n \n Result can be a numeric value (ie. static address) or a register 'name' or a stack based offset.\n ","fields":[]}

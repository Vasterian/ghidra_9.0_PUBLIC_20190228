{"implements":["ghidra.app.util.demangler.ParameterReceiver"],"javadoc":"A class to represent a demangled function.","static":false,"extends":"ghidra.app.util.demangler.DemangledObject","methods":[{"javadoc":"Constructs a new demangled function.\n@param name the name of the function","static":false,"name":"<init>","comment":"Constructs a new demangled function.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the function","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the function return type.\n@param returnType the function return type","static":false,"name":"setReturnType","comment":"Sets the function return type.","params":[{"type_long":"ghidra.app.util.demangler.DemangledDataType","name":"returnType","comment":"the function return type","type_short":"DemangledDataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the function calling convention. For example, \"__cdecl\".\n@param callingConvention the function calling convention","static":false,"name":"setCallingConvention","comment":"Sets the function calling convention. For example, \"__cdecl\".","params":[{"type_long":"java.lang.String","name":"callingConvention","comment":"the function calling convention","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setTemplate","comment":"","params":[{"type_long":"ghidra.app.util.demangler.DemangledTemplate","name":"template","comment":"","type_short":"DemangledTemplate"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getTemplate","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.demangler.DemangledTemplate","comment":"","type_short":"DemangledTemplate"}},{"javadoc":"Sets whether this demangled function represents\n an overloaded operator. For example, \"operator+()\".\n@param isOverloadedOperator true if overloaded operator","static":false,"name":"setOverloadedOperator","comment":"Sets whether this demangled function represents\n an overloaded operator. For example, \"operator+()\".","params":[{"type_long":"boolean","name":"isOverloadedOperator","comment":"true if overloaded operator","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.app.util.demangler.ParameterReceiver","static":false,"name":"addParameter","comment":"","params":[{"type_long":"ghidra.app.util.demangler.DemangledDataType","name":"parameter","comment":"","type_short":"DemangledDataType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.app.util.demangler.ParameterReceiver","static":false,"name":"getParameters","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.app.util.demangler.DemangledDataType>","comment":"","type_short":"List"}},{"javadoc":"Returns the return type or null, if unspecified.\n@return the return type or null, if unspecified","static":false,"name":"getReturnType","comment":"Returns the return type or null, if unspecified.","params":[],"throws":[],"return":{"type_long":"ghidra.app.util.demangler.DemangledDataType","comment":"the return type or null, if unspecified","type_short":"DemangledDataType"}},{"javadoc":"Returns the calling convention or null, if unspecified.\n@return the calling convention or null, if unspecified","static":false,"name":"getCallingConvention","comment":"Returns the calling convention or null, if unspecified.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the calling convention or null, if unspecified","type_short":"String"}},{"javadoc":"Special constructor where it has a templated type before the parameter list","static":false,"name":"setTemplatedConstructorType","comment":"Special constructor where it has a templated type before the parameter list","params":[{"type_long":"java.lang.String","name":"type","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isTrailingConst","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setTrailingConst","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isTrailingVolatile","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setTrailingVolatile","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isTrailingPointer64","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setTrailingPointer64","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isTrailingUnaligned","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setTrailingUnaligned","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isTrailingRestrict","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setTrailingRestrict","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isTypeCast","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setTypeCast","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setThrowAttribute","comment":"","params":[{"type_long":"java.lang.String","name":"throwAttribute","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getSignature","comment":"","params":[{"type_long":"boolean","name":"format","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getParameterString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"applyTo","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"ghidra.app.util.demangler.DemanglerOptions","name":"options","comment":"","type_short":"DemanglerOptions"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"DemangledFunction","comment":"A class to represent a demangled function.","fields":[{"type_long":"java.lang.String","javadoc":"","static":true,"name":"VOLATILE","comment":"","type_short":"String","constant_value":"\"volatile\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"CONST","comment":"","type_short":"String","constant_value":"\"const\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"PTR64","comment":"","type_short":"String","constant_value":"\"__ptr64\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"UNALIGNED","comment":"","type_short":"String","constant_value":"\"__unaligned\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"RESTRICT","comment":"","type_short":"String","constant_value":"\"__restrict\""}]}

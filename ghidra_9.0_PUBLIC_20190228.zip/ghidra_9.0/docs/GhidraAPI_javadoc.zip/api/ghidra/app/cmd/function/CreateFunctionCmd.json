{"implements":[],"javadoc":"Command for Creating a function at an address.  It will copy off the\n parameters used to create the function (Selection or just an address) and\n create the function on redo and clear on undo.","static":false,"extends":"ghidra.framework.cmd.BackgroundCommand","methods":[{"javadoc":"Constructs a new command for creating a function.  The default name\n for a function is the name associated with the current primary symbol which\n will be removed.\n@param name function name or null for default name.\n@param entries the entry points at which to create functions.\n@param body set of addresses to associated with the function to be created.\n The addresses must not already be included in the body of any existing function.\n@param source the source of this function\n@param findEntryPoint true if the entry point should be computed (entry could be in the middle of a function)\n@param recreateFunction true if the function body should be recreated even if the function exists.","static":false,"name":"<init>","comment":"Constructs a new command for creating a function.  The default name\n for a function is the name associated with the current primary symbol which\n will be removed.","params":[{"type_long":"java.lang.String","name":"name","comment":"function name or null for default name.","type_short":"String"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"entries","comment":"the entry points at which to create functions.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"set of addresses to associated with the function to be created.\n The addresses must not already be included in the body of any existing function.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"the source of this function","type_short":"SourceType"},{"type_long":"boolean","name":"findEntryPoint","comment":"true if the entry point should be computed (entry could be in the middle of a function)","type_short":"boolean"},{"type_long":"boolean","name":"recreateFunction","comment":"true if the function body should be recreated even if the function exists.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating a function.  The default name\n for a function is the name associated with the current primary symbol which\n will be removed.\n@param name function name or null for default name.\n@param entry entry point address for the function to be created.\n@param body set of addresses to associated with the function to be created.\n The addresses must not already be included in the body of any existing function.\n@param source the source of this function\n@param findEntryPoint true if the entry point should be computed (entry could be in the middle of a function)\n@param recreateFunction true if the function body should be recreated even if the function exists.","static":false,"name":"<init>","comment":"Constructs a new command for creating a function.  The default name\n for a function is the name associated with the current primary symbol which\n will be removed.","params":[{"type_long":"java.lang.String","name":"name","comment":"function name or null for default name.","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"entry point address for the function to be created.","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"set of addresses to associated with the function to be created.\n The addresses must not already be included in the body of any existing function.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"the source of this function","type_short":"SourceType"},{"type_long":"boolean","name":"findEntryPoint","comment":"true if the entry point should be computed (entry could be in the middle of a function)","type_short":"boolean"},{"type_long":"boolean","name":"recreateFunction","comment":"true if the function body should be recreated even if the function exists.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating functions that automatically computes\n the body of each function.\n@param entries the entry points at which to create functions.","static":false,"name":"<init>","comment":"Constructs a new command for creating functions that automatically computes\n the body of each function.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"entries","comment":"the entry points at which to create functions.","type_short":"AddressSetView"},{"type_long":"boolean","name":"findEntryPoint","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating functions that automatically computes\n the body of each function.\n@param entries the entry points at which to create functions.","static":false,"name":"<init>","comment":"Constructs a new command for creating functions that automatically computes\n the body of each function.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"entries","comment":"the entry points at which to create functions.","type_short":"AddressSetView"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating functions that automatically computes\n the body of each function.\n@param entries the entry points at which to create functions.","static":false,"name":"<init>","comment":"Constructs a new command for creating functions that automatically computes\n the body of each function.","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"entries","comment":"the entry points at which to create functions.","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.AddressSetView","name":"body","comment":"","type_short":"AddressSetView"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"source","comment":"","type_short":"SourceType"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new command for creating a function that automatically computes\n the body of the function.\n@param entry the entry point at which to create a function.","static":false,"name":"<init>","comment":"Constructs a new command for creating a function that automatically computes\n the body of the function.","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"the entry point at which to create a function.","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"boolean","name":"findEntryPoint","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.cmd.BackgroundCommand#applyTo(ghidra.framework.model.DomainObject, ghidra.util.task.TaskMonitor)","static":false,"name":"applyTo","comment":"","params":[{"type_long":"ghidra.framework.model.DomainObject","name":"obj","comment":"","type_short":"DomainObject"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns function if create command was successful","static":false,"name":"getFunction","comment":"Returns function if create command was successful","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Function","comment":"","type_short":"Function"}},{"javadoc":"Find the function body by following all flows other than a call from the\n entry point.\n@param program the program where the function is being created.\n@param entry entry point to start tracing flow\n@return AddressSetView address set representing the body of the function","static":true,"name":"getFunctionBody","comment":"Find the function body by following all flows other than a call from the\n entry point.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"},{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program where the function is being created.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"entry point to start tracing flow","type_short":"Address"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"AddressSetView address set representing the body of the function","type_short":"AddressSetView"}},{"javadoc":"Find the function body by following all flows other than a call from the\n entry point.\n@param program the program where the function is being created.\n@param entry entry point to start tracing flow\n@return AddressSetView address set representing the body of the function","static":true,"name":"getFunctionBody","comment":"Find the function body by following all flows other than a call from the\n entry point.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program where the function is being created.","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"entry point to start tracing flow","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"AddressSetView address set representing the body of the function","type_short":"AddressSetView"}},{"javadoc":"","static":true,"name":"getFunctionBody","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"","static":true,"name":"getFunctionBody","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.address.Address","name":"entry","comment":"","type_short":"Address"},{"type_long":"boolean","name":"includeOtherFunctions","comment":"","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSetView","comment":"","type_short":"AddressSetView"}},{"javadoc":"Recompute function body.  An open transaction must already exist.\n@param program the program the function is in.\n@param start_inst instruction that is within the function to be fixed up.\n@param monitor task monitor\n@return true if successful, false if cancelled or unable to fixup function or\n no function found containing the start address of the indicated instruction","static":true,"name":"fixupFunctionBody","comment":"Recompute function body.  An open transaction must already exist.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program the function is in.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Instruction","name":"start_inst","comment":"instruction that is within the function to be fixed up.","type_short":"Instruction"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"true if successful, false if cancelled or unable to fixup function or\n no function found containing the start address of the indicated instruction","type_short":"boolean"}},{"javadoc":"Recompute function body.  An open transaction must already exist.\n@param program the program the function is in.\n@param function the function to be fixed up.  A null function will return false.\n@param monitor task monitor\n@return true if successful, false if cancelled or unable to fixup function or\n no function found containing the start address of the indicated instruction","static":true,"name":"fixupFunctionBody","comment":"Recompute function body.  An open transaction must already exist.","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program the function is in.","type_short":"Program"},{"type_long":"ghidra.program.model.listing.Function","name":"func","comment":"","type_short":"Function"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"true if successful, false if cancelled or unable to fixup function or\n no function found containing the start address of the indicated instruction","type_short":"boolean"}}],"name":"CreateFunctionCmd","comment":"Command for Creating a function at an address.  It will copy off the\n parameters used to create the function (Selection or just an address) and\n create the function on redo and clear on undo.","fields":[]}

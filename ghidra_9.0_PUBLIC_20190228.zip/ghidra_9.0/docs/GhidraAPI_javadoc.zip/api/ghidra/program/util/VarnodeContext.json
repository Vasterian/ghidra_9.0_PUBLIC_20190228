{"implements":["ghidra.program.model.lang.ProcessorContext"],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"","type_short":"Program"},{"type_long":"ghidra.program.model.listing.ProgramContext","name":"programContext","comment":"","type_short":"ProgramContext"},{"type_long":"ghidra.program.model.listing.ProgramContext","name":"spaceProgramContext","comment":"","type_short":"ProgramContext"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setDebug","comment":"","params":[{"type_long":"boolean","name":"debugOn","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDebug","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setCurrentInstruction","comment":"","params":[{"type_long":"ghidra.program.model.listing.Instruction","name":"instr","comment":"","type_short":"Instruction"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCurrentInstruction","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Instruction","comment":"","type_short":"Instruction"}},{"javadoc":"","static":false,"name":"getBaseContextRegister","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"flowEnd","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"flowToAddress","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getKnownFlowToAddresses","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address[]","comment":"","type_short":"ghidra.program.model.address.Address[]"}},{"javadoc":"","static":false,"name":"flowStart","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"copyToFutureFlowState","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"mergeToFutureFlowState","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setFutureRegisterValue","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.lang.RegisterValue","name":"regVal","comment":"","type_short":"RegisterValue"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@param targetFunc function to get a returning varnode for\n \n NOTE: this only gets one, unless there is custom storage on the called function\n    there may be bonded ones in the default convention!\n@return varnode that represents where functions place their return value","static":false,"name":"getReturnVarnode","comment":"","params":[{"type_long":"ghidra.program.model.listing.Function","name":"targetFunc","comment":"function to get a returning varnode for\n \n NOTE: this only gets one, unless there is custom storage on the called function\n    there may be bonded ones in the default convention!","type_short":"Function"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode[]","comment":"varnode that represents where functions place their return value","type_short":"ghidra.program.model.pcode.Varnode[]"}},{"javadoc":"@return Varnode that represents the stack register","static":false,"name":"getStackVarnode","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"Varnode that represents the stack register","type_short":"Varnode"}},{"javadoc":"@return Register that represents the stack register","static":false,"name":"getStackRegister","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"Register that represents the stack register","type_short":"Register"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"varnode","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"varnode","comment":"","type_short":"Varnode"},{"type_long":"boolean","name":"signed","comment":"","type_short":"boolean"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"createVarnode","comment":"","params":[{"type_long":"long","name":"value","comment":"","type_short":"long"},{"type_long":"int","name":"spaceID","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"createConstantVarnode","comment":"","params":[{"type_long":"long","name":"value","comment":"","type_short":"long"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"createBadVarnode","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"createVarnode","comment":"","params":[{"type_long":"java.math.BigInteger","name":"bigVal","comment":"","type_short":"BigInteger"},{"type_long":"java.math.BigInteger","name":"spaceVal","comment":"","type_short":"BigInteger"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"putValue","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"out","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"result","comment":"","type_short":"Varnode"},{"type_long":"boolean","name":"mustClear","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"readExecutableCode","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setReadExecutableCode","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"clearReadExecutableCode","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Propogate any results that are in the value cache.\n@param clearContext true if the cache should be cleared.\n                      The propogation could be for flow purposes, and the\n                      processing of the instruction is finished, so it's effects should be kept.","static":false,"name":"propogateResults","comment":"Propogate any results that are in the value cache.","params":[{"type_long":"boolean","name":"clearContext","comment":"true if the cache should be cleared.\n                      The propogation could be for flow purposes, and the\n                      processing of the instruction is finished, so it's effects should be kept.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"propogateValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"node","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"val","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.model.address.Address","name":"address","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"return the location that this register was last set\n This is a transient thing, so it should only be used as a particular flow is being processed...\n@param reg\n@return address that the register was set.","static":false,"name":"getLastSetLocation","comment":"return the location that this register was last set\n This is a transient thing, so it should only be used as a particular flow is being processed...","params":[{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"},{"type_long":"java.math.BigInteger","name":"bval","comment":"","type_short":"BigInteger"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"address that the register was set.","type_short":"Address"}},{"javadoc":"return the location that this varnode was last set\n This is a transient thing, so it should only be used as a particular flow is being processed...\n@param reg\n@return address that the register was set.","static":false,"name":"getLastSetLocation","comment":"return the location that this varnode was last set\n This is a transient thing, so it should only be used as a particular flow is being processed...","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"rvar","comment":"","type_short":"Varnode"},{"type_long":"java.math.BigInteger","name":"bval","comment":"","type_short":"BigInteger"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"address that the register was set.","type_short":"Address"}},{"javadoc":"","static":false,"name":"getVarnode","comment":"","params":[{"type_long":"int","name":"spaceID","comment":"","type_short":"int"},{"type_long":"long","name":"offset","comment":"","type_short":"long"},{"type_long":"int","name":"size","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"getConstant","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"vnode","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getVarnode","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"space","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"offset","comment":"","type_short":"Varnode"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"get the value of a register as a varnode (value, space, size)\n@param reg register to get value for\n@param address location for value\n@param signed true if signed\n@return null if the register has no value","static":false,"name":"getRegisterVarnodeValue","comment":"get the value of a register as a varnode (value, space, size)","params":[{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"register to get value for","type_short":"Register"},{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"boolean","name":"signed","comment":"true if signed","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"null if the register has no value","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"getRegisterValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.RegisterValue","comment":"","type_short":"RegisterValue"}},{"javadoc":"","static":false,"name":"getRegisterValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"},{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.RegisterValue","comment":"","type_short":"RegisterValue"}},{"javadoc":"","static":false,"name":"getRegisterValueAddressRanges","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressRangeIterator","comment":"","type_short":"AddressRangeIterator"}},{"javadoc":"","static":false,"name":"hasValueOverRange","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"},{"type_long":"java.math.BigInteger","name":"bval","comment":"","type_short":"BigInteger"},{"type_long":"ghidra.program.model.address.AddressSet","name":"set","comment":"","type_short":"AddressSet"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Copy the varnode with as little manipulation as possible.\n Try to keep whatever partical state there is intact if a real value isn't required.\n@param out varnode to put it in\n@param in varnode to copy from.\n@param evaluator\n@throws NotFoundException","static":false,"name":"copy","comment":"Copy the varnode with as little manipulation as possible.\n Try to keep whatever partical state there is intact if a real value isn't required.","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"out","comment":"varnode to put it in","type_short":"Varnode"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"in","comment":"varnode to copy from.","type_short":"Varnode"},{"type_long":"boolean","name":"mustClearAll","comment":"","type_short":"boolean"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add two varnodes together to get a new value\n This could create a new space and return a varnode pointed into that space\n@param val1 first value\n@param val2 second value\n@return varnode that could be a constant, or an offset into a space\n@throws NotFoundException if any constant is needed not known","static":false,"name":"add","comment":"Add two varnodes together to get a new value\n This could create a new space and return a varnode pointed into that space","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"val1","comment":"first value","type_short":"Varnode"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"val2","comment":"second value","type_short":"Varnode"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"if any constant is needed not known","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"varnode that could be a constant, or an offset into a space","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"and","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"val1","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"val2","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"left","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"val1","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"val2","comment":"","type_short":"Varnode"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"getAddressSpace","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Subtract two varnodes to get a new value\n This could create a new space and return a varnode pointed into that space\n@param val1 first value\n@param val2 second value\n@return varnode that could be a constant, or an offset into a space\n@throws NotFoundException if any constant is needed not known","static":false,"name":"subtract","comment":"Subtract two varnodes to get a new value\n This could create a new space and return a varnode pointed into that space","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"val1","comment":"first value","type_short":"Varnode"},{"type_long":"ghidra.program.model.pcode.Varnode","name":"val2","comment":"second value","type_short":"Varnode"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"if any constant is needed not known","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"varnode that could be a constant, or an offset into a space","type_short":"Varnode"}},{"javadoc":"Extend a constant value if it can be extended.\n@param out varnode to extend into (for size)\n@param in varnode value to extend the size\n@return \n@throws NotFoundException","static":false,"name":"extendValue","comment":"Extend a constant value if it can be extended.","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"out","comment":"varnode to extend into (for size)","type_short":"Varnode"},{"type_long":"ghidra.program.model.pcode.Varnode[]","name":"in","comment":"varnode value to extend the size","type_short":"ghidra.program.model.pcode.Varnode[]"},{"type_long":"boolean","name":"signExtend","comment":"","type_short":"boolean"},{"type_long":"ghidra.program.util.ContextEvaluator","name":"evaluator","comment":"","type_short":"ContextEvaluator"}],"throws":[{"type_long":"ghidra.util.exception.NotFoundException","comment":"","type_short":"NotFoundException"}],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"clearRegister","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"reg","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getRegister","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"getRegisterValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.RegisterValue","comment":"","type_short":"RegisterValue"}},{"javadoc":"","static":false,"name":"getRegisterVarnodeValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"","static":false,"name":"getRegisterVarnode","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"ghidra.program.model.pcode.Varnode","comment":"","type_short":"Varnode"}},{"javadoc":"Return a register given a varnode","static":false,"name":"getRegister","comment":"Return a register given a varnode","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"vnode","comment":"","type_short":"Varnode"}],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register","comment":"","type_short":"Register"}},{"javadoc":"","static":false,"name":"getRegisters","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Register[]","comment":"","type_short":"ghidra.program.model.lang.Register[]"}},{"javadoc":"","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"},{"type_long":"boolean","name":"signed","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"java.math.BigInteger","comment":"","type_short":"BigInteger"}},{"javadoc":"","static":false,"name":"hasValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setRegisterValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.RegisterValue","name":"value","comment":"","type_short":"RegisterValue"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setValue","comment":"","params":[{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"},{"type_long":"java.math.BigInteger","name":"value","comment":"","type_short":"BigInteger"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isSymbol","comment":"","params":[{"type_long":"ghidra.program.model.pcode.Varnode","name":"node","comment":"","type_short":"Varnode"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isSymbolicSpace","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSpace","name":"space","comment":"","type_short":"AddressSpace"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isSymbolicSpace","comment":"","params":[{"type_long":"int","name":"spaceID","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}}],"name":"VarnodeContext","comment":"","fields":[{"type_long":"ghidra.program.model.address.Address","javadoc":"","static":false,"name":"BAD_ADDRESS","comment":"","type_short":"Address","constant_value":null},{"type_long":"int","javadoc":"","static":true,"name":"BAD_SPACE_ID_VALUE","comment":"","type_short":"int","constant_value":"65535"},{"type_long":"boolean","javadoc":"","static":false,"name":"debug","comment":"","type_short":"boolean","constant_value":null}]}

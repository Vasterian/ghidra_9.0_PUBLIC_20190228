{"implements":[],"javadoc":"A basic block constructed from PcodeOps","static":false,"extends":"ghidra.program.model.pcode.PcodeBlock","methods":[{"javadoc":"","static":false,"name":"getStart","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getStop","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"Is the given address in the range of instructions represented by this basic block\n@param addr is the Address\n@return true if the Address is contained","static":false,"name":"contains","comment":"Is the given address in the range of instructions represented by this basic block","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"is the Address","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the Address is contained","type_short":"boolean"}},{"javadoc":"@return an iterator over the PcodeOps in this basic block","static":false,"name":"getIterator","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Iterator<ghidra.program.model.pcode.PcodeOp>","comment":"an iterator over the PcodeOps in this basic block","type_short":"Iterator"}},{"javadoc":"","static":false,"name":"saveXmlBody","comment":"","params":[{"type_long":"java.io.Writer","name":"writer","comment":"","type_short":"Writer"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreXmlBody","comment":"","params":[{"type_long":"ghidra.xml.XmlPullParser","name":"parser","comment":"","type_short":"XmlPullParser"},{"type_long":"ghidra.program.model.pcode.BlockMap","name":"resolver","comment":"","type_short":"BlockMap"}],"throws":[{"type_long":"ghidra.program.model.pcode.PcodeXMLException","comment":"","type_short":"PcodeXMLException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PcodeBlockBasic","comment":"A basic block constructed from PcodeOps","fields":[]}

{"implements":["ghidra.program.model.data.ArrayStringable"],"javadoc":"Base type for integer data types such as {@link CharDataType chars}, {@link IntegerDataType ints},\n and {@link LongDataType longs}.\n <p>\n If {@link FormatSettingsDefinition#getFormat(Settings)} indicates that this is a\n {@link FormatSettingsDefinition#CHAR CHAR} type, the {@link ArrayStringable} methods will\n treat an array of this data type as a string.","static":false,"extends":"ghidra.program.model.data.BuiltIn","methods":[{"javadoc":"Constructor\n@param name a unique signed\/unsigned data-type name (also used as the mnemonic)\n@param signed\n@param dtm data-type manager whose data organization should be used","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"java.lang.String","name":"name","comment":"a unique signed\/unsigned data-type name (also used as the mnemonic)","type_short":"String"},{"type_long":"boolean","name":"signed","comment":"","type_short":"boolean"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"data-type manager whose data organization should be used","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.data.DataType#isDynamicallySized()","static":false,"name":"isDynamicallySized","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns true if this is a signed integer data-type","static":false,"name":"isSigned","comment":"Returns true if this is a signed integer data-type","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getDefaultLabelPrefix","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getMnemonic","comment":"","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the Assembly style data-type declaration\n for this data-type.","static":false,"name":"getAssemblyMnemonic","comment":"Returns the Assembly style data-type declaration\n for this data-type.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the C style data-type mnemonic\n for this data-type.\n NOTE: currently the same as getCDeclaration().","static":false,"name":"getCMnemonic","comment":"Returns the C style data-type mnemonic\n for this data-type.\n NOTE: currently the same as getCDeclaration().","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the C style data-type declaration\n for this data-type.  Null is returned if\n no appropriate declaration exists.","static":false,"name":"getCDeclaration","comment":"Returns the C style data-type declaration\n for this data-type.  Null is returned if\n no appropriate declaration exists.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see ghidra.program.model.data.DataType#getValue(ghidra.program.model.mem.MemBuffer, ghidra.docking.settings.Settings, int)","static":false,"name":"getValue","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.Object","comment":"","type_short":"Object"}},{"javadoc":"","static":false,"name":"getValueClass","comment":"","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"java.lang.Class<?>","comment":"","type_short":"Class"}},{"javadoc":"@see ghidra.program.model.data.DataType#getRepresentation(ghidra.program.model.mem.MemBuffer, ghidra.docking.settings.Settings, int)","static":false,"name":"getRepresentation","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"length","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"hasStringValue","comment":"","params":[{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getArrayDefaultLabelPrefix","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"len","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataTypeDisplayOptions","name":"options","comment":"","type_short":"DataTypeDisplayOptions"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getArrayDefaultOffcutLabelPrefix","comment":"","params":[{"type_long":"ghidra.program.model.mem.MemBuffer","name":"buf","comment":"","type_short":"MemBuffer"},{"type_long":"ghidra.docking.settings.Settings","name":"settings","comment":"","type_short":"Settings"},{"type_long":"int","name":"len","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.data.DataTypeDisplayOptions","name":"options","comment":"","type_short":"DataTypeDisplayOptions"},{"type_long":"int","name":"offcutOffset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@return the data-type with the opposite signedness from\n this data-type.  For example, this method on IntegerDataType will\n return an instance of UnsignedIntegerDataType.","static":false,"name":"getOppositeSignednessDataType","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"the data-type with the opposite signedness from\n this data-type.  For example, this method on IntegerDataType will\n return an instance of UnsignedIntegerDataType.","type_short":"DataType"}},{"javadoc":"","static":false,"name":"isEquivalent","comment":"","params":[{"type_long":"ghidra.program.model.data.DataType","name":"dt","comment":"","type_short":"DataType"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get a Signed Integer data-type instance of the requested size\n@param size data type size, sizes greater than 8 (and other than 16)\n will cause an SignedByteDataType[size] (i.e., Array) to be returned.\n@param dtm optional program data-type manager, if specified\n a generic data-type will be returned if possible.\n@return signed integer data type","static":true,"name":"getSignedDataType","comment":"Get a Signed Integer data-type instance of the requested size","params":[{"type_long":"int","name":"size","comment":"data type size, sizes greater than 8 (and other than 16)\n will cause an SignedByteDataType[size] (i.e., Array) to be returned.","type_short":"int"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"optional program data-type manager, if specified\n a generic data-type will be returned if possible.","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"signed integer data type","type_short":"DataType"}},{"javadoc":"Returns all built-in signed integer data-types.\n@param dtm optional program data-type manager, if specified\n generic data-types will be returned in place of fixed-sized data-types.","static":true,"name":"getSignedDataTypes","comment":"Returns all built-in signed integer data-types.","params":[{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"optional program data-type manager, if specified\n generic data-types will be returned in place of fixed-sized data-types.","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.AbstractIntegerDataType[]","comment":"","type_short":"ghidra.program.model.data.AbstractIntegerDataType[]"}},{"javadoc":"Get a Unsigned Integer data-type instance of the requested size\n@param size data type size, sizes greater than 8 (and other than 16)\n will cause an undefined type to be returned.\n@param dtm optional program data-type manager, if specified\n a generic data-type will be returned if possible.\n@return unsigned integer data type","static":true,"name":"getUnsignedDataType","comment":"Get a Unsigned Integer data-type instance of the requested size","params":[{"type_long":"int","name":"size","comment":"data type size, sizes greater than 8 (and other than 16)\n will cause an undefined type to be returned.","type_short":"int"},{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"optional program data-type manager, if specified\n a generic data-type will be returned if possible.","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataType","comment":"unsigned integer data type","type_short":"DataType"}},{"javadoc":"Returns all built-in unsigned integer data-types\n@param dtm optional program data-type manager, if specified\n generic data-types will be returned in place of fixed-sized data-types.","static":true,"name":"getUnsignedDataTypes","comment":"Returns all built-in unsigned integer data-types","params":[{"type_long":"ghidra.program.model.data.DataTypeManager","name":"dtm","comment":"optional program data-type manager, if specified\n generic data-types will be returned in place of fixed-sized data-types.","type_short":"DataTypeManager"}],"throws":[],"return":{"type_long":"ghidra.program.model.data.AbstractIntegerDataType[]","comment":"","type_short":"ghidra.program.model.data.AbstractIntegerDataType[]"}}],"name":"AbstractIntegerDataType","comment":"Base type for integer data types such as CharDataType, IntegerDataType,\n and LongDataType.\n \n If FormatSettingsDefinition#getFormat(Settings) indicates that this is a\n FormatSettingsDefinition#CHAR type, the ArrayStringable methods will\n treat an array of this data type as a string.","fields":[]}

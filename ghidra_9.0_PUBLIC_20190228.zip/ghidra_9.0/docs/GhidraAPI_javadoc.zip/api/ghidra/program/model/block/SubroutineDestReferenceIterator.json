{"implements":["ghidra.program.model.block.CodeBlockReferenceIterator"],"javadoc":"SubroutineDestReferenceIterator is a unidirectional iterator over \n the destination <CODE>CodeBlockReference<\/CODE>s for a CodeBlock.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct an Iterator over Destination blocks for a CodeBlock.\n External references will be ignored.\n@param block block to get destination blocks for.  This should be a\n subroutine obtained from PartitionCodeSubModel.\n@param monitor task monitor which allows user to cancel operation.\n@throws CancelledException if the monitor cancels the operation.","static":false,"name":"<init>","comment":"Construct an Iterator over Destination blocks for a CodeBlock.\n External references will be ignored.","params":[{"type_long":"ghidra.program.model.block.CodeBlock","name":"block","comment":"block to get destination blocks for.  This should be a\n subroutine obtained from PartitionCodeSubModel.","type_short":"CodeBlock"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor which allows user to cancel operation.","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the monitor cancels the operation.","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.block.CodeBlockReferenceIterator#next()","static":false,"name":"next","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.program.model.block.CodeBlockReference","comment":"","type_short":"CodeBlockReference"}},{"javadoc":"@see ghidra.program.model.block.CodeBlockReferenceIterator#hasNext()","static":false,"name":"hasNext","comment":"","params":[],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get number of destination references flowing out of this subroutine (block).\n All Calls from this block, and all external FlowType block references\n from this block are counted.\n@param block code block to get the number of destination references from.\n@param monitor task monitor","static":true,"name":"getNumDestinations","comment":"Get number of destination references flowing out of this subroutine (block).\n All Calls from this block, and all external FlowType block references\n from this block are counted.","params":[{"type_long":"ghidra.program.model.block.CodeBlock","name":"block","comment":"code block to get the number of destination references from.","type_short":"CodeBlock"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"task monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"SubroutineDestReferenceIterator","comment":"SubroutineDestReferenceIterator is a unidirectional iterator over \n the destination CodeBlockReferences for a CodeBlock.","fields":[]}

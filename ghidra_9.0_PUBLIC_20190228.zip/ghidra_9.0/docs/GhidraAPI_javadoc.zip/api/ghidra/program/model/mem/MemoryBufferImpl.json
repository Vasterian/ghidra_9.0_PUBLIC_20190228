{"implements":["ghidra.program.model.mem.MutableMemBuffer"],"javadoc":"MemBufferImpl implements the MemBuffer interface.  It buffers up N bytes\n at time, reducing the overall number of calls to Memory, greatly reducing\n the overhead of various error checks.  This implementation will not wrap\n if the end of the memory space is encountered.\n \n The {@link #getByte(int)} method can cause the buffer cache to adjust if\n outside the current cache range.  This is not the case for other methods which \n will simply defer to the underlying memory if outside the cache range.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new MemoryBufferImpl\n@param mem memory associated with the given address\n@param addr start address","static":false,"name":"<init>","comment":"Construct a new MemoryBufferImpl","params":[{"type_long":"ghidra.program.model.mem.Memory","name":"mem","comment":"memory associated with the given address","type_short":"Memory"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"start address","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new MemoryBufferImpl\n@param mem memory associated with the given address\n@param addr start address\n@param bufSize the size of the memory buffer.","static":false,"name":"<init>","comment":"Construct a new MemoryBufferImpl","params":[{"type_long":"ghidra.program.model.mem.Memory","name":"mem","comment":"memory associated with the given address","type_short":"Memory"},{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"start address","type_short":"Address"},{"type_long":"int","name":"bufSize","comment":"the size of the memory buffer.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"clone","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.mem.MemoryBufferImpl","comment":"","type_short":"MemoryBufferImpl"}},{"javadoc":"","static":false,"name":"advance","comment":"","params":[{"type_long":"int","name":"displacement","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.address.AddressOverflowException","comment":"","type_short":"AddressOverflowException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setPosition","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getByte","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"","static":false,"name":"getAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getMemory","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.mem.Memory","comment":"","type_short":"Memory"}},{"javadoc":"","static":false,"name":"getBytes","comment":"","params":[{"type_long":"byte[]","name":"b","comment":"","type_short":"byte[]"},{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isBigEndian","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getShort","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"short","comment":"","type_short":"short"}},{"javadoc":"","static":false,"name":"getInt","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getLong","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"long","comment":"","type_short":"long"}},{"javadoc":"","static":false,"name":"getBigInteger","comment":"","params":[{"type_long":"int","name":"offset","comment":"","type_short":"int"},{"type_long":"int","name":"size","comment":"","type_short":"int"},{"type_long":"boolean","name":"signed","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.program.model.mem.MemoryAccessException","comment":"","type_short":"MemoryAccessException"}],"return":{"type_long":"java.math.BigInteger","comment":"","type_short":"BigInteger"}}],"name":"MemoryBufferImpl","comment":"MemBufferImpl implements the MemBuffer interface.  It buffers up N bytes\n at time, reducing the overall number of calls to Memory, greatly reducing\n the overhead of various error checks.  This implementation will not wrap\n if the end of the memory space is encountered.\n \n The #getByte(int) method can cause the buffer cache to adjust if\n outside the current cache range.  This is not the case for other methods which \n will simply defer to the underlying memory if outside the cache range.","fields":[]}

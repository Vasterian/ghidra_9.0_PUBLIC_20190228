{"implements":[],"javadoc":"FollowFlow follows the program's code flow either forward or backward from an initial\n address set. It adds the flow addresses to the initial address set by flowing \"from\" the \n initial addresses in the forward direction or by flowing \"to\" the initial addresses when\n used in the backward direction.\n The flow can be limited by indicating the flow types (i.e. unconditional call, \n computed jump, etc.) that we do NOT want to follow.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor\n@param program the program whose flow we are following.\n@param addressSet the initial addresses that should be flowed from or flowed to.\n@param doNotFollow array of flow types that are not to be followed.\n null or empty array indicates follow all flows. The following are valid\n flow types for the doNotFollow array:\n <BR>FlowType.COMPUTED_CALL\n <BR>FlowType.CONDITIONAL_CALL\n <BR>FlowType.UNCONDITIONAL_CALL\n <BR>FlowType.COMPUTED_JUMP\n <BR>FlowType.CONDITIONAL_JUMP\n <BR>FlowType.UNCONDITIONAL_JUMP\n <BR>FlowType.INDIRECTION","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program whose flow we are following.","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSet","name":"addressSet","comment":"the initial addresses that should be flowed from or flowed to.","type_short":"AddressSet"},{"type_long":"ghidra.program.model.symbol.FlowType[]","name":"doNotFollow","comment":"array of flow types that are not to be followed.\n null or empty array indicates follow all flows. The following are valid\n flow types for the doNotFollow array:\n FlowType.COMPUTED_CALL\n FlowType.CONDITIONAL_CALL\n FlowType.UNCONDITIONAL_CALL\n FlowType.COMPUTED_JUMP\n FlowType.CONDITIONAL_JUMP\n FlowType.UNCONDITIONAL_JUMP\n FlowType.INDIRECTION","type_short":"ghidra.program.model.symbol.FlowType[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor\n@param program the program whose flow we are following.\n@param addressSet the initial addresses that should be flowed from or flowed to.\n@param doNotFollow array of flow types that are not to be followed.\n null or empty array indicates follow all flows. The following are valid\n flow types for the doNotFollow array:\n <BR>FlowType.COMPUTED_CALL\n <BR>FlowType.CONDITIONAL_CALL\n <BR>FlowType.UNCONDITIONAL_CALL\n <BR>FlowType.COMPUTED_JUMP\n <BR>FlowType.CONDITIONAL_JUMP\n <BR>FlowType.UNCONDITIONAL_JUMP\n <BR>FlowType.INDIRECTION\n@param followIntoFunctions true if flows into (or back from) defined functions\n should be followed.","static":false,"name":"<init>","comment":"Constructor","params":[{"type_long":"ghidra.program.model.listing.Program","name":"program","comment":"the program whose flow we are following.","type_short":"Program"},{"type_long":"ghidra.program.model.address.AddressSet","name":"addressSet","comment":"the initial addresses that should be flowed from or flowed to.","type_short":"AddressSet"},{"type_long":"ghidra.program.model.symbol.FlowType[]","name":"doNotFollow","comment":"array of flow types that are not to be followed.\n null or empty array indicates follow all flows. The following are valid\n flow types for the doNotFollow array:\n FlowType.COMPUTED_CALL\n FlowType.CONDITIONAL_CALL\n FlowType.UNCONDITIONAL_CALL\n FlowType.COMPUTED_JUMP\n FlowType.CONDITIONAL_JUMP\n FlowType.UNCONDITIONAL_JUMP\n FlowType.INDIRECTION","type_short":"ghidra.program.model.symbol.FlowType[]"},{"type_long":"boolean","name":"followIntoFunctions","comment":"true if flows into (or back from) defined functions\n should be followed.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determines the address set that flows from the addresses in this FollowFlow object's\n initialAddresses set. The address set is determined by what addresses were provided \n when the FollowFlow was constructed and the type of flow requested.\n This method follows flows in the forward direction.\n@param monitor a cancellable task monitor, may be null\n@return the resulting address set.","static":false,"name":"getFlowAddressSet","comment":"Determines the address set that flows from the addresses in this FollowFlow object's\n initialAddresses set. The address set is determined by what addresses were provided \n when the FollowFlow was constructed and the type of flow requested.\n This method follows flows in the forward direction.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"a cancellable task monitor, may be null","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the resulting address set.","type_short":"AddressSet"}},{"javadoc":"Determines the address set that flows to the addresses in this FollowFlow object's\n initialAddresses set. The address set is determined by what addresses were provided \n when the FollowFlow was constructed and the type of flow requested. The constructor\n indicated the flow types not to be followed. All others will be traversed in the\n backwards direction to determine the addresses that are flowing to those in the initial\n set.\n@param monitor a cancellable task monitor, may be null\n@return the resulting address set.","static":false,"name":"getFlowToAddressSet","comment":"Determines the address set that flows to the addresses in this FollowFlow object's\n initialAddresses set. The address set is determined by what addresses were provided \n when the FollowFlow was constructed and the type of flow requested. The constructor\n indicated the flow types not to be followed. All others will be traversed in the\n backwards direction to determine the addresses that are flowing to those in the initial\n set.","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"a cancellable task monitor, may be null","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressSet","comment":"the resulting address set.","type_short":"AddressSet"}}],"name":"FollowFlow","comment":"FollowFlow follows the program's code flow either forward or backward from an initial\n address set. It adds the flow addresses to the initial address set by flowing \"from\" the \n initial addresses in the forward direction or by flowing \"to\" the initial addresses when\n used in the backward direction.\n The flow can be limited by indicating the flow types (i.e. unconditional call, \n computed jump, etc.) that we do NOT want to follow.","fields":[]}

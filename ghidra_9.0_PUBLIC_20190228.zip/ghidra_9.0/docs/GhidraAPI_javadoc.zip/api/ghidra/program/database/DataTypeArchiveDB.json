{"implements":["ghidra.program.model.listing.DataTypeArchive","ghidra.program.util.DataTypeArchiveChangeManager"],"javadoc":"Database implementation for Data Type Archive.","static":false,"extends":"ghidra.framework.data.DomainObjectAdapterDB","methods":[{"javadoc":"Constructs a new DataTypeArchiveDB within a project folder.\n@param folder folder within which the project archive will be created\n@param name the name of the data type archive\n@param consumer the object that is using this data type archive.\n@throws IOException if there is an error accessing the database.\n@throws InvalidNameException\n@throws DuplicateNameException","static":false,"name":"<init>","comment":"Constructs a new DataTypeArchiveDB within a project folder.","params":[{"type_long":"ghidra.framework.model.DomainFolder","name":"folder","comment":"folder within which the project archive will be created","type_short":"DomainFolder"},{"type_long":"java.lang.String","name":"name","comment":"the name of the data type archive","type_short":"String"},{"type_long":"java.lang.Object","name":"consumer","comment":"the object that is using this data type archive.","type_short":"Object"}],"throws":[{"type_long":"java.io.IOException","comment":"if there is an error accessing the database.","type_short":"IOException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"},{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new DataTypeArchivemDB\n@param dbh a handle to an open data type archive database.\n@param openMode one of:\n \t\tREAD_ONLY: the original database will not be modified\n \t\tUPDATE: the database can be written to.\n \t\tUPGRADE: the database is upgraded to the latest schema as it is opened.\n@param monitor TaskMonitor that allows the open to be canceled.\n@param consumer the object that keeping the program open.\n@throws IOException if an error accessing the database occurs.\n@throws VersionException if database version does not match implementation, UPGRADE may be possible.\n@throws CancelledException if instantiation is canceled by monitor","static":false,"name":"<init>","comment":"Constructs a new DataTypeArchivemDB","params":[{"type_long":"db.DBHandle","name":"dbh","comment":"a handle to an open data type archive database.","type_short":"DBHandle"},{"type_long":"int","name":"openMode","comment":"one of:\n \t\tREAD_ONLY: the original database will not be modified\n \t\tUPDATE: the database can be written to.\n \t\tUPGRADE: the database is upgraded to the latest schema as it is opened.","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"TaskMonitor that allows the open to be canceled.","type_short":"TaskMonitor"},{"type_long":"java.lang.Object","name":"consumer","comment":"the object that keeping the program open.","type_short":"Object"}],"throws":[{"type_long":"java.io.IOException","comment":"if an error accessing the database occurs.","type_short":"IOException"},{"type_long":"ghidra.util.exception.VersionException","comment":"if database version does not match implementation, UPGRADE may be possible.","type_short":"VersionException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if instantiation is canceled by monitor","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.listing.Program#getDataTypeManager()","static":false,"name":"getDataTypeManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.data.DataTypeManager","comment":"","type_short":"DataTypeManager"}},{"javadoc":"@see ghidra.program.model.listing.Program#getCreationDate()","static":false,"name":"getCreationDate","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Date","comment":"","type_short":"Date"}},{"javadoc":"@see ghidra.program.model.listing.Program#getDefaultStoredPointerSize()","static":false,"name":"getDefaultPointerSize","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see ghidra.program.model.listing.Program#getChanges()","static":false,"name":"getChanges","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.database.DataTypeArchiveDBChangeSet","comment":"","type_short":"DataTypeArchiveDBChangeSet"}},{"javadoc":"notification the a data type has changed\n@param dataTypeID the id of the data type that changed.\n@param type the type of the change (moved, renamed, etc.)\n@param oldValue the old data type.\n@param newValue the new data type.","static":false,"name":"dataTypeChanged","comment":"notification the a data type has changed","params":[{"type_long":"long","name":"dataTypeID","comment":"the id of the data type that changed.","type_short":"long"},{"type_long":"int","name":"type","comment":"the type of the change (moved, renamed, etc.)","type_short":"int"},{"type_long":"java.lang.Object","name":"oldValue","comment":"the old data type.","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"the new data type.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that a data type was added.\n@param dataTypeID the id if the data type that was added.\n@param type should always be DATATYPE_ADDED\n@param oldValue always null\n@param newValue the data type added.","static":false,"name":"dataTypeAdded","comment":"Notification that a data type was added.","params":[{"type_long":"long","name":"dataTypeID","comment":"the id if the data type that was added.","type_short":"long"},{"type_long":"int","name":"type","comment":"should always be DATATYPE_ADDED","type_short":"int"},{"type_long":"java.lang.Object","name":"oldValue","comment":"always null","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"the data type added.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that a category was changed.\n@param categoryID the id of the data type that was added.\n@param type the type of changed\n@param oldValue old value depends on the type.\n@param newValue new value depends on the type.","static":false,"name":"categoryChanged","comment":"Notification that a category was changed.","params":[{"type_long":"long","name":"categoryID","comment":"the id of the data type that was added.","type_short":"long"},{"type_long":"int","name":"type","comment":"the type of changed","type_short":"int"},{"type_long":"java.lang.Object","name":"oldValue","comment":"old value depends on the type.","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"new value depends on the type.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Notification that a category was added.\n@param categoryID the id of the data type that was added.\n@param type the type of changed (should always be CATEGORY_ADDED)\n@param oldValue always null\n@param newValue new value depends on the type.","static":false,"name":"categoryAdded","comment":"Notification that a category was added.","params":[{"type_long":"long","name":"categoryID","comment":"the id of the data type that was added.","type_short":"long"},{"type_long":"int","name":"type","comment":"the type of changed (should always be CATEGORY_ADDED)","type_short":"int"},{"type_long":"java.lang.Object","name":"oldValue","comment":"always null","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"new value depends on the type.","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Mark the state this Data Type Archive as having changed and generate\n the event.  Any or all parameters may be null.\n@param type event type\n@param oldValue original value\n@param newValue new value","static":false,"name":"setChanged","comment":"Mark the state this Data Type Archive as having changed and generate\n the event.  Any or all parameters may be null.","params":[{"type_long":"int","name":"type","comment":"event type","type_short":"int"},{"type_long":"java.lang.Object","name":"oldValue","comment":"original value","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"new value","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Mark the state of a Program as having changed and generate\n the event.  Any or all parameters may be null.\n NOTE: ChangeSet data will not be updated since this a very generic\n change not related to a specific address.\n@param type event type\n@param affectedObj object that is the subject of the event\n@param oldValue original value or an Object that is related to\n the event\n@param newValue new value or an Object that is related to the\n the event","static":false,"name":"setObjChanged","comment":"Mark the state of a Program as having changed and generate\n the event.  Any or all parameters may be null.\n NOTE: ChangeSet data will not be updated since this a very generic\n change not related to a specific address.","params":[{"type_long":"int","name":"type","comment":"event type","type_short":"int"},{"type_long":"java.lang.Object","name":"affectedObj","comment":"object that is the subject of the event","type_short":"Object"},{"type_long":"java.lang.Object","name":"oldValue","comment":"original value or an Object that is related to\n the event","type_short":"Object"},{"type_long":"java.lang.Object","name":"newValue","comment":"new value or an Object that is related to the\n the event","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.model.DomainObject#setName(java.lang.String)","static":false,"name":"setName","comment":"","params":[{"type_long":"java.lang.String","name":"newName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.model.DomainObject#getDescription()","static":false,"name":"getDescription","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"@see ghidra.program.model.listing.Program#invalidate()","static":false,"name":"invalidate","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.model.DomainObject#isChangeable()","static":false,"name":"isChangeable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getMetadata","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.Map<java.lang.String,java.lang.String>","comment":"","type_short":"Map"}},{"javadoc":"","static":false,"name":"updateID","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DataTypeArchiveDB","comment":"Database implementation for Data Type Archive.","fields":[{"type_long":"java.lang.String","javadoc":"Name of data type archive information property list","static":true,"name":"ARCHIVE_INFO","comment":"Name of data type archive information property list","type_short":"String","constant_value":"\"Data Type Archive Information\""},{"type_long":"java.lang.String","javadoc":"Name of data type archive settings property list","static":true,"name":"ARCHIVE_SETTINGS","comment":"Name of data type archive settings property list","type_short":"String","constant_value":"\"Data Type Archive Settings\""},{"type_long":"java.lang.String","javadoc":"Name of date created property","static":true,"name":"DATE_CREATED","comment":"Name of date created property","type_short":"String","constant_value":"\"Date Created\""},{"type_long":"java.lang.String","javadoc":"Name of Ghidra version property","static":true,"name":"CREATED_WITH_GHIDRA_VERSION","comment":"Name of Ghidra version property","type_short":"String","constant_value":"\"Created With Ghidra Version\""},{"type_long":"java.util.Date","javadoc":"A date from January 1, 1970","static":true,"name":"JANUARY_1_1970","comment":"A date from January 1, 1970","type_short":"Date","constant_value":null}]}

{"implements":["ghidra.program.model.symbol.ReferenceManager","ghidra.program.database.ManagerDB","db.util.ErrorHandler"],"javadoc":"Reference manager implementation for the database.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Construct a new reference manager.\n@param dbHandle handle to the database\n@param addrMap map to convert addresses to longs and longs to addresses\n@param openMode one of ProgramDB.CREATE, UPDATE, UPGRADE, or READ_ONLY\n@param lock the program synchronization lock\n@param monitor Task monitor for upgrading\n@throws IOException if a database io error occurs.\n@throws VersionException if the database version is different from the expected version","static":false,"name":"<init>","comment":"Construct a new reference manager.","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"handle to the database","type_short":"DBHandle"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"map to convert addresses to longs and longs to addresses","type_short":"AddressMap"},{"type_long":"int","name":"openMode","comment":"one of ProgramDB.CREATE, UPDATE, UPGRADE, or READ_ONLY","type_short":"int"},{"type_long":"ghidra.util.Lock","name":"lock","comment":"the program synchronization lock","type_short":"Lock"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"Task monitor for upgrading","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"if a database io error occurs.","type_short":"IOException"},{"type_long":"ghidra.util.exception.VersionException","comment":"if the database version is different from the expected version","type_short":"VersionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setProgram","comment":"","params":[{"type_long":"ghidra.program.database.ProgramDB","name":"program","comment":"","type_short":"ProgramDB"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"programReady","comment":"","params":[{"type_long":"int","name":"openMode","comment":"","type_short":"int"},{"type_long":"int","name":"currentRevision","comment":"","type_short":"int"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addMemoryReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.symbol.RefType","name":"type","comment":"","type_short":"RefType"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"","type_short":"SourceType"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"","static":false,"name":"addStackReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"int","name":"stackOffset","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.symbol.RefType","name":"type","comment":"","type_short":"RefType"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"","type_short":"SourceType"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#addRegisterReference(ghidra.program.model.address.Address, int, ghidra.program.model.lang.Register, ghidra.program.model.symbol.RefType, int)","static":false,"name":"addRegisterReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.lang.Register","name":"register","comment":"","type_short":"Register"},{"type_long":"ghidra.program.model.symbol.RefType","name":"type","comment":"","type_short":"RefType"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"","type_short":"SourceType"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#addOffsetMemReference(ghidra.program.model.address.Address, ghidra.program.model.address.Address, long, ghidra.program.model.symbol.RefType, int, int)","static":false,"name":"addOffsetMemReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"long","name":"offset","comment":"","type_short":"long"},{"type_long":"ghidra.program.model.symbol.RefType","name":"type","comment":"","type_short":"RefType"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"","type_short":"SourceType"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#addShiftedMemReference(ghidra.program.model.address.Address, ghidra.program.model.address.Address, int, ghidra.program.model.symbol.RefType, int, int)","static":false,"name":"addShiftedMemReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"shiftValue","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.symbol.RefType","name":"type","comment":"","type_short":"RefType"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"","type_short":"SourceType"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"","static":false,"name":"addExternalReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.symbol.ExternalLocation","name":"location","comment":"","type_short":"ExternalLocation"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"","type_short":"SourceType"},{"type_long":"ghidra.program.model.symbol.RefType","name":"type","comment":"","type_short":"RefType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"}],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"","static":false,"name":"addExternalReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"java.lang.String","name":"libraryName","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"extLabel","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"extAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"","type_short":"SourceType"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.symbol.RefType","name":"type","comment":"","type_short":"RefType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"","static":false,"name":"addExternalReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.symbol.Namespace","name":"extNamespace","comment":"","type_short":"Namespace"},{"type_long":"java.lang.String","name":"extLabel","comment":"","type_short":"String"},{"type_long":"ghidra.program.model.address.Address","name":"extAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.symbol.SourceType","name":"sourceType","comment":"","type_short":"SourceType"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"},{"type_long":"ghidra.program.model.symbol.RefType","name":"type","comment":"","type_short":"RefType"}],"throws":[{"type_long":"ghidra.util.exception.InvalidInputException","comment":"","type_short":"InvalidInputException"},{"type_long":"ghidra.util.exception.DuplicateNameException","comment":"","type_short":"DuplicateNameException"}],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"Attempts to determine which if any of the local functions variables are referenced by the specified\n reference.  In utilizing the firstUseOffset scoping model, negative offsets (relative to the functions\n entry) are shifted beyond the maximum positive offset within the function.  While this does not account for the\n actual instruction flow, it is hopefully accurate enough for most situations.\n@see ghidra.program.model.symbol.ReferenceManager#getReferencedVariable(ghidra.program.model.symbol.Reference)","static":false,"name":"getReferencedVariable","comment":"Attempts to determine which if any of the local functions variables are referenced by the specified\n reference.  In utilizing the firstUseOffset scoping model, negative offsets (relative to the functions\n entry) are shifted beyond the maximum positive offset within the function.  While this does not account for the\n actual instruction flow, it is hopefully accurate enough for most situations.","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"reference","comment":"","type_short":"Reference"}],"throws":[],"return":{"type_long":"ghidra.program.model.listing.Variable","comment":"","type_short":"Variable"}},{"javadoc":"Attempts to determine the set of references which refer to the specified variable.\n In utilizing the firstUseOffset scoping model, negative offsets (relative to the functions\n entry) are shifted beyond the maximum positive offset within the function.  While this does not account for the\n actual instruction flow, it is hopefully accurate enough for most situations.\n@see ghidra.program.model.symbol.ReferenceManager#getReferencesTo(ghidra.program.model.listing.Variable)","static":false,"name":"getReferencesTo","comment":"Attempts to determine the set of references which refer to the specified variable.\n In utilizing the firstUseOffset scoping model, negative offsets (relative to the functions\n entry) are shifted beyond the maximum positive offset within the function.  While this does not account for the\n actual instruction flow, it is hopefully accurate enough for most situations.","params":[{"type_long":"ghidra.program.model.listing.Variable","name":"var","comment":"","type_short":"Variable"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference[]","comment":"","type_short":"ghidra.program.model.symbol.Reference[]"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#setPrimary(ghidra.program.model.symbol.Reference, boolean)","static":false,"name":"setPrimary","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"","type_short":"Reference"},{"type_long":"boolean","name":"isPrimary","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferencesFrom(ghidra.program.model.address.Address)","static":false,"name":"getReferencesFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference[]","comment":"","type_short":"ghidra.program.model.symbol.Reference[]"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getFlowReferencesFrom(ghidra.program.model.address.Address)","static":false,"name":"getFlowReferencesFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference[]","comment":"","type_short":"ghidra.program.model.symbol.Reference[]"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReference(ghidra.program.model.address.Address, ghidra.program.model.address.Address, int)","static":false,"name":"getReference","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferenceCountFrom(ghidra.program.model.address.Address)","static":false,"name":"getReferenceCountFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferenceCountTo(ghidra.program.model.address.Address)","static":false,"name":"getReferenceCountTo","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferenceDestinationCount()","static":false,"name":"getReferenceDestinationCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferenceSourceCount()","static":false,"name":"getReferenceSourceCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Get all memory references with the given from address at opIndex.","static":false,"name":"getReferences","comment":"Get all memory references with the given from address at opIndex.","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference[]","comment":"","type_short":"ghidra.program.model.symbol.Reference[]"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getPrimaryReferenceFrom(ghidra.program.model.address.Address, int)","static":false,"name":"getPrimaryReferenceFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferenceDestinationIterator(ghidra.program.model.address.Address, boolean)","static":false,"name":"getReferenceDestinationIterator","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferenceDestinationIterator(ghidra.program.model.address.AddressSetView, boolean)","static":false,"name":"getReferenceDestinationIterator","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferenceSourceIterator(ghidra.program.model.address.Address, boolean)","static":false,"name":"getReferenceSourceIterator","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferenceIterator(ghidra.program.model.address.Address)","static":false,"name":"getReferenceIterator","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.ReferenceIterator","comment":"","type_short":"ReferenceIterator"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferenceSourceIterator(ghidra.program.model.address.AddressSetView, boolean)","static":false,"name":"getReferenceSourceIterator","comment":"","params":[{"type_long":"ghidra.program.model.address.AddressSetView","name":"addrSet","comment":"","type_short":"AddressSetView"},{"type_long":"boolean","name":"forward","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#hasFlowReferencesFrom(ghidra.program.model.address.Address)","static":false,"name":"hasFlowReferencesFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#hasReferencesFrom(ghidra.program.model.address.Address)","static":false,"name":"hasReferencesFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#hasReferencesFrom(ghidra.program.model.address.Address, int)","static":false,"name":"hasReferencesFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#hasReferencesTo(ghidra.program.model.address.Address)","static":false,"name":"hasReferencesTo","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#removeAllReferencesFrom(ghidra.program.model.address.Address, ghidra.program.model.address.Address)","static":false,"name":"removeAllReferencesFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"beginAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#removeAllReferencesFrom(ghidra.program.model.address.Address)","static":false,"name":"removeAllReferencesFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Symbol is about to be removed.\n symbol becomes unusable.\n@param symbol","static":false,"name":"symbolRemoved","comment":"Symbol is about to be removed.\n symbol becomes unusable.","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"symbol","comment":"","type_short":"Symbol"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Symbol has been added\n@param sym new symbol","static":false,"name":"symbolAdded","comment":"Symbol has been added","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"sym","comment":"new symbol","type_short":"Symbol"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#setAssociation(ghidra.program.model.symbol.Symbol, ghidra.program.model.symbol.Reference)","static":false,"name":"setAssociation","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Symbol","name":"s","comment":"","type_short":"Symbol"},{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#removeAssociation(ghidra.program.model.symbol.Reference)","static":false,"name":"removeAssociation","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#updateRefType(ghidra.program.model.symbol.Reference, ghidra.program.model.symbol.RefType)","static":false,"name":"updateRefType","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"","type_short":"Reference"},{"type_long":"ghidra.program.model.symbol.RefType","name":"refType","comment":"","type_short":"RefType"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferencesTo(ghidra.program.model.address.Address)","static":false,"name":"getReferencesTo","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.ReferenceIterator","comment":"","type_short":"ReferenceIterator"}},{"javadoc":"@see ghidra.program.database.ManagerDB#invalidateCache(boolean)","static":false,"name":"invalidateCache","comment":"","params":[{"type_long":"boolean","name":"all","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Move all references to the specified oldAddr.  Any symbol binding will be discarded since\n these are intended for memory label references only.\n This method is intended specifically to support upgrading of certain references\n (i.e., Stack, Register and External addresses).\n NOTE! After ProgramDB version 12, this method will no longer be useful for\n upgrading stack and register references since they will not exist\n within the ReferenceTo-list.\n@param oldToAddr old reference to address\n@param newToAddr new reference to address\n@return number of references updated","static":false,"name":"moveReferencesTo","comment":"Move all references to the specified oldAddr.  Any symbol binding will be discarded since\n these are intended for memory label references only.\n This method is intended specifically to support upgrading of certain references\n (i.e., Stack, Register and External addresses).\n NOTE! After ProgramDB version 12, this method will no longer be useful for\n upgrading stack and register references since they will not exist\n within the ReferenceTo-list.","params":[{"type_long":"ghidra.program.model.address.Address","name":"oldToAddr","comment":"old reference to address","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"newToAddr","comment":"new reference to address","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"number of references updated","type_short":"int"}},{"javadoc":"@see ghidra.program.database.ManagerDB#deleteAddressRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, ghidra.util.task.TaskMonitor)","static":false,"name":"deleteAddressRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"startAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"endAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.database.ManagerDB#moveAddressRange(ghidra.program.model.address.Address, ghidra.program.model.address.Address, long, ghidra.util.task.TaskMonitor)","static":false,"name":"moveAddressRange","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"","type_short":"Address"},{"type_long":"long","name":"length","comment":"","type_short":"long"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the reference level for the references to the given address\n@param toAddr the address at which to find the highest reference level","static":false,"name":"getReferenceLevel","comment":"Returns the reference level for the references to the given address","params":[{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"the address at which to find the highest reference level","type_short":"Address"}],"throws":[],"return":{"type_long":"byte","comment":"","type_short":"byte"}},{"javadoc":"Get address iterator over references that are external entry\n mem references.","static":false,"name":"getExternalEntryIterator","comment":"Get address iterator over references that are external entry\n mem references.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.AddressIterator","comment":"","type_short":"AddressIterator"}},{"javadoc":"Return whether the address is an external entry point.\n@param toAddr the address to test for external entry point","static":false,"name":"isExternalEntryPoint","comment":"Return whether the address is an external entry point.","params":[{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"the address to test for external entry point","type_short":"Address"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Create a memory reference to the given address to mark it as\n an external entry point.\n@param toAddr the address at which to make an external entry point","static":false,"name":"addExternalEntryPointRef","comment":"Create a memory reference to the given address to mark it as\n an external entry point.","params":[{"type_long":"ghidra.program.model.address.Address","name":"toAddr","comment":"the address at which to make an external entry point","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the external entry point at the given address\n@param addr that address at which to remove the external entry point attribute.","static":false,"name":"removeExternalEntryPoint","comment":"Removes the external entry point at the given address","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"that address at which to remove the external entry point attribute.","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see db.util.ErrorHandler#dbError(java.io.IOException)","static":false,"name":"dbError","comment":"","params":[{"type_long":"java.io.IOException","name":"e","comment":"","type_short":"IOException"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#delete(ghidra.program.model.symbol.Reference)","static":false,"name":"delete","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"","type_short":"Reference"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getExternalReferences()","static":false,"name":"getExternalReferences","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.ReferenceIterator","comment":"","type_short":"ReferenceIterator"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#addReference(ghidra.program.model.symbol.Reference)","static":false,"name":"addReference","comment":"","params":[{"type_long":"ghidra.program.model.symbol.Reference","name":"ref","comment":"","type_short":"Reference"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference","comment":"","type_short":"Reference"}},{"javadoc":"@see ghidra.program.model.symbol.ReferenceManager#getReferencesFrom(ghidra.program.model.address.Address, int)","static":false,"name":"getReferencesFrom","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"fromAddr","comment":"","type_short":"Address"},{"type_long":"int","name":"opIndex","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"ghidra.program.model.symbol.Reference[]","comment":"","type_short":"ghidra.program.model.symbol.Reference[]"}}],"name":"ReferenceDBManager","comment":"Reference manager implementation for the database.","fields":[]}

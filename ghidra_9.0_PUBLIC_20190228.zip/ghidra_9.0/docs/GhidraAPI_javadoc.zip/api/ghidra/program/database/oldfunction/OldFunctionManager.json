{"implements":["db.util.ErrorHandler"],"javadoc":"This class only exists to support upgrading Ghidra Version 2.1 and earlier.\n <BR>\n <b>NOTE: Programmers should not use this class!<\/b>","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructs a new OldFunctionManager.\n@param dbHandle data base handle\n@param errHandler the error handler\n@param addrMap the address map\n@throws VersionException if function manager's version does not match its expected version\n@throws IOException if an i\/o error occurs","static":false,"name":"<init>","comment":"Constructs a new OldFunctionManager.","params":[{"type_long":"db.DBHandle","name":"dbHandle","comment":"data base handle","type_short":"DBHandle"},{"type_long":"db.util.ErrorHandler","name":"errHandler","comment":"the error handler","type_short":"ErrorHandler"},{"type_long":"ghidra.program.database.map.AddressMap","name":"addrMap","comment":"the address map","type_short":"AddressMap"}],"throws":[{"type_long":"ghidra.util.exception.VersionException","comment":"if function manager's version does not match its expected version","type_short":"VersionException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Actually does the work of upgrading the old program function manager.\n@param upgradeProgram the program to upgrade\n@param monitor the task monitor to allow the user to cancel the upgrade\n@throws CancelledException if the user cancels the upgrade\n@throws IOException if an i\/o error occurs","static":false,"name":"upgrade","comment":"Actually does the work of upgrading the old program function manager.","params":[{"type_long":"ghidra.program.database.ProgramDB","name":"upgradeProgram","comment":"the program to upgrade","type_short":"ProgramDB"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"the task monitor to allow the user to cancel the upgrade","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if the user cancels the upgrade","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"if an i\/o error occurs","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see db.util.ErrorHandler#dbError(java.io.IOException)","static":false,"name":"dbError","comment":"","params":[{"type_long":"java.io.IOException","name":"e","comment":"","type_short":"IOException"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Permanently discards all data resources associated with the old function manager.\n This should be invoked when an upgrade of all function data has been completed.\n@throws IOException","static":false,"name":"dispose","comment":"Permanently discards all data resources associated with the old function manager.\n This should be invoked when an upgrade of all function data has been completed.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"OldFunctionManager","comment":"This class only exists to support upgrading Ghidra Version 2.1 and earlier.\n \n NOTE: Programmers should not use this class!","fields":[]}

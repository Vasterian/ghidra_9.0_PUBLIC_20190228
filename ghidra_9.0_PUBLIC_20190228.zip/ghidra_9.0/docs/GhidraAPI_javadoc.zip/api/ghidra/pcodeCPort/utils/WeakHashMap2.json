{"implements":[],"javadoc":"A hashtable-based <code>Map<\/code> implementation with <em>weak values<\/em>.\n \n <P>This implementation uses two maps internally, which nearly doubles the memory requirements\n over a traditional map.","static":false,"extends":"java.util.AbstractMap","methods":[{"javadoc":"Constructs a new, empty <code>WeakHashMap2<\/code> with the given\n initial capacity and the given load factor.\n@param initialCapacity The initial capacity of the\n                          <code>WeakHashMap2<\/code>\n@param loadFactor The load factor of the <code>WeakHashMap2<\/code>\n@throws IllegalArgumentException If the initial capacity is less than\n                                   zero, or if the load factor is\n                                   nonpositive","static":false,"name":"<init>","comment":"Constructs a new, empty WeakHashMap2 with the given\n initial capacity and the given load factor.","params":[{"type_long":"int","name":"initialCapacity","comment":"The initial capacity of the\n                          WeakHashMap2","type_short":"int"},{"type_long":"float","name":"loadFactor","comment":"The load factor of the WeakHashMap2","type_short":"float"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new, empty <code>WeakHashMap2<\/code> with the given\n initial capacity and the default load factor, which is\n <code>0.75<\/code>.\n@param initialCapacity The initial capacity of the\n                          <code>WeakHashMap2<\/code>\n@throws IllegalArgumentException If the initial capacity is less than\n                                   zero","static":false,"name":"<init>","comment":"Constructs a new, empty WeakHashMap2 with the given\n initial capacity and the default load factor, which is\n 0.75.","params":[{"type_long":"int","name":"initialCapacity","comment":"The initial capacity of the\n                          WeakHashMap2","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new, empty <code>WeakHashMap2<\/code> with the default\n initial capacity and the default load factor, which is\n <code>0.75<\/code>.","static":false,"name":"<init>","comment":"Constructs a new, empty WeakHashMap2 with the default\n initial capacity and the default load factor, which is\n 0.75.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructs a new <code>WeakHashMap2<\/code> with the same mappings as the\n specified <tt>Map<\/tt>.  The <code>WeakHashMap2<\/code> is created with an\n initial capacity of twice the number of mappings in the specified map\n or 11 (whichever is greater), and a default load factor, which is\n <tt>0.75<\/tt>.\n@param t the map whose mappings are to be placed in this map.\n@since 1.3","static":false,"name":"<init>","comment":"Constructs a new WeakHashMap2 with the same mappings as the\n specified Map.  The WeakHashMap2 is created with an\n initial capacity of twice the number of mappings in the specified map\n or 11 (whichever is greater), and a default load factor, which is\n 0.75.","params":[{"type_long":"java.util.Map<K,V>","name":"t","comment":"the map whose mappings are to be placed in this map.","type_short":"Map"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the number of key-value mappings in this map.\n <strong>Note:<\/strong> <em>In contrast with most implementations of the\n <code>Map<\/code> interface, the time required by this operation is\n linear in the size of the map.<\/em>","static":false,"name":"size","comment":"Returns the number of key-value mappings in this map.\n Note: In contrast with most implementations of the\n Map interface, the time required by this operation is\n linear in the size of the map.","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"Returns <code>true<\/code> if this map contains no key-value mappings.","static":false,"name":"isEmpty","comment":"Returns true if this map contains no key-value mappings.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns <code>true<\/code> if this map contains a mapping for the\n specified key.\n@param key The key whose presence in this map is to be tested","static":false,"name":"containsKey","comment":"Returns true if this map contains a mapping for the\n specified key.","params":[{"type_long":"java.lang.Object","name":"key","comment":"The key whose presence in this map is to be tested","type_short":"Object"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Returns the value to which this map maps the specified <code>key<\/code>.\n If this map does not contain a value for this key, then return\n <code>null<\/code>.\n@param key The key whose associated value, if any, is to be returned","static":false,"name":"get","comment":"Returns the value to which this map maps the specified key.\n If this map does not contain a value for this key, then return\n null.","params":[{"type_long":"java.lang.Object","name":"key","comment":"The key whose associated value, if any, is to be returned","type_short":"Object"}],"throws":[],"return":{"type_long":"V","comment":"","type_short":"V"}},{"javadoc":"Updates this map so that the given <code>key<\/code> maps to the given\n <code>value<\/code>.  If the map previously contained a mapping for\n <code>key<\/code> then that mapping is replaced and the previous value is\n returned.\n@param key The key that is to be mapped to the given\n                <code>value<\/code>\n@param value The value to which the given <code>key<\/code> is to be\n                mapped\n@return The previous value to which this key was mapped, or\n          <code>null<\/code> if if there was no mapping for the key","static":false,"name":"put","comment":"Updates this map so that the given key maps to the given\n value.  If the map previously contained a mapping for\n key then that mapping is replaced and the previous value is\n returned.","params":[{"type_long":"K","name":"key","comment":"The key that is to be mapped to the given\n                value","type_short":"K"},{"type_long":"V","name":"value","comment":"The value to which the given key is to be\n                mapped","type_short":"V"}],"throws":[],"return":{"type_long":"V","comment":"The previous value to which this key was mapped, or\n          null if if there was no mapping for the key","type_short":"V"}},{"javadoc":"","static":false,"name":"reverseGet","comment":"","params":[{"type_long":"V","name":"value","comment":"","type_short":"V"}],"throws":[],"return":{"type_long":"K","comment":"","type_short":"K"}},{"javadoc":"Removes the mapping for the given <code>key<\/code> from this map, if\n present.\n@param key The key whose mapping is to be removed\n@return The value to which this key was mapped, or <code>null<\/code> if\n          there was no mapping for the key","static":false,"name":"remove","comment":"Removes the mapping for the given key from this map, if\n present.","params":[{"type_long":"java.lang.Object","name":"key","comment":"The key whose mapping is to be removed","type_short":"Object"}],"throws":[],"return":{"type_long":"V","comment":"The value to which this key was mapped, or null if\n          there was no mapping for the key","type_short":"V"}},{"javadoc":"Removes all mappings from this map.","static":false,"name":"clear","comment":"Removes all mappings from this map.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a <code>Set<\/code> view of the mappings in this map.","static":false,"name":"entrySet","comment":"Returns a Set view of the mappings in this map.","params":[],"throws":[],"return":{"type_long":"java.util.Set<java.util.Map.Entry<K,V>>","comment":"","type_short":"Set"}}],"name":"WeakHashMap2","comment":"A hashtable-based Map implementation with weak values.\n \n This implementation uses two maps internally, which nearly doubles the memory requirements\n over a traditional map.","fields":[]}

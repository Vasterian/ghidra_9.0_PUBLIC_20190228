{"implements":[],"javadoc":"This is the main state of a batch import task, containing the segregated groupings of\n applications.\n <p>\n This class also handles populating the batch groups by recursively descending into files\n and the contents of those files.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a new BatchInfo object with a default {@link #maxDepth}.","static":false,"name":"<init>","comment":"Creates a new BatchInfo object with a default #maxDepth.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates a new BatchInfo object using the specified maxDepth.\n@param maxDepth see {@link #maxDepth}.","static":false,"name":"<init>","comment":"Creates a new BatchInfo object using the specified maxDepth.","params":[{"type_long":"int","name":"maxDepth","comment":"see #maxDepth.","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a list of the {@link BatchGroup}s that have been found when processing\n the added files.\n@return {@link List} of {@link BatchGroup}s.","static":false,"name":"getGroups","comment":"Returns a list of the BatchGroups that have been found when processing\n the added files.","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.plugins.importer.batch.BatchGroup>","comment":"List of BatchGroups.","type_short":"List"}},{"javadoc":"Returns the count of how many importable objects (ie. {@link LoadSpec}s) were found.\n@return count of importable objects.","static":false,"name":"getTotalCount","comment":"Returns the count of how many importable objects (ie. LoadSpecs) were found.","params":[],"throws":[],"return":{"type_long":"int","comment":"count of importable objects.","type_short":"int"}},{"javadoc":"Returns the count of how many files were found while processing the source files.\n@return count of files found while processing source files.","static":false,"name":"getTotalRawCount","comment":"Returns the count of how many files were found while processing the source files.","params":[],"throws":[],"return":{"type_long":"int","comment":"count of files found while processing source files.","type_short":"int"}},{"javadoc":"Returns the count of applications in enabled {@link BatchGroup}s... in other\n words, the number of objects that would be imported during this batch.\n@return count of enabled applications.","static":false,"name":"getEnabledCount","comment":"Returns the count of applications in enabled BatchGroups... in other\n words, the number of objects that would be imported during this batch.","params":[],"throws":[],"return":{"type_long":"int","comment":"count of enabled applications.","type_short":"int"}},{"javadoc":"Removes a user-added source file (and all the embedded files inside it) from this\n batch.\n@param fsrl {@link FSRL} of the file to remove.","static":false,"name":"remove","comment":"Removes a user-added source file (and all the embedded files inside it) from this\n batch.","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of the file to remove.","type_short":"FSRL"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a file to this batch as the direct result of a user action.\n <p>\n If the file is a container for other files, this method will iterate through those\n child files and recursively try to add them using this method.\n <p>\n@param fsrl {@link FSRL} of the file to add.\n@param taskMonitor {@link TaskMonitor} to watch and update with progress.\n@return boolean true if something in the the file produced something to import.\n@throws IOException if io error when reading files.\n@throws CancelledException if user cancels.","static":false,"name":"addFile","comment":"Adds a file to this batch as the direct result of a user action.\n \n If the file is a container for other files, this method will iterate through those\n child files and recursively try to add them using this method.\n ","params":[{"type_long":"ghidra.formats.gfilesystem.FSRL","name":"fsrl","comment":"FSRL of the file to add.","type_short":"FSRL"},{"type_long":"ghidra.util.task.TaskMonitor","name":"taskMonitor","comment":"TaskMonitor to watch and update with progress.","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"if io error when reading files.","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"if user cancels.","type_short":"CancelledException"}],"return":{"type_long":"boolean","comment":"boolean true if something in the the file produced something to import.","type_short":"boolean"}},{"javadoc":"Returns true if any of the user source files had containers that were not\n recursed into because of the {@link #maxDepth} limit.\n@return true if any of the user source files had containers that were not\n recursed into because of the {@link #maxDepth} limit.","static":false,"name":"wasRecurseTerminatedEarly","comment":"Returns true if any of the user source files had containers that were not\n recursed into because of the #maxDepth limit.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if any of the user source files had containers that were not\n recursed into because of the #maxDepth limit.","type_short":"boolean"}},{"javadoc":"Checks the found applications and returns true if only a single binary was found,\n even if multiple loaders claim it.\n@return true if single binary and batch is probably not correct importer.","static":false,"name":"isSingleApp","comment":"Checks the found applications and returns true if only a single binary was found,\n even if multiple loaders claim it.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if single binary and batch is probably not correct importer.","type_short":"boolean"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the {@link List} of files added via {@link #addFile(FSRL, TaskMonitor)}.\n@return {@link List} of files added via {@link #addFile(FSRL, TaskMonitor)}.","static":false,"name":"getUserAddedSources","comment":"Returns the List of files added via #addFile(FSRL, TaskMonitor).","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.plugins.importer.batch.UserAddedSourceInfo>","comment":"List of files added via #addFile(FSRL, TaskMonitor).","type_short":"List"}},{"javadoc":"Maximum depth of containers (ie. filesystems) to recurse into when processing\n a file added by the user\n@return the current maximum depth of containers (ie. filesystems) to recurse into when processing\n a file added by the user.","static":false,"name":"getMaxDepth","comment":"Maximum depth of containers (ie. filesystems) to recurse into when processing\n a file added by the user","params":[],"throws":[],"return":{"type_long":"int","comment":"the current maximum depth of containers (ie. filesystems) to recurse into when processing\n a file added by the user.","type_short":"int"}},{"javadoc":"Sets a new max container recursive depth limit for this batch import\n <p>\n Doing this requires rescanning all original user-added source files and stopping\n at the new max depth.\n <p>\n@param newMaxDepth new value for the max depth","static":false,"name":"setMaxDepth","comment":"Sets a new max container recursive depth limit for this batch import\n \n Doing this requires rescanning all original user-added source files and stopping\n at the new max depth.\n ","params":[{"type_long":"int","name":"newMaxDepth","comment":"new value for the max depth","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"BatchInfo","comment":"This is the main state of a batch import task, containing the segregated groupings of\n applications.\n \n This class also handles populating the batch groups by recursively descending into files\n and the contents of those files.","fields":[{"type_long":"int","javadoc":"","static":true,"name":"MAXDEPTH_UNLIMITED","comment":"","type_short":"int","constant_value":"-1"},{"type_long":"int","javadoc":"","static":true,"name":"MAXDEPTH_DEFAULT","comment":"","type_short":"int","constant_value":"2"}]}

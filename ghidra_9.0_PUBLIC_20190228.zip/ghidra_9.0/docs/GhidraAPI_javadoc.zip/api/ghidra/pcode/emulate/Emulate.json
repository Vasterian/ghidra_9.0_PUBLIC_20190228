{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.app.plugin.processors.sleigh.SleighLanguage","name":"lang","comment":"","type_short":"SleighLanguage"},{"type_long":"ghidra.pcode.memstate.MemoryState","name":"s","comment":"","type_short":"MemoryState"},{"type_long":"ghidra.pcode.emulate.BreakTable","name":"b","comment":"","type_short":"BreakTable"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getLanguage","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.Language","comment":"","type_short":"Language"}},{"javadoc":"","static":false,"name":"isInstructionStart","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@returns the current emulator execution state","static":false,"name":"getExecutionState","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.pcode.emulate.EmulateExecutionState","comment":"","type_short":"EmulateExecutionState"}},{"javadoc":"","static":false,"name":"getExecuteAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getLastExecuteAddress","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.address.Address","comment":"","type_short":"Address"}},{"javadoc":"","static":false,"name":"getNewDisassemblerContext","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.pcode.emulate.EmulateDisassemblerContext","comment":"","type_short":"EmulateDisassemblerContext"}},{"javadoc":"Returns the current context register value.  The context value returned reflects\n its state when the previously executed instruction was \n parsed\/executed.  The context value returned will feed into the next \n instruction to be parsed with its non-flowing bits cleared and\n any future context state merged in.  If no instruction has been executed,\n the explicitly set context will be returned.  A null value is returned\n if no context register is defined by the language or initial context has \n not been set.","static":false,"name":"getContextRegisterValue","comment":"Returns the current context register value.  The context value returned reflects\n its state when the previously executed instruction was \n parsed\/executed.  The context value returned will feed into the next \n instruction to be parsed with its non-flowing bits cleared and\n any future context state merged in.  If no instruction has been executed,\n the explicitly set context will be returned.  A null value is returned\n if no context register is defined by the language or initial context has \n not been set.","params":[],"throws":[],"return":{"type_long":"ghidra.program.model.lang.RegisterValue","comment":"","type_short":"RegisterValue"}},{"javadoc":"Sets the context register value at the current execute address.\n The Emulator should not be running when this method is invoked.\n Only flowing context bits should be set, as non-flowing bits\n will be cleared prior to parsing on instruction.  In addition,\n any future context state set by the pcode emitter will\n take precedence over context set using this method.  This method\n is primarily intended to be used to establish the initial \n context state.\n@param regValue","static":false,"name":"setContextRegisterValue","comment":"Sets the context register value at the current execute address.\n The Emulator should not be running when this method is invoked.\n Only flowing context bits should be set, as non-flowing bits\n will be cleared prior to parsing on instruction.  In addition,\n any future context state set by the pcode emitter will\n take precedence over context set using this method.  This method\n is primarily intended to be used to establish the initial \n context state.","params":[{"type_long":"ghidra.program.model.lang.RegisterValue","name":"regValue","comment":"","type_short":"RegisterValue"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"fallthruOp","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeConditionalBranch","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeBranch","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeCallother","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[{"type_long":"ghidra.pcode.emulate.UnimplementedCallOtherException","comment":"","type_short":"UnimplementedCallOtherException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setExecuteAddress","comment":"","params":[{"type_long":"ghidra.program.model.address.Address","name":"addr","comment":"","type_short":"Address"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeInstruction","comment":"","params":[{"type_long":"boolean","name":"stopAtBreakpoint","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.pcode.error.LowlevelError","comment":"","type_short":"LowlevelError"},{"type_long":"ghidra.pcode.emulate.InstructionDecodeException","comment":"","type_short":"InstructionDecodeException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMemoryState","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.pcode.memstate.MemoryState","comment":"","type_short":"MemoryState"}},{"javadoc":"","static":false,"name":"executeLoad","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeStore","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeBranchind","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeCall","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeCallind","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeMultiequal","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"executeIndirect","comment":"","params":[{"type_long":"ghidra.pcode.pcoderaw.PcodeOpRaw","name":"op","comment":"","type_short":"PcodeOpRaw"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"Emulate","comment":"","fields":[]}

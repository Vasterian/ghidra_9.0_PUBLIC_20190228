{"implements":[],"javadoc":"<code>EmulateInstructionStateModifier<\/code> defines a language specific \n handler to assist emulation with adjusting the current execution state,\n providing support for custom pcodeop's (i.e., CALLOTHER).\n The implementation of this interface must provide a public constructor which \n takes a single Emulate argument.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Execute a CALLOTHER op\n@param op\n@return true if corresponding pcodeop was registered and emulation support is\n performed, or false if corresponding pcodeop is not supported by this class.\n@throws LowlevelError","static":false,"name":"executeCallOther","comment":"Execute a CALLOTHER op","params":[{"type_long":"ghidra.program.model.pcode.PcodeOp","name":"op","comment":"","type_short":"PcodeOp"}],"throws":[{"type_long":"ghidra.pcode.error.LowlevelError","comment":"","type_short":"LowlevelError"}],"return":{"type_long":"boolean","comment":"true if corresponding pcodeop was registered and emulation support is\n performed, or false if corresponding pcodeop is not supported by this class.","type_short":"boolean"}},{"javadoc":"Emulation callback immediately before the first instruction is executed.\n This callback permits any language specific initializations to be performed.\n@param emulate\n@param current_address intial execute address\n@param contextRegisterValue initial context value or null if not applicable or unknown\n@throws LowlevelError","static":false,"name":"initialExecuteCallback","comment":"Emulation callback immediately before the first instruction is executed.\n This callback permits any language specific initializations to be performed.","params":[{"type_long":"ghidra.pcode.emulate.Emulate","name":"emulate","comment":"","type_short":"Emulate"},{"type_long":"ghidra.program.model.address.Address","name":"current_address","comment":"intial execute address","type_short":"Address"},{"type_long":"ghidra.program.model.lang.RegisterValue","name":"contextRegisterValue","comment":"initial context value or null if not applicable or unknown","type_short":"RegisterValue"}],"throws":[{"type_long":"ghidra.pcode.error.LowlevelError","comment":"","type_short":"LowlevelError"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Emulation callback immediately following execution of the lastExecuteAddress.\n One use of this callback is to modify the flowing\/future context state.\n@param emulate\n@param lastExecuteAddress\n@param lastExecutePcode\n@param lastPcodeIndex pcode index of last op or -1 if no pcode or fall-through occurred.\n@param currentAddress\n@throws LowlevelError","static":false,"name":"postExecuteCallback","comment":"Emulation callback immediately following execution of the lastExecuteAddress.\n One use of this callback is to modify the flowing\/future context state.","params":[{"type_long":"ghidra.pcode.emulate.Emulate","name":"emulate","comment":"","type_short":"Emulate"},{"type_long":"ghidra.program.model.address.Address","name":"lastExecuteAddress","comment":"","type_short":"Address"},{"type_long":"ghidra.program.model.pcode.PcodeOp[]","name":"lastExecutePcode","comment":"","type_short":"ghidra.program.model.pcode.PcodeOp[]"},{"type_long":"int","name":"lastPcodeIndex","comment":"pcode index of last op or -1 if no pcode or fall-through occurred.","type_short":"int"},{"type_long":"ghidra.program.model.address.Address","name":"currentAddress","comment":"","type_short":"Address"}],"throws":[{"type_long":"ghidra.pcode.error.LowlevelError","comment":"","type_short":"LowlevelError"}],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"EmulateInstructionStateModifier","comment":"EmulateInstructionStateModifier defines a language specific \n handler to assist emulation with adjusting the current execution state,\n providing support for custom pcodeop's (i.e., CALLOTHER).\n The implementation of this interface must provide a public constructor which \n takes a single Emulate argument.","fields":[]}

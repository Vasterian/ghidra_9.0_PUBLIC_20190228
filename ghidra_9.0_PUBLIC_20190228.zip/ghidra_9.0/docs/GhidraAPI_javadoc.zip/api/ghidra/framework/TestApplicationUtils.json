{"implements":[],"javadoc":"","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"getTestApplicationRootDirectory","comment":"","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"","type_short":"File"}},{"javadoc":"","static":true,"name":"getCurrentRepoDirectory","comment":"","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"","type_short":"File"}},{"javadoc":"Returns a directory that contains all repos for a given git clone.  This directory name\n is unique to the active clone collection, which makes it useful for creating\n unique temporary directories to allow multiple simultaneous test runs.\n@return the parent dir of the current repo","static":true,"name":"getRepoContainerDirectory","comment":"Returns a directory that contains all repos for a given git clone.  This directory name\n is unique to the active clone collection, which makes it useful for creating\n unique temporary directories to allow multiple simultaneous test runs.","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"the parent dir of the current repo","type_short":"File"}},{"javadoc":"Creates a folder that is unique for the current repo.  This allows clients to have \n multiple clones on their machine, running tests from each repo simultaneously.\n@return a folder that is unique for the current repo.","static":true,"name":"getUniqueTempFolder","comment":"Creates a folder that is unique for the current repo.  This allows clients to have \n multiple clones on their machine, running tests from each repo simultaneously.","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"a folder that is unique for the current repo.","type_short":"File"}}],"name":"TestApplicationUtils","comment":"","fields":[]}

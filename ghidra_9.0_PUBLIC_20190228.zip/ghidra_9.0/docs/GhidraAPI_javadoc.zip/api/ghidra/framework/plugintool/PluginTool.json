{"implements":["ghidra.framework.model.Tool","docking.DockWinListener","ghidra.framework.plugintool.ServiceProvider"],"javadoc":"Base class that is a container to manage plugins and their actions, and\n to coordinate the firing of plugin events and tool events. A\n PluginTool may have visible components supplied by\n <pre>ComponentProviders <\/pre>. These components may be docked within the\n tool, or moved out into their own windows.\n <p>The PluginTool also manages tasks that run in the background, and\n options used by the plugins.\n <\/p>","static":false,"extends":"docking.AbstractDockingTool","methods":[{"javadoc":"Construct a new PluginTool.\n@param project project that contains this tool\n@param template the template from which to load this tool","static":false,"name":"<init>","comment":"Construct a new PluginTool.","params":[{"type_long":"ghidra.framework.model.Project","name":"project","comment":"project that contains this tool","type_short":"Project"},{"type_long":"ghidra.framework.model.ToolTemplate","name":"template","comment":"the template from which to load this tool","type_short":"ToolTemplate"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new PluginTool.\n@param project project that contains the tool\n@param name the name of the tool\n@param isDockable true if the tool contains components that can be docked\n@param hasStatus true if the tool should display a status component\n@param isModal true if the tool is modal, meaning that while this tool is visible,\n        no other tool or dialog in Ghidra can have focus","static":false,"name":"<init>","comment":"Construct a new PluginTool.","params":[{"type_long":"ghidra.framework.model.Project","name":"project","comment":"project that contains the tool","type_short":"Project"},{"type_long":"java.lang.String","name":"name","comment":"the name of the tool","type_short":"String"},{"type_long":"boolean","name":"isDockable","comment":"true if the tool contains components that can be docked","type_short":"boolean"},{"type_long":"boolean","name":"hasStatus","comment":"true if the tool should display a status component","type_short":"boolean"},{"type_long":"boolean","name":"isModal","comment":"true if the tool is modal, meaning that while this tool is visible,\n        no other tool or dialog in Ghidra can have focus","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"ghidra.framework.model.Project","name":"project","comment":"","type_short":"Project"},{"type_long":"ghidra.framework.model.ProjectManager","name":"projectManager","comment":"","type_short":"ProjectManager"},{"type_long":"ghidra.framework.model.ToolServices","name":"toolServices","comment":"","type_short":"ToolServices"},{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"boolean","name":"isDockable","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"hasStatus","comment":"","type_short":"boolean"},{"type_long":"boolean","name":"isModal","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPluginClassManager","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.util.PluginClassManager","comment":"","type_short":"PluginClassManager"}},{"javadoc":"","static":false,"name":"getWindowManager","comment":"","params":[],"throws":[],"return":{"type_long":"docking.DockingWindowManager","comment":"","type_short":"DockingWindowManager"}},{"javadoc":"Set the Tool option (GhidraOptions.OPTION_DOCKING_WINDOWS_ON_TOP)\n for whether a docked window will always be shown on top of its parent window.\n@param b true means that the docked window will always appear on top of its\n parent window; false means to allow the docked window to be \"hidden\" under its\n parent dialog","static":false,"name":"setWindowsOnTop","comment":"Set the Tool option (GhidraOptions.OPTION_DOCKING_WINDOWS_ON_TOP)\n for whether a docked window will always be shown on top of its parent window.","params":[{"type_long":"boolean","name":"b","comment":"true means that the docked window will always appear on top of its\n parent window; false means to allow the docked window to be \"hidden\" under its\n parent dialog","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the value of the Tool option (GhidraOptions.OPTION_DOCKING_WINDOWS_ON_TOP)\n for whether docked windows will always be shown on top of their parent windows.\n@return value of the Tool option, GhidraOptions.OPTION_DOCKING_WINDOWS_ON_TOP","static":false,"name":"isWindowsOnTop","comment":"Return the value of the Tool option (GhidraOptions.OPTION_DOCKING_WINDOWS_ON_TOP)\n for whether docked windows will always be shown on top of their parent windows.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"value of the Tool option, GhidraOptions.OPTION_DOCKING_WINDOWS_ON_TOP","type_short":"boolean"}},{"javadoc":"Add popup listener that is notified when the popup menu is about to be\n displayed.\n@param listener listener that is notified when the popup menu is to\n be displayed","static":false,"name":"addPopupListener","comment":"Add popup listener that is notified when the popup menu is about to be\n displayed.","params":[{"type_long":"ghidra.framework.plugintool.PopupListener","name":"listener","comment":"listener that is notified when the popup menu is to\n be displayed","type_short":"PopupListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the manage plugins dialog that is currently\n being used.\n@return the current manage plugins dialog","static":false,"name":"getManagePluginsDialog","comment":"Returns the manage plugins dialog that is currently\n being used.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.dialog.ManagePluginsDialog","comment":"the current manage plugins dialog","type_short":"ManagePluginsDialog"}},{"javadoc":"Displays the manage plugins dialog.\n@param addSaveActions if true show save actions\n@param isNewTool true if creating a new tool","static":false,"name":"showConfig","comment":"Displays the manage plugins dialog.","params":[{"type_long":"boolean","name":"addSaveActions","comment":"if true show save actions","type_short":"boolean"},{"type_long":"boolean","name":"isNewTool","comment":"true if creating a new tool","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Displays the extensions installation dialog.","static":false,"name":"showExtensions","comment":"Displays the extensions installation dialog.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove popup listener\n@param listener listener that is notified when the popup menu is to\n be displayed","static":false,"name":"removePopupListener","comment":"Remove popup listener","params":[{"type_long":"ghidra.framework.plugintool.PopupListener","name":"listener","comment":"listener that is notified when the popup menu is to\n be displayed","type_short":"PopupListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds the action to the tool.\n@param action the action to be added.","static":false,"name":"addAction","comment":"Adds the action to the tool.","params":[{"type_long":"docking.action.DockingActionIf","name":"action","comment":"the action to be added.","type_short":"DockingActionIf"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add an action that is associated with the given provider. The action\n works only in the context of the provider, and not across the tool\n as for a \"global\" action.\n@param provider provider that has a visible component in the tool\n@param action local action to associate with the provider","static":false,"name":"addLocalAction","comment":"Add an action that is associated with the given provider. The action\n works only in the context of the provider, and not across the tool\n as for a \"global\" action.","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"provider that has a visible component in the tool","type_short":"ComponentProvider"},{"type_long":"docking.action.DockingActionIf","name":"action","comment":"local action to associate with the provider","type_short":"DockingActionIf"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes the given action from the tool\n@param action the action to be removed.","static":false,"name":"removeAction","comment":"Removes the given action from the tool","params":[{"type_long":"docking.action.DockingActionIf","name":"action","comment":"the action to be removed.","type_short":"DockingActionIf"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Adds a visible component to the tool.\n@param provider The component provider that provides the component to be added.\n@param show flag to initially show the component.","static":false,"name":"addComponentProvider","comment":"Adds a visible component to the tool.","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"The component provider that provides the component to be added.","type_short":"ComponentProvider"},{"type_long":"boolean","name":"show","comment":"flag to initially show the component.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set whether a component's header should be shown; the header is the component that\n is dragged in order to move the component within the tool, or out of the tool\n into a separate window\n@param provider provider of the visible component in the tool\n@param b true means to show the header","static":false,"name":"showComponentHeader","comment":"Set whether a component's header should be shown; the header is the component that\n is dragged in order to move the component within the tool, or out of the tool\n into a separate window","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"provider of the visible component in the tool","type_short":"ComponentProvider"},{"type_long":"boolean","name":"b","comment":"true means to show the header","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isActive","comment":"","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Hides or shows the component associated with the given provider.\n@param provider the provider of the component to be hidden or shown.\n@param visibleState true to show the component, false to hide it.","static":false,"name":"showComponentProvider","comment":"Hides or shows the component associated with the given provider.","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"the provider of the component to be hidden or shown.","type_short":"ComponentProvider"},{"type_long":"boolean","name":"visibleState","comment":"true to show the component, false to hide it.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toFront","comment":"","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeComponentProvider","comment":"","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateTitle","comment":"","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isVisible","comment":"","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"isVisible","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see ghidra.framework.model.Tool#setVisible(boolean)","static":false,"name":"setVisible","comment":"","params":[{"type_long":"boolean","name":"visibility","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toFront","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the tool's frame\n@return the tool's frame","static":false,"name":"getToolFrame","comment":"Returns the tool's frame","params":[],"throws":[],"return":{"type_long":"javax.swing.JFrame","comment":"the tool's frame","type_short":"JFrame"}},{"javadoc":"Returns true if the specified <code>serviceInterface<\/code>\n is a valid service that exists in this tool.\n@param serviceInterface the service interface\n@return true if the specified <code>serviceInterface<\/code>","static":false,"name":"isService","comment":"Returns true if the specified serviceInterface\n is a valid service that exists in this tool.","params":[{"type_long":"java.lang.Class<?>","name":"serviceInterface","comment":"the service interface","type_short":"Class"}],"throws":[],"return":{"type_long":"boolean","comment":"true if the specified serviceInterface","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getService","comment":"","params":[{"type_long":"java.lang.Class<T>","name":"c","comment":"","type_short":"Class"}],"throws":[],"return":{"type_long":"T","comment":"","type_short":"T"}},{"javadoc":"Get the objects that implement the given service.\n@param c service class\n@return array of Objects that implement the service, c.","static":false,"name":"getServices","comment":"Get the objects that implement the given service.","params":[{"type_long":"java.lang.Class<T>","name":"c","comment":"service class","type_short":"Class"}],"throws":[],"return":{"type_long":"T[]","comment":"array of Objects that implement the service, c.","type_short":"T[]"}},{"javadoc":"","static":false,"name":"addServiceListener","comment":"","params":[{"type_long":"ghidra.framework.plugintool.util.ServiceListener","name":"listener","comment":"","type_short":"ServiceListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeServiceListener","comment":"","params":[{"type_long":"ghidra.framework.plugintool.util.ServiceListener","name":"listener","comment":"","type_short":"ServiceListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the status information.\n@param text string to be displayed in the Status display area\n@param beep whether to be or not","static":false,"name":"setStatusInfo","comment":"Set the status information.","params":[{"type_long":"java.lang.String","name":"text","comment":"string to be displayed in the Status display area","type_short":"String"},{"type_long":"boolean","name":"beep","comment":"whether to be or not","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setStatusInfo","comment":"","params":[{"type_long":"java.lang.String","name":"text","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clear the status information.","static":false,"name":"clearStatusInfo","comment":"Clear the status information.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the provider that should get the default focus when no component has focus.\n@param provider the provider that should get the default focus when no component has focus.","static":false,"name":"setDefaultComponent","comment":"Sets the provider that should get the default focus when no component has focus.","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"the provider that should get the default focus when no component has focus.","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getToolTemplate","comment":"","params":[{"type_long":"boolean","name":"includeConfigState","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolTemplate","comment":"","type_short":"ToolTemplate"}},{"javadoc":"","static":false,"name":"saveToolToToolTemplate","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolTemplate","comment":"","type_short":"ToolTemplate"}},{"javadoc":"","static":false,"name":"saveWindowingDataToXml","comment":"","params":[],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"restoreWindowingDataFromXml","comment":"","params":[{"type_long":"org.jdom.Element","name":"windowData","comment":"","type_short":"Element"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"acceptDomainFiles","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile[]","name":"data","comment":"","type_short":"ghidra.framework.model.DomainFile[]"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"addPropertyChangeListener","comment":"","params":[{"type_long":"java.beans.PropertyChangeListener","name":"l","comment":"","type_short":"PropertyChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addToolListener","comment":"","params":[{"type_long":"ghidra.framework.model.ToolListener","name":"listener","comment":"","type_short":"ToolListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns true if there is at least one tool listening to this tool's plugin events.","static":false,"name":"hasToolListeners","comment":"Returns true if there is at least one tool listening to this tool's plugin events.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"exit","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"firePluginEvent","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginEvent","name":"event","comment":"","type_short":"PluginEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getConsumedToolEventNames","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"getDomainFiles","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainFile[]","comment":"","type_short":"ghidra.framework.model.DomainFile[]"}},{"javadoc":"","static":false,"name":"getIcon","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.ImageIcon","comment":"","type_short":"ImageIcon"}},{"javadoc":"","static":false,"name":"getIconURL","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.project.tool.ToolIconURL","comment":"","type_short":"ToolIconURL"}},{"javadoc":"","static":false,"name":"getInstanceName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"getSupportedDataTypes","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Class<?>[]","comment":"","type_short":"java.lang.Class<?>[]"}},{"javadoc":"","static":false,"name":"getToolEventNames","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String[]","comment":"","type_short":"java.lang.String[]"}},{"javadoc":"","static":false,"name":"getToolName","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"putInstanceName","comment":"","params":[{"type_long":"java.lang.String","name":"newInstanceName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removePropertyChangeListener","comment":"","params":[{"type_long":"java.beans.PropertyChangeListener","name":"l","comment":"","type_short":"PropertyChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeToolListener","comment":"","params":[{"type_long":"ghidra.framework.model.ToolListener","name":"listener","comment":"","type_short":"ToolListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"restoreDataStateFromXml","comment":"","params":[{"type_long":"org.jdom.Element","name":"root","comment":"","type_short":"Element"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"saveDataStateToXml","comment":"","params":[{"type_long":"boolean","name":"savingProject","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"saveToXml","comment":"","params":[{"type_long":"boolean","name":"includeConfigState","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"org.jdom.Element","comment":"","type_short":"Element"}},{"javadoc":"","static":false,"name":"setConfigChanged","comment":"","params":[{"type_long":"boolean","name":"changed","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setIconURL","comment":"","params":[{"type_long":"ghidra.framework.project.tool.ToolIconURL","name":"newIconURL","comment":"","type_short":"ToolIconURL"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setToolName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"processToolEvent","comment":"","params":[{"type_long":"ghidra.framework.plugintool.PluginEvent","name":"toolEvent","comment":"","type_short":"PluginEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Call the applyTo() method on the given command to make some change to\n the domain object; the command is done in the AWT thread, therefore,\n the command that is to be executed should be a relatively quick operation\n so that the event queue does not appear to \"hang.\" For lengthy\n operations, the command should be done in a background task.\n@param command command to apply\n@param obj domain object that the command will be applied to\n@return status of the command's applyTo() method\n@see #executeBackgroundCommand(BackgroundCommand, UndoableDomainObject)","static":false,"name":"execute","comment":"Call the applyTo() method on the given command to make some change to\n the domain object; the command is done in the AWT thread, therefore,\n the command that is to be executed should be a relatively quick operation\n so that the event queue does not appear to \"hang.\" For lengthy\n operations, the command should be done in a background task.","params":[{"type_long":"ghidra.framework.cmd.Command","name":"command","comment":"command to apply","type_short":"Command"},{"type_long":"ghidra.framework.model.DomainObject","name":"obj","comment":"domain object that the command will be applied to","type_short":"DomainObject"}],"throws":[],"return":{"type_long":"boolean","comment":"status of the command's applyTo() method","type_short":"boolean"}},{"javadoc":"Return whether there is a command being executed.","static":false,"name":"isExecutingCommand","comment":"Return whether there is a command being executed.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@return true if the current thread group or its ancestors is\n a member of this tools background task thread group, else false","static":false,"name":"threadIsBackgroundTaskThread","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"true if the current thread group or its ancestors is\n a member of this tools background task thread group, else false","type_short":"boolean"}},{"javadoc":"Start a new thread that will call the given command's applyTo()\n method to make some change in the domain object. This method should\n be called for an operation that could potentially take a long time to\n complete.\n@param cmd command that will be executed in another thread (not the\n AWT Thread)\n@param obj domain object that the command will be applied to","static":false,"name":"executeBackgroundCommand","comment":"Start a new thread that will call the given command's applyTo()\n method to make some change in the domain object. This method should\n be called for an operation that could potentially take a long time to\n complete.","params":[{"type_long":"ghidra.framework.cmd.BackgroundCommand","name":"cmd","comment":"command that will be executed in another thread (not the\n AWT Thread)","type_short":"BackgroundCommand"},{"type_long":"ghidra.framework.model.UndoableDomainObject","name":"obj","comment":"domain object that the command will be applied to","type_short":"UndoableDomainObject"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Cancel any running command and clear the command queue.\n@param wait if true wait for current task to cancel cleanly","static":false,"name":"terminateBackgroundCommands","comment":"Cancel any running command and clear the command queue.","params":[{"type_long":"boolean","name":"wait","comment":"if true wait for current task to cancel cleanly","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add the given background command to a queue that is processed after the\n main background command completes.\n@param cmd background command to submit\n@param obj the domain object to be modified by the command.","static":false,"name":"scheduleFollowOnCommand","comment":"Add the given background command to a queue that is processed after the\n main background command completes.","params":[{"type_long":"ghidra.framework.cmd.BackgroundCommand","name":"cmd","comment":"background command to submit","type_short":"BackgroundCommand"},{"type_long":"ghidra.framework.model.UndoableDomainObject","name":"obj","comment":"the domain object to be modified by the command.","type_short":"UndoableDomainObject"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the options for the given category name; if no options exist with\n the given name, then one is created.","static":false,"name":"getOptions","comment":"Get the options for the given category name; if no options exist with\n the given name, then one is created.","params":[{"type_long":"java.lang.String","name":"categoryName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.options.ToolOptions","comment":"","type_short":"ToolOptions"}},{"javadoc":"Updates saved options from an old name to a new name.  NOTE: this must be called before\n any calls to register or get options.\n@param oldName the old name of the options.\n@param newName the new name of the options.","static":false,"name":"registerOptionsNameChange","comment":"Updates saved options from an old name to a new name.  NOTE: this must be called before\n any calls to register or get options.","params":[{"type_long":"java.lang.String","name":"oldName","comment":"the old name of the options.","type_short":"String"},{"type_long":"java.lang.String","name":"newName","comment":"the new name of the options.","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return true if there is an options category with the given name\n@param category name of the options set\n@return true if there is an options category with the given name","static":false,"name":"hasOptions","comment":"Return true if there is an options category with the given name","params":[{"type_long":"java.lang.String","name":"category","comment":"name of the options set","type_short":"String"}],"throws":[],"return":{"type_long":"boolean","comment":"true if there is an options category with the given name","type_short":"boolean"}},{"javadoc":"Get all options.\n@return zero-length array if no options exist.","static":false,"name":"getOptions","comment":"Get all options.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.options.ToolOptions[]","comment":"zero-length array if no options exist.","type_short":"ghidra.framework.options.ToolOptions[]"}},{"javadoc":"Launch the task in a new thread.\n@param task task to run in a new thread\n@param delay number of milliseconds to delay the display of task monitor dialog","static":false,"name":"execute","comment":"Launch the task in a new thread.","params":[{"type_long":"ghidra.util.task.Task","name":"task","comment":"task to run in a new thread","type_short":"Task"},{"type_long":"int","name":"delay","comment":"number of milliseconds to delay the display of task monitor dialog","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Launch the task in a new thread.\n@param task task to run in a new thread","static":false,"name":"execute","comment":"Launch the task in a new thread.","params":[{"type_long":"ghidra.util.task.Task","name":"task","comment":"task to run in a new thread","type_short":"Task"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the project associated with this tool.  Null will be returned if there is no\n project open or if this tool does not use projects.\n@return null if there is no open project","static":false,"name":"getProject","comment":"Get the project associated with this tool.  Null will be returned if there is no\n project open or if this tool does not use projects.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.Project","comment":"null if there is no open project","type_short":"Project"}},{"javadoc":"Returns the project manager associated with this tool.\n\n <P>Null will be returned if this tool does not use projects.\n@return the project manager associated with this tool","static":false,"name":"getProjectManager","comment":"Returns the project manager associated with this tool.\n\n Null will be returned if this tool does not use projects.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ProjectManager","comment":"the project manager associated with this tool","type_short":"ProjectManager"}},{"javadoc":"Returns an object that provides fundamental services that plugins\n can use.","static":false,"name":"getToolServices","comment":"Returns an object that provides fundamental services that plugins\n can use.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ToolServices","comment":"","type_short":"ToolServices"}},{"javadoc":"Sets the subtitle on the tool; the subtitle is extra text in the title.\n@param subTitle the subtitle to display on the tool","static":false,"name":"setSubTitle","comment":"Sets the subtitle on the tool; the subtitle is extra text in the title.","params":[{"type_long":"java.lang.String","name":"subTitle","comment":"the subtitle to display on the tool","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add a plugin to the tool.\n@param className name of the plugin class, e.g., \"MyPlugin.class.getName()\"\n@throws PluginException if the plugin could not be constructed, or\n there was problem executing its init() method, or if a plugin of this\n class already exists in the tool","static":false,"name":"addPlugin","comment":"Add a plugin to the tool.","params":[{"type_long":"java.lang.String","name":"className","comment":"name of the plugin class, e.g., \"MyPlugin.class.getName()\"","type_short":"String"}],"throws":[{"type_long":"ghidra.framework.plugintool.util.PluginException","comment":"if the plugin could not be constructed, or\n there was problem executing its init() method, or if a plugin of this\n class already exists in the tool","type_short":"PluginException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add plugins to the tool.\n@param classNames array of plugin class names\n@throws PluginException if a plugin could not be constructed, or\n there was problem executing its init() method, or if a plugin of this\n class already exists in the tool","static":false,"name":"addPlugins","comment":"Add plugins to the tool.","params":[{"type_long":"java.lang.String[]","name":"classNames","comment":"array of plugin class names","type_short":"java.lang.String[]"}],"throws":[{"type_long":"ghidra.framework.plugintool.util.PluginException","comment":"if a plugin could not be constructed, or\n there was problem executing its init() method, or if a plugin of this\n class already exists in the tool","type_short":"PluginException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addPlugin","comment":"","params":[{"type_long":"ghidra.framework.plugintool.Plugin","name":"p","comment":"","type_short":"Plugin"}],"throws":[{"type_long":"ghidra.framework.plugintool.util.PluginException","comment":"","type_short":"PluginException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"hasUnsavedData","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Remove the array of plugins from the tool.\n@param plugins array of plugins to remove","static":false,"name":"removePlugins","comment":"Remove the array of plugins from the tool.","params":[{"type_long":"ghidra.framework.plugintool.Plugin[]","name":"plugins","comment":"array of plugins to remove","type_short":"ghidra.framework.plugintool.Plugin[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return a list of plugins in the tool\n@return list of plugins in the tool","static":false,"name":"getManagedPlugins","comment":"Return a list of plugins in the tool","params":[],"throws":[],"return":{"type_long":"java.util.List<ghidra.framework.plugintool.Plugin>","comment":"list of plugins in the tool","type_short":"List"}},{"javadoc":"Save this tool's configuration.","static":false,"name":"saveTool","comment":"Save this tool's configuration.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Triggers a 'Save As' dialog that allows the user to save off the tool under a different\n name.  This returns true if the user performed a save.","static":false,"name":"saveToolAs","comment":"Triggers a 'Save As' dialog that allows the user to save off the tool under a different\n name.  This returns true if the user performed a save.","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Add a status component to the tool.\n@param c component to add\n@param addBorder true if a border should be added to the component\n@param rightSide true if the component should be placed in the right side of the tool","static":false,"name":"addStatusComponent","comment":"Add a status component to the tool.","params":[{"type_long":"javax.swing.JComponent","name":"c","comment":"component to add","type_short":"JComponent"},{"type_long":"boolean","name":"addBorder","comment":"true if a border should be added to the component","type_short":"boolean"},{"type_long":"boolean","name":"rightSide","comment":"true if the component should be placed in the right side of the tool","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove the status component.\n@param c status component to remove","static":false,"name":"removeStatusComponent","comment":"Remove the status component.","params":[{"type_long":"javax.swing.JComponent","name":"c","comment":"status component to remove","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDockingActionsByFullActionName","comment":"","params":[{"type_long":"java.lang.String","name":"fullActionName","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.util.List<docking.action.DockingActionIf>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getDockingActionsByOwnerName","comment":"","params":[{"type_long":"java.lang.String","name":"owner","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.util.List<docking.action.DockingActionIf>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"getAllActions","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.action.DockingActionIf>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"removeLocalAction","comment":"","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"","type_short":"ComponentProvider"},{"type_long":"docking.action.DockingActionIf","name":"action","comment":"","type_short":"DockingActionIf"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Clear the list of events that were last generated.","static":false,"name":"clearLastEvents","comment":"Clear the list of events that were last generated.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getPopupActions","comment":"","params":[{"type_long":"docking.ActionContext","name":"context","comment":"","type_short":"ActionContext"}],"throws":[],"return":{"type_long":"java.util.List<docking.action.DockingActionIf>","comment":"","type_short":"List"}},{"javadoc":"Close this tool:\n <OL>\n \t<LI>if there are no tasks running.\n \t<LI>resolve the state of any plugins so they can be closed.\n \t<LI>Prompt the user to save any changes.\n \t<LI>close all associated plugins (this closes the domain object if one is open).\n \t<LI>pop up dialog to save the configuration if it has changed.\n \t<LI>notify the project tool services that this tool is going away.\n <\/OL>","static":false,"name":"close","comment":"Close this tool:\n \n \tif there are no tasks running.\n \tresolve the state of any plugins so they can be closed.\n \tPrompt the user to save any changes.\n \tclose all associated plugins (this closes the domain object if one is open).\n \tpop up dialog to save the configuration if it has changed.\n \tnotify the project tool services that this tool is going away.\n ","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"shouldSave","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Can this tool be closed?\n <br>Note: This forces plugins to terminate any tasks they have running and\n apply any unsaved data to domain objects or files. If they can't do\n this or the user cancels then this returns false.\n@return false if this tool has tasks in progress or can't be closed\n since the user has unfinished\/unsaved changes.","static":false,"name":"canClose","comment":"Can this tool be closed?\n Note: This forces plugins to terminate any tasks they have running and\n apply any unsaved data to domain objects or files. If they can't do\n this or the user cancels then this returns false.","params":[{"type_long":"boolean","name":"isExiting","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"boolean","comment":"false if this tool has tasks in progress or can't be closed\n since the user has unfinished\/unsaved changes.","type_short":"boolean"}},{"javadoc":"Can the domain object be closed?\n <br>Note: This forces plugins to terminate any tasks they have running for the\n indicated domain object and apply any unsaved data to the domain object. If they can't do\n this or the user cancels then this returns false.\n@return false any of the plugins reports that the domain object\n should not be closed","static":false,"name":"canCloseDomainObject","comment":"Can the domain object be closed?\n Note: This forces plugins to terminate any tasks they have running for the\n indicated domain object and apply any unsaved data to the domain object. If they can't do\n this or the user cancels then this returns false.","params":[{"type_long":"ghidra.framework.model.DomainObject","name":"dObj","comment":"","type_short":"DomainObject"}],"throws":[],"return":{"type_long":"boolean","comment":"false any of the plugins reports that the domain object\n should not be closed","type_short":"boolean"}},{"javadoc":"","static":false,"name":"canCloseDomainFile","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"domainFile","comment":"","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Called when the domain object is about to be saved; this allows any plugin that has\n a cache to flush out to the domain object.\n@param dobj domain object that is about to be saved","static":false,"name":"prepareToSave","comment":"Called when the domain object is about to be saved; this allows any plugin that has\n a cache to flush out to the domain object.","params":[{"type_long":"ghidra.framework.model.DomainObject","name":"dobj","comment":"domain object that is about to be saved","type_short":"DomainObject"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the size of the tool's main window\n@param width width in pixels\n@param height height in pixels","static":false,"name":"setSize","comment":"Sets the size of the tool's main window","params":[{"type_long":"int","name":"width","comment":"width in pixels","type_short":"int"},{"type_long":"int","name":"height","comment":"height in pixels","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the dimension of this tool's frame.\n@return dimension of this tool's frame","static":false,"name":"getSize","comment":"Return the dimension of this tool's frame.","params":[],"throws":[],"return":{"type_long":"java.awt.Dimension","comment":"dimension of this tool's frame","type_short":"Dimension"}},{"javadoc":"Set the location of this tool's frame on the screen.\n@param x screen x coordinate\n@param y screen y coordinate","static":false,"name":"setLocation","comment":"Set the location of this tool's frame on the screen.","params":[{"type_long":"int","name":"x","comment":"screen x coordinate","type_short":"int"},{"type_long":"int","name":"y","comment":"screen y coordinate","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the location of this tool's frame on the screen.\n@return location of this tool's frame","static":false,"name":"getLocation","comment":"Return the location of this tool's frame on the screen.","params":[],"throws":[],"return":{"type_long":"java.awt.Point","comment":"location of this tool's frame","type_short":"Point"}},{"javadoc":"","static":false,"name":"addListenerForAllPluginEvents","comment":"","params":[{"type_long":"ghidra.framework.plugintool.util.PluginEventListener","name":"listener","comment":"","type_short":"PluginEventListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeListenerForAllPluginEvents","comment":"","params":[{"type_long":"ghidra.framework.plugintool.util.PluginEventListener","name":"listener","comment":"","type_short":"PluginEventListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Display an text edit box on top of the specified component.\n@param defaultText initial text to be displayed in edit box\n@param comp component over which the edit box will be placed\n@param rect specifies the bounds of the edit box relative to the\n component.  The height is ignored.  The default text field height\n is used as the preferred height.\n@param listener when the edit is complete, this listener is notified\n with the new text.  The edit box is dismissed prior to notifying\n the listener.","static":false,"name":"showEditWindow","comment":"Display an text edit box on top of the specified component.","params":[{"type_long":"java.lang.String","name":"defaultText","comment":"initial text to be displayed in edit box","type_short":"String"},{"type_long":"java.awt.Component","name":"comp","comment":"component over which the edit box will be placed","type_short":"Component"},{"type_long":"java.awt.Rectangle","name":"rect","comment":"specifies the bounds of the edit box relative to the\n component.  The height is ignored.  The default text field height\n is used as the preferred height.","type_short":"Rectangle"},{"type_long":"docking.EditListener","name":"listener","comment":"when the edit is complete, this listener is notified\n with the new text.  The edit box is dismissed prior to notifying\n the listener.","type_short":"EditListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the menu group associated with a cascaded submenu.  This allows\n a cascading menu item to be grouped with a specific set of actions.\n The default group for a cascaded submenu is the name of the submenu.\n@param menuPath menu name path where the last element corresponds\n to the specified group name.\n@param group group name\n@see #setMenuGroup(String[], String, String)","static":false,"name":"setMenuGroup","comment":"Set the menu group associated with a cascaded submenu.  This allows\n a cascading menu item to be grouped with a specific set of actions.\n The default group for a cascaded submenu is the name of the submenu.","params":[{"type_long":"java.lang.String[]","name":"menuPath","comment":"menu name path where the last element corresponds\n to the specified group name.","type_short":"java.lang.String[]"},{"type_long":"java.lang.String","name":"group","comment":"group name","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Set the menu group associated with a cascaded submenu.  This allows\n a cascading menu item to be grouped with a specific set of actions.\n <p>\n The default group for a cascaded submenu is the name of the submenu.\n <p>\n@param menuPath menu name path where the last element corresponds to the specified group name.\n@param group group name\n@param menuSubGroup the name used to sort the cascaded menu within other menu items at\n                     its level","static":false,"name":"setMenuGroup","comment":"Set the menu group associated with a cascaded submenu.  This allows\n a cascading menu item to be grouped with a specific set of actions.\n \n The default group for a cascaded submenu is the name of the submenu.\n ","params":[{"type_long":"java.lang.String[]","name":"menuPath","comment":"menu name path where the last element corresponds to the specified group name.","type_short":"java.lang.String[]"},{"type_long":"java.lang.String","name":"group","comment":"group name","type_short":"String"},{"type_long":"java.lang.String","name":"menuSubGroup","comment":"the name used to sort the cascaded menu within other menu items at\n                     its level","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Cancel the current task in the tool.","static":false,"name":"cancelCurrentTask","comment":"Cancel the current task in the tool.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getTransientState","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.util.TransientToolState","comment":"","type_short":"TransientToolState"}},{"javadoc":"","static":false,"name":"getUndoRedoToolState","comment":"","params":[{"type_long":"ghidra.framework.model.DomainObject","name":"domainObject","comment":"","type_short":"DomainObject"}],"throws":[],"return":{"type_long":"ghidra.framework.plugintool.util.UndoRedoToolState","comment":"","type_short":"UndoRedoToolState"}},{"javadoc":"Shows the dialog using the active top-level window (often the tool's root frame)\n as a parent.  Also, remembers any\n size and location adjustments made by the user for the next time the dialog is shown.\n@param dialogComponent the DialogComponentProvider object to be shown in a dialog.","static":false,"name":"showDialog","comment":"Shows the dialog using the active top-level window (often the tool's root frame)\n as a parent.  Also, remembers any\n size and location adjustments made by the user for the next time the dialog is shown.","params":[{"type_long":"docking.DialogComponentProvider","name":"dialogComponent","comment":"the DialogComponentProvider object to be shown in a dialog.","type_short":"DialogComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Shows the dialog using the tool's currently active window as a parent.  Also,\n remembers any size and location adjustments made by the user for the next\n time the dialog is shown.\n@param dialogComponent the DialogComponentProvider object to be shown in a dialog.","static":false,"name":"showDialogOnActiveWindow","comment":"Shows the dialog using the tool's currently active window as a parent.  Also,\n remembers any size and location adjustments made by the user for the next\n time the dialog is shown.","params":[{"type_long":"docking.DialogComponentProvider","name":"dialogComponent","comment":"the DialogComponentProvider object to be shown in a dialog.","type_short":"DialogComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Shows the dialog using the window containing the given componentProvider as its parent window.\n Remembers the last location and size of this dialog for the next time it is shown.\n@param dialogComponent the DialogComponentProvider object to be shown in a dialog.\n@param centeredOnProvider the component provider that is used to find a parent window for this dialog.\n The dialog is centered on this component provider's component.","static":false,"name":"showDialog","comment":"Shows the dialog using the window containing the given componentProvider as its parent window.\n Remembers the last location and size of this dialog for the next time it is shown.","params":[{"type_long":"docking.DialogComponentProvider","name":"dialogComponent","comment":"the DialogComponentProvider object to be shown in a dialog.","type_short":"DialogComponentProvider"},{"type_long":"docking.ComponentProvider","name":"centeredOnProvider","comment":"the component provider that is used to find a parent window for this dialog.\n The dialog is centered on this component provider's component.","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Shows the dialog using the tool's parent frame, but centers the dialog on the given\n component\n@param dialogComponent the DialogComponentProvider object to be shown in a dialog.\n@param centeredOnComponent the component on which to center the dialog.","static":false,"name":"showDialog","comment":"Shows the dialog using the tool's parent frame, but centers the dialog on the given\n component","params":[{"type_long":"docking.DialogComponentProvider","name":"dialogComponent","comment":"the DialogComponentProvider object to be shown in a dialog.","type_short":"DialogComponentProvider"},{"type_long":"java.awt.Component","name":"centeredOnComponent","comment":"the component on which to center the dialog.","type_short":"Component"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the ComponentProvider with the given name.  If more than one provider exists with the name,\n one will be returned, but it could be any one of them.\n@param name the name of the provider to return.\n@return a provider with the given name, or null if no providers with that name exist.","static":false,"name":"getComponentProvider","comment":"Returns the ComponentProvider with the given name.  If more than one provider exists with the name,\n one will be returned, but it could be any one of them.","params":[{"type_long":"java.lang.String","name":"name","comment":"the name of the provider to return.","type_short":"String"}],"throws":[],"return":{"type_long":"docking.ComponentProvider","comment":"a provider with the given name, or null if no providers with that name exist.","type_short":"ComponentProvider"}},{"javadoc":"","static":false,"name":"getActiveWindow","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Window","comment":"","type_short":"Window"}},{"javadoc":"","static":false,"name":"getActiveComponentProvider","comment":"","params":[],"throws":[],"return":{"type_long":"docking.ComponentProvider","comment":"","type_short":"ComponentProvider"}},{"javadoc":"","static":false,"name":"contextChanged","comment":"","params":[{"type_long":"docking.ComponentProvider","name":"provider","comment":"","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addContextListener","comment":"","params":[{"type_long":"docking.DockingContextListener","name":"listener","comment":"","type_short":"DockingContextListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"removeContextListener","comment":"","params":[{"type_long":"docking.DockingContextListener","name":"listener","comment":"","type_short":"DockingContextListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"refreshKeybindings","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setUnconfigurable","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"isConfigurable","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"removePreferenceState","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getProviderWindow","comment":"","params":[{"type_long":"docking.ComponentProvider","name":"componentProvider","comment":"","type_short":"ComponentProvider"}],"throws":[],"return":{"type_long":"java.awt.Window","comment":"","type_short":"Window"}}],"name":"PluginTool","comment":"Base class that is a container to manage plugins and their actions, and\n to coordinate the firing of plugin events and tool events. A\n PluginTool may have visible components supplied by\n ComponentProviders . These components may be docked within the\n tool, or moved out into their own windows.\n The PluginTool also manages tasks that run in the background, and\n options used by the plugins.\n ","fields":[]}

{"implements":["ghidra.framework.model.ProjectData"],"javadoc":"Helper class to manage files within a project.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Constructor for existing projects.\n@param localStorageLocator the location of the project\n@param isInWritableProject true if project content is writable, false if project is read-only\n@param inProject true if this is the active project\n@throws IOException if an i\/o error occurs\n@throws NotOwnerException if inProject is true and user is not owner\n@throws FileNotFoundException if project directory not found","static":false,"name":"<init>","comment":"Constructor for existing projects.","params":[{"type_long":"ghidra.framework.model.ProjectLocator","name":"localStorageLocator","comment":"the location of the project","type_short":"ProjectLocator"},{"type_long":"boolean","name":"isInWritableProject","comment":"true if project content is writable, false if project is read-only","type_short":"boolean"},{"type_long":"boolean","name":"resetOwner","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.NotOwnerException","comment":"if inProject is true and user is not owner","type_short":"NotOwnerException"},{"type_long":"java.io.IOException","comment":"if an i\/o error occurs","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Constructor for a new project.\n@param localStorageLocator the location of the project\n@param repository a repository if this is a shared project or null if it is a private project\n@param isInWritableProject true if project content is writable, false if project is read-only\n@throws IOException if an i\/o error occurs","static":false,"name":"<init>","comment":"Constructor for a new project.","params":[{"type_long":"ghidra.framework.model.ProjectLocator","name":"localStorageLocator","comment":"the location of the project","type_short":"ProjectLocator"},{"type_long":"ghidra.framework.client.RepositoryAdapter","name":"repository","comment":"a repository if this is a shared project or null if it is a private project","type_short":"RepositoryAdapter"},{"type_long":"boolean","name":"isInWritableProject","comment":"true if project content is writable, false if project is read-only","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"if an i\/o error occurs","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getMaxNameLength","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"testValidName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"boolean","name":"isPath","comment":"","type_short":"boolean"}],"throws":[{"type_long":"ghidra.util.InvalidNameException","comment":"","type_short":"InvalidNameException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.model.ProjectData#getUser()","static":false,"name":"getUser","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.remote.User","comment":"","type_short":"User"}},{"javadoc":"","static":false,"name":"getLocalStorageClass","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.Class<? extends ghidra.framework.store.local.LocalFileSystem>","comment":"","type_short":"Class"}},{"javadoc":"Returns the owner of the project that is associated with this \n ProjectFileManager.  A value of null indicates an old multiuser\n project.\n@return the owner of the project","static":false,"name":"getOwner","comment":"Returns the owner of the project that is associated with this \n ProjectFileManager.  A value of null indicates an old multiuser\n project.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"the owner of the project","type_short":"String"}},{"javadoc":"@see ghidra.framework.model.ProjectData#getRootFolder()","static":false,"name":"getRootFolder","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.data.GhidraFolder","comment":"","type_short":"GhidraFolder"}},{"javadoc":"@see ghidra.framework.model.ProjectData#getFolder(java.lang.String)","static":false,"name":"getFolder","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainFolder","comment":"","type_short":"DomainFolder"}},{"javadoc":"","static":false,"name":"getFileCount","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see ghidra.framework.model.ProjectData#getFile(java.lang.String)","static":false,"name":"getFile","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainFile","comment":"","type_short":"DomainFile"}},{"javadoc":"@see ghidra.framework.model.ProjectData#getFileByID(java.lang.String)","static":false,"name":"getFileByID","comment":"","params":[{"type_long":"java.lang.String","name":"fileID","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainFile","comment":"","type_short":"DomainFile"}},{"javadoc":"@see ghidra.framework.model.ProjectData#getSharedFileURL(java.lang.String)","static":false,"name":"getSharedFileURL","comment":"","params":[{"type_long":"java.lang.String","name":"path","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.net.URL","comment":"","type_short":"URL"}},{"javadoc":"Releases all domain files for the specified consumer.\n@param consumer the domain object consumer","static":false,"name":"releaseDomainFiles","comment":"Releases all domain files for the specified consumer.","params":[{"type_long":"java.lang.Object","name":"consumer","comment":"the domain object consumer","type_short":"Object"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Finds all changed domain files and appends\n them to the specified list.\n@param list the list to receive the changed domain files","static":false,"name":"findOpenFiles","comment":"Finds all changed domain files and appends\n them to the specified list.","params":[{"type_long":"java.util.List<ghidra.framework.model.DomainFile>","name":"list","comment":"the list to receive the changed domain files","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.model.ProjectData#getProjectLocator()","static":false,"name":"getProjectLocator","comment":"","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ProjectLocator","comment":"","type_short":"ProjectLocator"}},{"javadoc":"@see ghidra.framework.model.ProjectData#addDomainFolderChangeListener(\n \t\t\t\t\t\t\t\t\t\t\tghidra.framework.model.DomainFolderChangeListener)","static":false,"name":"addDomainFolderChangeListener","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFolderChangeListener","name":"l","comment":"","type_short":"DomainFolderChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"@see ghidra.framework.model.ProjectData#removeDomainFolderChangeListener(\n \t\t\t\t\t\t\t\t\t\t\tghidra.framework.model.DomainFolderChangeListener)","static":false,"name":"removeDomainFolderChangeListener","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFolderChangeListener","name":"l","comment":"","type_short":"DomainFolderChangeListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the private files system associated with this project file manager.\n@return the private files system associated with this project file manager","static":false,"name":"getPrivateFileSystem","comment":"Returns the private files system associated with this project file manager.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.store.FileSystem","comment":"the private files system associated with this project file manager","type_short":"FileSystem"}},{"javadoc":"Returns the repository associated with this project file manager.\n@return the repository associated with this project file manager","static":false,"name":"getRepository","comment":"Returns the repository associated with this project file manager.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.client.RepositoryAdapter","comment":"the repository associated with this project file manager","type_short":"RepositoryAdapter"}},{"javadoc":"@see ghidra.framework.model.ProjectData#refresh(boolean)","static":false,"name":"refresh","comment":"","params":[{"type_long":"boolean","name":"force","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"convertProjectToShared","comment":"","params":[{"type_long":"ghidra.framework.client.RepositoryAdapter","name":"newRepository","comment":"","type_short":"RepositoryAdapter"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"updateRepositoryInfo","comment":"","params":[{"type_long":"ghidra.framework.client.RepositoryAdapter","name":"newRepository","comment":"","type_short":"RepositoryAdapter"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the standard user data filename associated with the specified file ID.\n@param associatedFileID\n@return user data filename","static":true,"name":"getUserDataFilename","comment":"Returns the standard user data filename associated with the specified file ID.","params":[{"type_long":"java.lang.String","name":"associatedFileID","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"user data filename","type_short":"String"}},{"javadoc":"","static":false,"name":"makeValidName","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Return the project directory.","static":false,"name":"getProjectDir","comment":"Return the project directory.","params":[],"throws":[],"return":{"type_long":"java.io.File","comment":"","type_short":"File"}},{"javadoc":"","static":false,"name":"close","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Disposes this project file manager.","static":false,"name":"dispose","comment":"Disposes this project file manager.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Update the file index for the specified file data\n@param fileData file data","static":false,"name":"updateFileIndex","comment":"Update the file index for the specified file data","params":[{"type_long":"ghidra.framework.data.GhidraFileData","name":"fileData","comment":"file data","type_short":"GhidraFileData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Remove specified fileID from index.\n@param fileID","static":false,"name":"removeFromIndex","comment":"Remove specified fileID from index.","params":[{"type_long":"java.lang.String","name":"fileID","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get monitor which will be cancelled if project is closed\n@return cancel monitor","static":false,"name":"getProjectDisposalMonitor","comment":"Get monitor which will be cancelled if project is closed","params":[],"throws":[],"return":{"type_long":"ghidra.util.task.TaskMonitor","comment":"cancel monitor","type_short":"TaskMonitor"}}],"name":"ProjectFileManager","comment":"Helper class to manage files within a project.","fields":[{"type_long":"java.lang.String","javadoc":"Name of folder that stores user's data","static":true,"name":"MANGLED_DATA_FOLDER_NAME","comment":"Name of folder that stores user's data","type_short":"String","constant_value":"\"data\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"INDEXED_DATA_FOLDER_NAME","comment":"","type_short":"String","constant_value":"\"idata\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"USER_FOLDER_NAME","comment":"","type_short":"String","constant_value":"\"user\""},{"type_long":"java.lang.String","javadoc":"","static":true,"name":"VERSIONED_FOLDER_NAME","comment":"","type_short":"String","constant_value":"\"versioned\""}]}

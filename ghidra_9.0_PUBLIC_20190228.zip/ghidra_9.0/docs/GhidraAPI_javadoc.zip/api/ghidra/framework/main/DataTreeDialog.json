{"implements":["docking.widgets.tree.support.GTreeSelectionListener","java.awt.event.ActionListener"],"javadoc":"Dialog to open or save domain data items to a new location or name.","static":false,"extends":"docking.DialogComponentProvider","methods":[{"javadoc":"Construct a new DataTreeDialog.\n@param parent dialog's parent\n@param title title to use\n@param type specify OPEN, SAVE, CHOOSE_FOLDER, CHOOSE_USER_FOLDER, or CREATE\n@throws IllegalArgumentException if invalid type is specified","static":false,"name":"<init>","comment":"Construct a new DataTreeDialog.","params":[{"type_long":"java.awt.Component","name":"parent","comment":"dialog's parent","type_short":"Component"},{"type_long":"java.lang.String","name":"title","comment":"title to use","type_short":"String"},{"type_long":"int","name":"type","comment":"specify OPEN, SAVE, CHOOSE_FOLDER, CHOOSE_USER_FOLDER, or CREATE","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Construct a new DataTreeDialog.\n@param parent dialog's parent\n@param title title to use\n@param type specify OPEN, SAVE, CHOOSE_FOLDER, or CHOOSE_USER_FOLDER\n@param filter filter used to control what is displayed in the data tree\n@throws IllegalArgumentException if invalid type is specified","static":false,"name":"<init>","comment":"Construct a new DataTreeDialog.","params":[{"type_long":"java.awt.Component","name":"parent","comment":"dialog's parent","type_short":"Component"},{"type_long":"java.lang.String","name":"title","comment":"title to use","type_short":"String"},{"type_long":"int","name":"type","comment":"specify OPEN, SAVE, CHOOSE_FOLDER, or CHOOSE_USER_FOLDER","type_short":"int"},{"type_long":"ghidra.framework.model.DomainFileFilter","name":"filter","comment":"filter used to control what is displayed in the data tree","type_short":"DomainFileFilter"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setTreeSelectionMode","comment":"","params":[{"type_long":"int","name":"mode","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Add action listener that is called when the OK button is hit.\n@param l listener to add","static":false,"name":"addOkActionListener","comment":"Add action listener that is called when the OK button is hit.","params":[{"type_long":"java.awt.event.ActionListener","name":"l","comment":"listener to add","type_short":"ActionListener"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getActionContext","comment":"","params":[{"type_long":"java.awt.event.MouseEvent","name":"event","comment":"","type_short":"MouseEvent"}],"throws":[],"return":{"type_long":"docking.ActionContext","comment":"","type_short":"ActionContext"}},{"javadoc":"","static":false,"name":"showComponent","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the name from the name field.","static":false,"name":"getNameText","comment":"Get the name from the name field.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":false,"name":"setNameText","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setSelectedFolder","comment":"","params":[{"type_long":"ghidra.framework.model.DomainFolder","name":"folder","comment":"","type_short":"DomainFolder"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Get the selected domain file.\n@return null if there was no domain file selected","static":false,"name":"getDomainFile","comment":"Get the selected domain file.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainFile","comment":"null if there was no domain file selected","type_short":"DomainFile"}},{"javadoc":"Get the selected folder.\n@return null if there was no domain folder selected","static":false,"name":"getDomainFolder","comment":"Get the selected folder.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.DomainFolder","comment":"null if there was no domain folder selected","type_short":"DomainFolder"}},{"javadoc":"TreeSelectionListener method that is called whenever the value of the\n selection changes.\n@param e the event that characterizes the change.","static":false,"name":"valueChanged","comment":"TreeSelectionListener method that is called whenever the value of the\n selection changes.","params":[{"type_long":"docking.widgets.tree.support.GTreeSelectionEvent","name":"e","comment":"the event that characterizes the change.","type_short":"GTreeSelectionEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Action listener for the project combo box.\n@param e event generated when a selection is made in the combo box","static":false,"name":"actionPerformed","comment":"Action listener for the project combo box.","params":[{"type_long":"java.awt.event.ActionEvent","name":"e","comment":"event generated when a selection is made in the combo box","type_short":"ActionEvent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Select the root folder in the tree.","static":false,"name":"selectRootDataFolder","comment":"Select the root folder in the tree.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Select the node that corresponds to the given domain file.","static":false,"name":"selectDomainFile","comment":"Select the node that corresponds to the given domain file.","params":[{"type_long":"ghidra.framework.model.DomainFile","name":"file","comment":"","type_short":"DomainFile"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"close","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"wasCancelled","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"findAndSelect","comment":"","params":[{"type_long":"java.lang.String","name":"s","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setSearchText","comment":"","params":[{"type_long":"java.lang.String","name":"string","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"DataTreeDialog","comment":"Dialog to open or save domain data items to a new location or name.","fields":[{"type_long":"int","javadoc":"Dialog type for opening domain data files.","static":true,"name":"OPEN","comment":"Dialog type for opening domain data files.","type_short":"int","constant_value":"0"},{"type_long":"int","javadoc":"Dialog type for saving domain data files.","static":true,"name":"SAVE","comment":"Dialog type for saving domain data files.","type_short":"int","constant_value":"1"},{"type_long":"int","javadoc":"Dialog type for choosing a user folder.","static":true,"name":"CHOOSE_FOLDER","comment":"Dialog type for choosing a user folder.","type_short":"int","constant_value":"2"},{"type_long":"int","javadoc":"Dialog type for creating domain data files.","static":true,"name":"CREATE","comment":"Dialog type for creating domain data files.","type_short":"int","constant_value":"3"}]}

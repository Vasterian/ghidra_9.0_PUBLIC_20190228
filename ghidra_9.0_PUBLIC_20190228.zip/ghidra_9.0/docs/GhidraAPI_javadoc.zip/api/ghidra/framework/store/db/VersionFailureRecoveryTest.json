{"implements":[],"javadoc":"","static":false,"extends":"generic.test.AbstractGenericTest","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setUp","comment":"","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"tearDown","comment":"","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This test is intended to verify that an IOException thrown during the streaming creation\n of a new versioned file will properly cleanup and not leave an invalid database item","static":false,"name":"testAddToVersionControlFailure","comment":"This test is intended to verify that an IOException thrown during the streaming creation\n of a new versioned file will properly cleanup and not leave an invalid database item","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"VersionFailureRecoveryTest","comment":"","fields":[]}

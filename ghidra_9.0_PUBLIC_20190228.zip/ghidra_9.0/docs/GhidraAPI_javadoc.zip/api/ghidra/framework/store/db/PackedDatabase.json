{"implements":[],"javadoc":"<code>PackedDatabase<\/code> provides a packed form of Database\n which compresses a single version into a file.  \n <br>\n When opening a packed database, a PackedDBHandle is returned \n after first expanding the file into a temporary Database.","static":false,"extends":"db.Database","methods":[{"javadoc":"","static":false,"name":"isReadOnly","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"Get a packed database which whose unpacking will be cached if possible\n@param packedDbFile\n@param monitor\n@return packed database which corresponds to the specified packedDbFile\n@throws IOException\n@throws CancelledException","static":true,"name":"getPackedDatabase","comment":"Get a packed database which whose unpacking will be cached if possible","params":[{"type_long":"java.io.File","name":"packedDbFile","comment":"","type_short":"File"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.framework.store.db.PackedDatabase","comment":"packed database which corresponds to the specified packedDbFile","type_short":"PackedDatabase"}},{"javadoc":"Get a packed database whose unpacking may be cached if possible\n provided doNotCache is false.\n@param packedDbFile\n@param neverCache if true unpacking will never be cache.\n@param monitor\n@return packed database which corresponds to the specified packedDbFile\n@throws IOException\n@throws CancelledException","static":true,"name":"getPackedDatabase","comment":"Get a packed database whose unpacking may be cached if possible\n provided doNotCache is false.","params":[{"type_long":"java.io.File","name":"packedDbFile","comment":"","type_short":"File"},{"type_long":"boolean","name":"neverCache","comment":"if true unpacking will never be cache.","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.framework.store.db.PackedDatabase","comment":"packed database which corresponds to the specified packedDbFile","type_short":"PackedDatabase"}},{"javadoc":"Get a packed database whose unpacking may be cached if possible\n provided doNotCache is false.\n@param packedDbFile\n@param neverCache if true unpacking will never be cache.\n@param monitor\n@return packed database which corresponds to the specified packedDbFile\n@throws IOException\n@throws CancelledException","static":true,"name":"getPackedDatabase","comment":"Get a packed database whose unpacking may be cached if possible\n provided doNotCache is false.","params":[{"type_long":"generic.jar.ResourceFile","name":"packedDbFile","comment":"","type_short":"ResourceFile"},{"type_long":"boolean","name":"neverCache","comment":"if true unpacking will never be cache.","type_short":"boolean"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"ghidra.framework.store.db.PackedDatabase","comment":"packed database which corresponds to the specified packedDbFile","type_short":"PackedDatabase"}},{"javadoc":"Check for the presence of directory read-only lock\n@param directory\n@return true if read-only lock exists+","static":true,"name":"isReadOnlyPDBDirectory","comment":"Check for the presence of directory read-only lock","params":[{"type_long":"generic.jar.ResourceFile","name":"directory","comment":"","type_short":"ResourceFile"}],"throws":[],"return":{"type_long":"boolean","comment":"true if read-only lock exists+","type_short":"boolean"}},{"javadoc":"Free resources consumed by this object.\n If there is an associated database handle it will be closed.","static":false,"name":"dispose","comment":"Free resources consumed by this object.\n If there is an associated database handle it will be closed.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns the user defined content type associated with this database.","static":false,"name":"getContentType","comment":"Returns the user defined content type associated with this database.","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"Returns the storage file associated with this packed database.","static":false,"name":"getPackedFile","comment":"Returns the storage file associated with this packed database.","params":[],"throws":[],"return":{"type_long":"generic.jar.ResourceFile","comment":"","type_short":"ResourceFile"}},{"javadoc":"Deletes the storage file associated with this packed database.\n This method should not be called while the database is open, if\n it is an attempt will be made to close the handle.\n@throws IOException","static":false,"name":"delete","comment":"Deletes the storage file associated with this packed database.\n This method should not be called while the database is open, if\n it is an attempt will be made to close the handle.","params":[],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Deletes the storage file associated with this packed database.\n@throws IOException","static":true,"name":"delete","comment":"Deletes the storage file associated with this packed database.","params":[{"type_long":"java.io.File","name":"packedDbFile","comment":"","type_short":"File"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Create a new Database with data provided by an ItemDeserializer.\n@param dir the parent directory which contains the \"Hidden\" database directory.\n@param dbName the unmangled database name\n@param checkinId\n@param packedFile\n@param monitor\n@throws CancelledException","static":true,"name":"unpackDatabase","comment":"Create a new Database with data provided by an ItemDeserializer.","params":[{"type_long":"db.buffers.BufferFileManager","name":"bfMgr","comment":"","type_short":"BufferFileManager"},{"type_long":"long","name":"checkinId","comment":"","type_short":"long"},{"type_long":"java.io.File","name":"packedFile","comment":"","type_short":"File"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"},{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Serialize (i.e., pack) an open database into the specified outputFile.\n@param dbh open database handle\n@param itemName item name to associate with packed content\n@param contentType supported content type\n@param outputFile packed output file to be created\n@param monitor progress monitor\n@throws IOException\n@throws CancelledException if monitor cancels operation","static":true,"name":"packDatabase","comment":"Serialize (i.e., pack) an open database into the specified outputFile.","params":[{"type_long":"db.DBHandle","name":"dbh","comment":"open database handle","type_short":"DBHandle"},{"type_long":"java.lang.String","name":"itemName","comment":"item name to associate with packed content","type_short":"String"},{"type_long":"java.lang.String","name":"contentType","comment":"supported content type","type_short":"String"},{"type_long":"java.io.File","name":"outputFile","comment":"packed output file to be created","type_short":"File"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"progress monitor","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"if monitor cancels operation","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"open","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.DBHandle","comment":"","type_short":"DBHandle"}},{"javadoc":"","static":false,"name":"openForUpdate","comment":"","params":[{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"ghidra.util.exception.CancelledException","comment":"","type_short":"CancelledException"},{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"db.DBHandle","comment":"","type_short":"DBHandle"}},{"javadoc":"Attempt to remove all old temporary databases.\n Those still open by an existing process should \n not be removed by the operating system.","static":true,"name":"cleanupOldTempDatabases","comment":"Attempt to remove all old temporary databases.\n Those still open by an existing process should \n not be removed by the operating system.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"PackedDatabase","comment":"PackedDatabase provides a packed form of Database\n which compresses a single version into a file.  \n \n When opening a packed database, a PackedDBHandle is returned \n after first expanding the file into a temporary Database.","fields":[{"type_long":"java.lang.String","javadoc":"Presence of the directory lock file will prevent the creation or\n modification of any packed database files contained within that directory\n or any sub-directory.","static":true,"name":"READ_ONLY_DIRECTORY_LOCK_FILE","comment":"Presence of the directory lock file will prevent the creation or\n modification of any packed database files contained within that directory\n or any sub-directory.","type_short":"String","constant_value":"\".dbDirLock\""}]}

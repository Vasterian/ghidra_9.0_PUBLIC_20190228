{"implements":[],"javadoc":"<code>DefaultLocalGhidraProtocolConnector<\/code> provides support for the\n Ghidra URL protocol which specifies a local Ghidra project without extension.\n This connector is responsible for producing a suitable {@link ProjectLocator}\n for accessing the project files.","static":false,"extends":"ghidra.framework.protocol.ghidra.GhidraProtocolConnector","methods":[{"javadoc":"Get the ProjectLocator associated with a local project URL.\n@return project locator object or null if URL supplies a a RepositoryAdapter and\/or \n RepositoryServerAdapter.","static":false,"name":"getLocalProjectLocator","comment":"Get the ProjectLocator associated with a local project URL.","params":[],"throws":[],"return":{"type_long":"ghidra.framework.model.ProjectLocator","comment":"project locator object or null if URL supplies a a RepositoryAdapter and\/or \n RepositoryServerAdapter.","type_short":"ProjectLocator"}},{"javadoc":"","static":false,"name":"isReadOnly","comment":"","params":[],"throws":[{"type_long":"ghidra.framework.client.NotConnectedException","comment":"","type_short":"NotConnectedException"}],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"connect","comment":"","params":[{"type_long":"boolean","name":"readOnlyAccess","comment":"","type_short":"boolean"}],"throws":[{"type_long":"java.io.IOException","comment":"","type_short":"IOException"}],"return":{"type_long":"int","comment":"","type_short":"int"}}],"name":"DefaultLocalGhidraProtocolConnector","comment":"DefaultLocalGhidraProtocolConnector provides support for the\n Ghidra URL protocol which specifies a local Ghidra project without extension.\n This connector is responsible for producing a suitable ProjectLocator\n for accessing the project files.","fields":[]}

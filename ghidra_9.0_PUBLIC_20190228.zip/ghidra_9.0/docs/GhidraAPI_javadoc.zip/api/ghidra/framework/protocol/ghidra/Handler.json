{"implements":[],"javadoc":"<code>Handler<\/code> provides a \"ghidra\" URL protocol handler which\n corresponds to the <code>GhidraURLConnection<\/code> implementation.","static":false,"extends":"java.net.URLStreamHandler","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Register the \"ghidra\" URL protocol Handler.\n Alternatively, the protocol handler can be explicitly used when instantiating \n a ghidra URL:\n <pre>\n   URL url = new URL(null, \"ghidra:\/\/myGhidraServer\/Test\", new ghidra.framework.protocol.ghidra.Handler());\n <\/pre>\n It is also important that a <code>ClientAuthenticator<\/code> also be registered.\n@see ClientUtil#setClientAuthenticator(ghidra.framework.client.ClientAuthenticator)","static":true,"name":"registerHandler","comment":"Register the \"ghidra\" URL protocol Handler.\n Alternatively, the protocol handler can be explicitly used when instantiating \n a ghidra URL:\n \n   URL url = new URL(null, \"ghidra:\/\/myGhidraServer\/Test\", new ghidra.framework.protocol.ghidra.Handler());\n \n It is also important that a ClientAuthenticator also be registered.","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Determine if the specified url is supported and that any required \n protocol extensions are recognized.\n@param url\n@return true if support ghidra URL","static":true,"name":"isSupportedURL","comment":"Determine if the specified url is supported and that any required \n protocol extensions are recognized.","params":[{"type_long":"java.net.URL","name":"url","comment":"","type_short":"URL"}],"throws":[],"return":{"type_long":"boolean","comment":"true if support ghidra URL","type_short":"boolean"}}],"name":"Handler","comment":"Handler provides a \"ghidra\" URL protocol handler which\n corresponds to the GhidraURLConnection implementation.","fields":[]}

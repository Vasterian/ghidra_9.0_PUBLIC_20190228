{"implements":[],"javadoc":"An action that can be in one of multiple states.   The button of this action has a \n drop-down icon that allows users to change the state of the button.  Also, by default, as\n the user presses the button, it will execute the action corresponding to the current \n state.\n@param <T> the type of the user data\n@see MultiActionDockingAction","static":false,"extends":"docking.action.DockingAction","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"java.lang.String","name":"name","comment":"","type_short":"String"},{"type_long":"java.lang.String","name":"owner","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"actionStateChanged","comment":"","params":[{"type_long":"docking.menu.ActionState<T>","name":"newActionState","comment":"","type_short":"ActionState"},{"type_long":"docking.widgets.EventTrigger","name":"trigger","comment":"","type_short":"EventTrigger"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"If <tt>doPerformAction<\/tt> is <tt>true<\/tt>, then, when the user clicks the\n button and not the drop-down arrow, the {@link #doActionPerformed(ActionContext)}\n method will be called.  If <tt>doPerformAction<\/tt> is <tt>false<\/tt>, then, when\n the user clicks the button and not the drop-down arrow, the popup menu will be shown, just\n as if the user had clicked the drop-down arrow.\n <p>\n Also, if the parameter is true, then the button will behave like a button in terms of\n mouse feedback.  If false, then the button will behave more like a label.","static":false,"name":"setPerformActionOnPrimaryButtonClick","comment":"If doPerformAction is true, then, when the user clicks the\n button and not the drop-down arrow, the #doActionPerformed(ActionContext)\n method will be called.  If doPerformAction is false, then, when\n the user clicks the button and not the drop-down arrow, the popup menu will be shown, just\n as if the user had clicked the drop-down arrow.\n \n Also, if the parameter is true, then the button will behave like a button in terms of\n mouse feedback.  If false, then the button will behave more like a label.","params":[{"type_long":"boolean","name":"doPerformAction","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"actionPerformed","comment":"","params":[{"type_long":"docking.ActionContext","name":"context","comment":"","type_short":"ActionContext"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setGroup","comment":"","params":[{"type_long":"java.lang.String","name":"group","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setSubGroup","comment":"","params":[{"type_long":"java.lang.String","name":"subGroup","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"addActionState","comment":"","params":[{"type_long":"docking.menu.ActionState<T>","name":"actionState","comment":"","type_short":"ActionState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setActionStates","comment":"","params":[{"type_long":"java.util.List<docking.menu.ActionState<T>>","name":"newStates","comment":"","type_short":"List"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getCurrentUserData","comment":"","params":[],"throws":[],"return":{"type_long":"T","comment":"","type_short":"T"}},{"javadoc":"","static":false,"name":"getCurrentState","comment":"","params":[],"throws":[],"return":{"type_long":"docking.menu.ActionState<T>","comment":"","type_short":"ActionState"}},{"javadoc":"","static":false,"name":"getAllActionStates","comment":"","params":[],"throws":[],"return":{"type_long":"java.util.List<docking.menu.ActionState<T>>","comment":"","type_short":"List"}},{"javadoc":"","static":false,"name":"setCurrentActionStateByUserData","comment":"","params":[{"type_long":"T","name":"t","comment":"","type_short":"T"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setCurrentActionState","comment":"","params":[{"type_long":"docking.menu.ActionState<T>","name":"actionState","comment":"","type_short":"ActionState"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setCurrentActionStateWithTrigger","comment":"","params":[{"type_long":"docking.menu.ActionState<T>","name":"actionState","comment":"","type_short":"ActionState"},{"type_long":"docking.widgets.EventTrigger","name":"trigger","comment":"","type_short":"EventTrigger"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"doCreateButton","comment":"","params":[],"throws":[],"return":{"type_long":"javax.swing.JButton","comment":"","type_short":"JButton"}},{"javadoc":"","static":false,"name":"setMenuBarData","comment":"","params":[{"type_long":"docking.action.MenuData","name":"newMenuData","comment":"","type_short":"MenuData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setPopupMenuData","comment":"","params":[{"type_long":"docking.action.MenuData","name":"newMenuData","comment":"","type_short":"MenuData"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getTooTipText","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}}],"name":"MultiStateDockingAction","comment":"An action that can be in one of multiple states.   The button of this action has a \n drop-down icon that allows users to change the state of the button.  Also, by default, as\n the user presses the button, it will execute the action corresponding to the current \n state.","fields":[]}

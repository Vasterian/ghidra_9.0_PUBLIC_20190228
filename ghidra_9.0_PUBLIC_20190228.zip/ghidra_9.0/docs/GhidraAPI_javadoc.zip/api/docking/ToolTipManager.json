{"implements":[],"javadoc":"A tooltip manager that simply delegates to the Swing tooltip manager.  This class replaces\n the previous tooltip manager that overrode much of the Swing tooltip manager's functionality.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Registers a component for tooltip management.\n <p>\n This will register key bindings to show and hide the tooltip text\n only if <code>component<\/code> has focus bindings. This is done\n so that components that are not normally focus traversable, such\n as <code>JLabel<\/code>, are not made focus traversable as a result\n of invoking this method.\n@param component a <code>JComponent<\/code> object to add\n@see JComponent#isFocusTraversable","static":false,"name":"registerComponent","comment":"Registers a component for tooltip management.\n \n This will register key bindings to show and hide the tooltip text\n only if component has focus bindings. This is done\n so that components that are not normally focus traversable, such\n as JLabel, are not made focus traversable as a result\n of invoking this method.","params":[{"type_long":"javax.swing.JComponent","name":"component","comment":"a JComponent object to add","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Removes a component from tooltip control.\n@param component a <code>JComponent<\/code> object to remove","static":false,"name":"unregisterComponent","comment":"Removes a component from tooltip control.","params":[{"type_long":"javax.swing.JComponent","name":"component","comment":"a JComponent object to remove","type_short":"JComponent"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"getDismissDelay","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"getReshowDelay","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isEnabled","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"getInitialDelay","comment":"","params":[],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":false,"name":"isLightWeightPopupEnabled","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"","static":false,"name":"setLightWeightPopupEnabled","comment":"","params":[{"type_long":"boolean","name":"aFlag","comment":"","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"toString","comment":"","params":[],"throws":[],"return":{"type_long":"java.lang.String","comment":"","type_short":"String"}},{"javadoc":"","static":true,"name":"setToolTipText","comment":"","params":[{"type_long":"javax.swing.JComponent","name":"c","comment":"","type_short":"JComponent"},{"type_long":"java.lang.String","name":"text","comment":"","type_short":"String"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":true,"name":"sharedInstance","comment":"","params":[],"throws":[],"return":{"type_long":"docking.ToolTipManager","comment":"","type_short":"ToolTipManager"}},{"javadoc":"Enables or disables the tooltip.\n@param flag true to enable the tip, false otherwise","static":false,"name":"setEnabled","comment":"Enables or disables the tooltip.","params":[{"type_long":"boolean","name":"flag","comment":"true to enable the tip, false otherwise","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Specifies the initial delay value.\n@param milliseconds the number of milliseconds to delay\n        (after the cursor has paused) before displaying the\n        tooltip\n@see #getInitialDelay","static":false,"name":"setInitialDelay","comment":"Specifies the initial delay value.","params":[{"type_long":"int","name":"milliseconds","comment":"the number of milliseconds to delay\n        (after the cursor has paused) before displaying the\n        tooltip","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Specifies the dismissal delay value.\n@param milliseconds the number of milliseconds to delay\n        before taking away the tooltip\n@see #getDismissDelay","static":false,"name":"setDismissDelay","comment":"Specifies the dismissal delay value.","params":[{"type_long":"int","name":"milliseconds","comment":"the number of milliseconds to delay\n        before taking away the tooltip","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Used to specify the amount of time before the user has to wait\n <code>initialDelay<\/code> milliseconds before a tooltip will be\n shown. That is, if the tooltip is hidden, and the user moves into\n a region of the same Component that has a valid tooltip within\n <code>milliseconds<\/code> milliseconds the tooltip will immediately\n be shown. Otherwise, if the user moves into a region with a valid\n tooltip after <code>milliseconds<\/code> milliseconds, the user\n will have to wait an additional <code>initialDelay<\/code>\n milliseconds before the tooltip is shown again.\n@param milliseconds time in milliseconds\n@see #getReshowDelay","static":false,"name":"setReshowDelay","comment":"Used to specify the amount of time before the user has to wait\n initialDelay milliseconds before a tooltip will be\n shown. That is, if the tooltip is hidden, and the user moves into\n a region of the same Component that has a valid tooltip within\n milliseconds milliseconds the tooltip will immediately\n be shown. Otherwise, if the user moves into a region with a valid\n tooltip after milliseconds milliseconds, the user\n will have to wait an additional initialDelay\n milliseconds before the tooltip is shown again.","params":[{"type_long":"int","name":"milliseconds","comment":"time in milliseconds","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Hides any open tooltip window","static":false,"name":"hideTipWindow","comment":"Hides any open tooltip window","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"ToolTipManager","comment":"A tooltip manager that simply delegates to the Swing tooltip manager.  This class replaces\n the previous tooltip manager that overrode much of the Swing tooltip manager's functionality.","fields":[]}

{"implements":["javax.swing.Scrollable"],"javadoc":"A panel that is scrollable and uses a VariableHeightLayoutManager that\n deals with components of varying heights.","static":false,"extends":"javax.swing.JPanel","methods":[{"javadoc":"Construct a new VariableHeigthPanel.\n@param pack true means to fit as many components on a row, not worrying about lining up \n        columns; false means to fit as many components on a row, and line up the columns \n        as if in a grid\n@param hgap horizontal gap between components\n@param vgap vertical gap between components","static":false,"name":"<init>","comment":"Construct a new VariableHeigthPanel.","params":[{"type_long":"boolean","name":"pack","comment":"true means to fit as many components on a row, not worrying about lining up \n        columns; false means to fit as many components on a row, and line up the columns \n        as if in a grid","type_short":"boolean"},{"type_long":"int","name":"hgap","comment":"horizontal gap between components","type_short":"int"},{"type_long":"int","name":"vgap","comment":"vertical gap between components","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setBounds","comment":"","params":[{"type_long":"int","name":"x","comment":"","type_short":"int"},{"type_long":"int","name":"y","comment":"","type_short":"int"},{"type_long":"int","name":"width","comment":"","type_short":"int"},{"type_long":"int","name":"height","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"setBounds","comment":"","params":[{"type_long":"java.awt.Rectangle","name":"r","comment":"","type_short":"Rectangle"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"This method is in place because the clients of this panel are not the ones that \n construct this panel and thus cannot create the desired type of layout at construction time.\n <b>This method has no effect if this panel was constructed with <code>pack<\/code> set to\n false, which makes this panel use a grid style layout.\n@param singleLineLayout True signals to put all children on a single row; false will use\n        as many rows as are needed to layout all of the children.","static":false,"name":"setUseSingleLineLayout","comment":"This method is in place because the clients of this panel are not the ones that \n construct this panel and thus cannot create the desired type of layout at construction time.\n This method has no effect if this panel was constructed with pack set to\n false, which makes this panel use a grid style layout.","params":[{"type_long":"boolean","name":"singleLineLayout","comment":"True signals to put all children on a single row; false will use\n        as many rows as are needed to layout all of the children.","type_short":"boolean"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the preferred size of the layout manager of this panel.","static":false,"name":"getPreferredLayoutSize","comment":"Return the preferred size of the layout manager of this panel.","params":[],"throws":[],"return":{"type_long":"java.awt.Dimension","comment":"","type_short":"Dimension"}},{"javadoc":"@see javax.swing.Scrollable#getScrollableTracksViewportHeight()","static":false,"name":"getScrollableTracksViewportHeight","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see javax.swing.Scrollable#getScrollableTracksViewportWidth()","static":false,"name":"getScrollableTracksViewportWidth","comment":"","params":[],"throws":[],"return":{"type_long":"boolean","comment":"","type_short":"boolean"}},{"javadoc":"@see javax.swing.Scrollable#getPreferredScrollableViewportSize()","static":false,"name":"getPreferredScrollableViewportSize","comment":"","params":[],"throws":[],"return":{"type_long":"java.awt.Dimension","comment":"","type_short":"Dimension"}},{"javadoc":"@see javax.swing.Scrollable#getScrollableBlockIncrement(java.awt.Rectangle, int, int)","static":false,"name":"getScrollableBlockIncrement","comment":"","params":[{"type_long":"java.awt.Rectangle","name":"visibleRect","comment":"","type_short":"Rectangle"},{"type_long":"int","name":"orientation","comment":"","type_short":"int"},{"type_long":"int","name":"direction","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"@see javax.swing.Scrollable#getScrollableUnitIncrement(java.awt.Rectangle, int, int)","static":false,"name":"getScrollableUnitIncrement","comment":"","params":[{"type_long":"java.awt.Rectangle","name":"visibleRect","comment":"","type_short":"Rectangle"},{"type_long":"int","name":"orientation","comment":"","type_short":"int"},{"type_long":"int","name":"direction","comment":"","type_short":"int"}],"throws":[],"return":{"type_long":"int","comment":"","type_short":"int"}},{"javadoc":"","static":true,"name":"main","comment":"","params":[{"type_long":"java.lang.String[]","name":"args","comment":"","type_short":"java.lang.String[]"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"VariableHeightPanel","comment":"A panel that is scrollable and uses a VariableHeightLayoutManager that\n deals with components of varying heights.","fields":[]}

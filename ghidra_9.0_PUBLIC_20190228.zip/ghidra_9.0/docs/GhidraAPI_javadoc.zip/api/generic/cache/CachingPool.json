{"implements":[],"javadoc":"A thread-safe pool class that knows how to create instances as needed.  When clients are done\n with the pooled item they then call {@link #release(Object)}.\n@param <T> the type of object to pool","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[{"type_long":"generic.cache.BasicFactory<T>","name":"factory","comment":"","type_short":"BasicFactory"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Sets the time to wait for released items to be automatically disposed.  The \n default is {@link #TIMEOUT}.\n@param timeout the new timeout.","static":false,"name":"setCleanupTimeout","comment":"Sets the time to wait for released items to be automatically disposed.  The \n default is #TIMEOUT.","params":[{"type_long":"long","name":"timeout","comment":"the new timeout.","type_short":"long"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Returns a cached or new {@link T}\n@return a cached or new {@link T}\n@throws Exception if there is a problem instantiating a new instance","static":false,"name":"get","comment":"Returns a cached or new T","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"if there is a problem instantiating a new instance","type_short":"Exception"}],"return":{"type_long":"T","comment":"a cached or new T","type_short":"T"}},{"javadoc":"","static":false,"name":"release","comment":"","params":[{"type_long":"T","name":"t","comment":"","type_short":"T"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"dispose","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"CachingPool","comment":"A thread-safe pool class that knows how to create instances as needed.  When clients are done\n with the pooled item they then call #release(Object).","fields":[]}

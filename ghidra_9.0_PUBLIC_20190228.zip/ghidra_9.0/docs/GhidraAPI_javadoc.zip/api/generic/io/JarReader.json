{"implements":[],"javadoc":"JarReader is a class for reading from a jar input stream.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"Creates a JarReader\n@param jarIn the the jar file input stream the zip entries are\n read from.","static":false,"name":"<init>","comment":"Creates a JarReader","params":[{"type_long":"java.util.jar.JarInputStream","name":"jarIn","comment":"the the jar file input stream the zip entries are\n read from.","type_short":"JarInputStream"}],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Recursively reads the files from the jar input stream and creates the\n respetive directories and files in the file system.\n <P>It effectively unzips the Jar file.\n Warning: This will overwrite any files that already exist on the file \n system as it outputs the jar contents.\n@param basePath the base path for where to output the JarInputStream \n file contents to.\n@throws FileNotFoundException if the file exists but is a directory\n                   rather than a regular file, does not exist but cannot\n                   be created, or cannot be opened for any other reason\n@throws IOException if it can't read the jar file or output one\n or more of its files.","static":false,"name":"createRecursively","comment":"Recursively reads the files from the jar input stream and creates the\n respetive directories and files in the file system.\n It effectively unzips the Jar file.\n Warning: This will overwrite any files that already exist on the file \n system as it outputs the jar contents.","params":[{"type_long":"java.lang.String","name":"basePath","comment":"the base path for where to output the JarInputStream \n file contents to.","type_short":"String"},{"type_long":"ghidra.util.task.TaskMonitor","name":"monitor","comment":"","type_short":"TaskMonitor"}],"throws":[{"type_long":"java.io.FileNotFoundException","comment":"if the file exists but is a directory\n                   rather than a regular file, does not exist but cannot\n                   be created, or cannot be opened for any other reason","type_short":"FileNotFoundException"},{"type_long":"java.io.IOException","comment":"if it can't read the jar file or output one\n or more of its files.","type_short":"IOException"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Return the jar input stream being used by this JarReader.","static":false,"name":"getJarInputStream","comment":"Return the jar input stream being used by this JarReader.","params":[],"throws":[],"return":{"type_long":"java.util.jar.JarInputStream","comment":"","type_short":"JarInputStream"}}],"name":"JarReader","comment":"JarReader is a class for reading from a jar input stream.","fields":[]}

{"implements":[],"javadoc":"This class tests equality calculations of the {@link LSHVector} class.","static":false,"extends":"java.lang.Object","methods":[{"javadoc":"","static":false,"name":"<init>","comment":"","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Creates data objects for use in all tests.\n@see HashEntry\n@throws Exception","static":false,"name":"setUp","comment":"Creates data objects for use in all tests.","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"","static":false,"name":"tearDown","comment":"","params":[],"throws":[{"type_long":"java.lang.Exception","comment":"","type_short":"Exception"}],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays are null\n   \n Expected Result: EQUAL","static":false,"name":"testEquality1","comment":"Test:\n   1. Hash arrays are null\n   \n Expected Result: EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays are the same size\n   2. Elements are NULL\n   \n Expected Result: EQUAL","static":false,"name":"testEquality2","comment":"Test:\n   1. Hash arrays are the same size\n   2. Elements are NULL\n   \n Expected Result: EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays are different sizes\n   2. Elements are NULL\n   \n Expected Result: NOT EQUAL","static":false,"name":"testEquality3","comment":"Test:\n   1. Hash arrays are different sizes\n   2. Elements are NULL\n   \n Expected Result: NOT EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays are the same size\n   2. Hash arrays contain the same elements\n   3. Elements are in the same order\n   4. Elements contain the same values\n   \n   Note: entry1 and entry2 in this test contain the same values. This test is meant to \n         verify that ordering does not matter in checking equality of the arrays, so the\n         contents of the hash entry elements is kept the same to remove that as a variable.\n   \n Expected Result: EQUAL","static":false,"name":"testEquality4","comment":"Test:\n   1. Hash arrays are the same size\n   2. Hash arrays contain the same elements\n   3. Elements are in the same order\n   4. Elements contain the same values\n   \n   Note: entry1 and entry2 in this test contain the same values. This test is meant to \n         verify that ordering does not matter in checking equality of the arrays, so the\n         contents of the hash entry elements is kept the same to remove that as a variable.\n   \n Expected Result: EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays are the same size\n   2. Hash arrays contain the same elements \n   3. Elements are NOT in the same order\n   4. Elements contain the same values\n   \n   Note: entry1 and entry2 in this test contain the same values. This test is meant to \n         verify that ordering does not matter in checking equality of the arrays, so the\n         contents of the hash entry elements is kept the same to remove that as a variable.\n   \n Expected Result: EQUAL","static":false,"name":"testEquality5","comment":"Test:\n   1. Hash arrays are the same size\n   2. Hash arrays contain the same elements \n   3. Elements are NOT in the same order\n   4. Elements contain the same values\n   \n   Note: entry1 and entry2 in this test contain the same values. This test is meant to \n         verify that ordering does not matter in checking equality of the arrays, so the\n         contents of the hash entry elements is kept the same to remove that as a variable.\n   \n Expected Result: EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays are the same size\n   2. Hash arrays contain the same elements \n   3. Elements are in the same order\n   4. Elements do NOT contain the same values\n   \n Expected Result: EQUAL","static":false,"name":"testEquality6","comment":"Test:\n   1. Hash arrays are the same size\n   2. Hash arrays contain the same elements \n   3. Elements are in the same order\n   4. Elements do NOT contain the same values\n   \n Expected Result: EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays same size\n   2. Hash arrays contain same elements\n   3. Elements are NOT in the same order\n   4. Elements do NOT contain the same values\n   \n Expected Result: NOT EQUAL","static":false,"name":"testEquality7","comment":"Test:\n   1. Hash arrays same size\n   2. Hash arrays contain same elements\n   3. Elements are NOT in the same order\n   4. Elements do NOT contain the same values\n   \n Expected Result: NOT EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays same size\n   2. Hash arrays contain different elements\n   \n Expected Result: NOT EQUAL","static":false,"name":"testEquality8","comment":"Test:\n   1. Hash arrays same size\n   2. Hash arrays contain different elements\n   \n Expected Result: NOT EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays different size\n   \n Expected Result: NOT EQUAL","static":false,"name":"testEquality9","comment":"Test:\n   1. Hash arrays different size\n   \n Expected Result: NOT EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays are identical except for the {@link HashEntry#getCoeff()} value. These vectors should\n   still be considered equal.\n   \n Expected Result: EQUAL","static":false,"name":"testEquality10","comment":"Test:\n   1. Hash arrays are identical except for the HashEntry#getCoeff() value. These vectors should\n   still be considered equal.\n   \n Expected Result: EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays are identical except for the {@link HashEntry#getTF()} value.\n   \n Expected Result: NOT EQUAL","static":false,"name":"testEquality11","comment":"Test:\n   1. Hash arrays are identical except for the HashEntry#getTF() value.\n   \n Expected Result: NOT EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Hash arrays are identical except for the {@link HashEntry#getCoeff()} value.\n   \n Expected Result: NOT EQUAL","static":false,"name":"testEquality12","comment":"Test:\n   1. Hash arrays are identical except for the HashEntry#getCoeff() value.\n   \n Expected Result: NOT EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Elements contain the same IDF values calculated by {@link WeightFactory}\n   \n Expected Result: EQUAL","static":false,"name":"testEquality13","comment":"Test:\n   1. Elements contain the same IDF values calculated by WeightFactory\n   \n Expected Result: EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}},{"javadoc":"Test:\n   1. Elements contain different IDF values calculated by {@link WeightFactory}\n   \n Expected Result: NOT EQUAL","static":false,"name":"testEquality14","comment":"Test:\n   1. Elements contain different IDF values calculated by WeightFactory\n   \n Expected Result: NOT EQUAL","params":[],"throws":[],"return":{"type_long":"void","comment":"","type_short":"void"}}],"name":"LSHVectorEqualityTest","comment":"This class tests equality calculations of the LSHVector class.","fields":[]}
